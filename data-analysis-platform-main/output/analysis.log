2025-08-14 15:05:48,835 - __main__ - INFO - 开始智能数据分析
2025-08-14 15:05:56,490 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 15:05:56,490 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 15:05:56,490 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 15:05:56,490 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 15:05:56,515 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:05:56,536 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:05:56,537 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 15:05:56,537 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 15:05:56,537 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 15:05:56,540 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:05:56,649 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 15:05:56,649 - core.llm_analyzer - INFO - 对比模型: attribution_analysis
2025-08-14 15:05:56,649 - core.llm_analyzer - INFO - 模型 attribution_analysis 可执行，匹配度: 100.00%
2025-08-14 15:05:56,649 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 15:05:56,649 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 5 个模型
2025-08-14 15:05:56,650 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 5 个算法
2025-08-14 15:05:56,650 - __main__ - INFO - 开始执行5个算法
2025-08-14 15:05:56,650 - core.algorithm_executor - INFO - 开始执行算法: 归因分析
2025-08-14 15:05:56,650 - core.algorithm_executor - INFO - 算法 归因分析 执行完成
2025-08-14 15:05:56,650 - __main__ - WARNING - 算法 归因分析 执行失败: 不支持的算法: 归因分析
2025-08-14 15:05:56,650 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 15:05:56,650 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 15:05:56,650 - __main__ - WARNING - 算法 相关性分析 执行失败: 未指定数值列
2025-08-14 15:05:56,650 - core.algorithm_executor - INFO - 开始执行算法: 时间序列分析
2025-08-14 15:05:56,650 - core.algorithm_executor - INFO - 算法 时间序列分析 执行完成
2025-08-14 15:05:56,650 - __main__ - WARNING - 算法 时间序列分析 执行失败: 不支持的算法: 时间序列分析
2025-08-14 15:05:56,650 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 15:05:56,650 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 15:05:56,650 - __main__ - WARNING - 算法 分类分析 执行失败: 不支持的算法: 分类分析
2025-08-14 15:05:56,650 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 15:05:57,045 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 15:05:57,045 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 15:05:57,045 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 15:05:57,045 - core.report_generator - INFO - 算法结果键: ['归因分析', '相关性分析', '时间序列分析', '分类分析', '描述统计']
2025-08-14 15:05:57,468 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 15:05:57,468 - core.report_generator - INFO - 生成数据概览
2025-08-14 15:05:57,712 - core.report_generator - INFO - 生成算法结果
2025-08-14 15:05:57,712 - core.report_generator - INFO - 生成关键洞察
2025-08-14 15:05:57,712 - core.report_generator - INFO - 生成局限与建议
2025-08-14 15:05:57,712 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 15:05:57,712 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_150557.md
2025-08-14 15:05:57,712 - __main__ - INFO - 智能数据分析完成
2025-08-14 15:15:47,024 - __main__ - INFO - 开始智能数据分析
2025-08-14 15:15:54,720 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 15:15:54,720 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 15:15:54,720 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 15:15:54,720 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 15:15:54,742 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:15:54,759 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:15:54,760 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 15:15:54,760 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 15:15:54,760 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 15:15:54,764 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:15:54,868 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 15:15:54,868 - core.llm_analyzer - INFO - 对比模型: attribution_analysis
2025-08-14 15:15:54,869 - core.llm_analyzer - INFO - 模型 attribution_analysis 可执行，匹配度: 100.00%
2025-08-14 15:15:54,869 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 15:15:54,869 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 15:15:54,869 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 15:15:54,869 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:15:54,869 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 15:15:54,869 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 15:15:54,869 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:15:54,869 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 15:15:54,870 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 15:15:54,870 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 15:15:54,870 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 15:15:54,870 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 15:15:54,870 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 15:15:54,870 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 5 个模型
2025-08-14 15:15:54,870 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 5 个算法
2025-08-14 15:15:54,870 - __main__ - INFO - 开始执行5个算法
2025-08-14 15:15:54,870 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 15:15:54,887 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 15:15:54,938 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 15:15:54,938 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 15:15:54,938 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 15:15:54,938 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 15:15:54,938 - __main__ - WARNING - 算法 相关性分析 执行失败: 未指定数值列
2025-08-14 15:15:54,938 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 15:15:54,938 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 15:15:54,939 - __main__ - WARNING - 算法 时间趋势分析 执行失败: 缺少日期列或数值列
2025-08-14 15:15:54,939 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 15:15:54,939 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 15:15:54,939 - __main__ - WARNING - 算法 分类分析 执行失败: 不支持的算法: 分类分析
2025-08-14 15:15:54,939 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 15:15:55,333 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 15:15:55,333 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 15:15:55,333 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 15:15:55,333 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 15:15:55,697 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 15:15:55,697 - core.report_generator - INFO - 生成数据概览
2025-08-14 15:15:55,939 - core.report_generator - INFO - 生成算法结果
2025-08-14 15:15:55,939 - core.report_generator - INFO - 生成关键洞察
2025-08-14 15:15:55,939 - core.report_generator - INFO - 生成局限与建议
2025-08-14 15:15:55,939 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 15:15:55,940 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_151555.md
2025-08-14 15:15:55,940 - __main__ - INFO - 智能数据分析完成
2025-08-14 15:30:32,442 - __main__ - INFO - 开始智能数据分析
2025-08-14 15:30:39,908 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 15:30:39,908 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 15:30:39,908 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 15:30:39,908 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 15:30:39,930 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:30:39,948 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:30:39,949 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 15:30:39,949 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 15:30:39,949 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 15:30:39,953 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:30:40,058 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 15:30:40,058 - core.llm_analyzer - INFO - 对比模型: attribution_analysis
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 模型 attribution_analysis 可执行，匹配度: 100.00%
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 5 个模型
2025-08-14 15:30:40,059 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 5 个算法
2025-08-14 15:30:40,059 - __main__ - INFO - 算法执行条件不满足，仅输出算法清单
2025-08-14 15:30:40,059 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 15:30:40,059 - core.report_generator - INFO - 算法结果键: []
2025-08-14 15:30:40,059 - __main__ - INFO - 智能数据分析完成
2025-08-14 15:32:00,042 - __main__ - INFO - 开始智能数据分析
2025-08-14 15:32:07,506 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 15:32:07,506 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 15:32:07,506 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 15:32:07,506 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 15:32:07,527 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:32:07,544 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:32:07,544 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 15:32:07,544 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 15:32:07,544 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 15:32:07,548 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:32:07,650 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 15:32:07,650 - core.llm_analyzer - INFO - 对比模型: attribution_analysis
2025-08-14 15:32:07,651 - core.llm_analyzer - INFO - 模型 attribution_analysis 可执行，匹配度: 100.00%
2025-08-14 15:32:07,651 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 15:32:07,651 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 15:32:07,651 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 15:32:07,651 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:32:07,651 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 15:32:07,651 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 15:32:07,651 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:32:07,651 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 15:32:07,652 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 15:32:07,652 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 15:32:07,652 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 15:32:07,652 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 15:32:07,652 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 15:32:07,652 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 5 个模型
2025-08-14 15:32:07,652 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 5 个算法
2025-08-14 15:32:07,652 - __main__ - INFO - 开始执行5个算法
2025-08-14 15:32:07,652 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 15:32:07,670 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 15:32:07,722 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 15:32:07,722 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 15:32:07,722 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 15:32:07,723 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 15:32:07,723 - __main__ - WARNING - 算法 相关性分析 执行失败: 数据验证失败: ['数值列数量不足，无法进行相关性分析']
2025-08-14 15:32:07,723 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 15:32:07,733 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 15:32:07,733 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 15:32:07,733 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 15:32:07,736 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 15:32:07,736 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 15:32:07,736 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 15:32:08,117 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 15:32:08,118 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 15:32:08,118 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 15:32:08,118 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 15:32:08,871 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 15:32:08,871 - core.report_generator - INFO - 生成数据概览
2025-08-14 15:32:09,114 - core.report_generator - INFO - 生成算法结果
2025-08-14 15:32:09,114 - core.report_generator - INFO - 生成关键洞察
2025-08-14 15:32:09,114 - core.report_generator - INFO - 生成局限与建议
2025-08-14 15:32:09,114 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 15:32:09,114 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_153209.md
2025-08-14 15:32:09,114 - __main__ - INFO - 智能数据分析完成
2025-08-14 15:45:29,503 - __main__ - INFO - 开始智能数据分析
2025-08-14 15:45:37,042 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 15:45:37,042 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 15:45:37,042 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 15:45:37,042 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 15:45:37,066 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:45:37,080 - core.llm_analyzer - ERROR - 快速体检失败: name 'schema_path' is not defined
2025-08-14 15:47:05,350 - __main__ - INFO - 开始智能数据分析
2025-08-14 15:47:12,804 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 15:47:12,804 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 15:47:12,804 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 15:47:12,804 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 15:47:12,825 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:47:12,842 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:47:12,843 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 15:47:12,844 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 15:47:12,844 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 15:47:12,848 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:47:12,954 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 15:47:12,954 - core.llm_analyzer - INFO - 对比模型: attribution_analysis
2025-08-14 15:47:12,955 - core.llm_analyzer - INFO - 模型 attribution_analysis 可执行，匹配度: 100.00%
2025-08-14 15:47:12,955 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 15:47:12,955 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 15:47:12,955 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 15:47:12,955 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:47:12,955 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 15:47:12,955 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 15:47:12,955 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:47:12,955 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 15:47:12,956 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 15:47:12,956 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 15:47:12,956 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 15:47:12,956 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 15:47:12,956 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 15:47:12,956 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 5 个模型
2025-08-14 15:47:12,956 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 5 个算法
2025-08-14 15:47:12,956 - __main__ - INFO - 开始执行5个算法
2025-08-14 15:47:12,956 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 15:47:12,973 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 15:47:13,024 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 15:47:13,024 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 15:47:13,024 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 15:47:13,024 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 15:47:13,024 - __main__ - WARNING - 算法 相关性分析 执行失败: 数据验证失败: ['数值列数量不足，无法进行相关性分析']
2025-08-14 15:47:13,024 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 15:47:13,032 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 15:47:13,032 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 15:47:13,032 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 15:47:13,035 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 15:47:13,035 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 15:47:13,035 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 15:47:13,429 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 15:47:13,429 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 15:47:13,429 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 15:47:13,429 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 15:47:14,189 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 15:47:14,189 - core.report_generator - INFO - 生成数据概览
2025-08-14 15:47:14,427 - core.report_generator - INFO - 生成算法结果
2025-08-14 15:47:14,427 - core.report_generator - INFO - 生成关键洞察
2025-08-14 15:47:14,427 - core.report_generator - INFO - 生成局限与建议
2025-08-14 15:47:14,427 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 15:47:14,427 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_154714.md
2025-08-14 15:47:14,427 - __main__ - INFO - 智能数据分析完成
2025-08-14 15:51:16,055 - __main__ - INFO - 开始智能数据分析
2025-08-14 15:51:23,524 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 15:51:23,524 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 15:51:23,524 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 15:51:23,524 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 15:51:23,545 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:51:23,563 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:51:23,563 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 15:51:23,564 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 15:51:23,564 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 15:51:23,567 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:51:23,671 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 15:51:23,671 - core.llm_analyzer - INFO - 对比模型: attribution_analysis
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 模型 attribution_analysis 可执行，匹配度: 100.00%
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 5 个模型
2025-08-14 15:51:23,672 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 5 个算法
2025-08-14 15:51:23,672 - __main__ - INFO - 开始执行5个算法
2025-08-14 15:51:23,672 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 15:51:23,689 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 15:51:23,738 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 15:51:23,738 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 15:51:23,738 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 15:51:23,738 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 15:51:23,738 - __main__ - WARNING - 算法 相关性分析 执行失败: 数据验证失败: ['数值列数量不足，无法进行相关性分析']
2025-08-14 15:51:23,738 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 15:51:23,746 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 15:51:23,746 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 15:51:23,746 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 15:51:23,749 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 15:51:23,749 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 15:51:23,749 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 15:51:24,141 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 15:51:24,142 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 15:51:24,142 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 15:51:24,142 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 15:51:24,897 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 15:51:24,897 - core.report_generator - INFO - 生成数据概览
2025-08-14 15:51:25,139 - core.report_generator - INFO - 生成算法结果
2025-08-14 15:51:25,139 - core.report_generator - INFO - 生成关键洞察
2025-08-14 15:51:25,139 - core.report_generator - INFO - 生成局限与建议
2025-08-14 15:51:25,139 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 15:51:25,139 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_155125.md
2025-08-14 15:51:25,139 - __main__ - INFO - 智能数据分析完成
2025-08-14 15:53:19,245 - __main__ - INFO - 开始智能数据分析
2025-08-14 15:53:26,750 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 15:53:26,750 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 15:53:26,750 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 15:53:26,750 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 15:53:26,772 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:53:26,790 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:53:26,790 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 15:53:26,790 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 15:53:26,790 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 15:53:26,794 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 15:53:26,896 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 15:53:26,896 - core.llm_analyzer - INFO - 对比模型: attribution_analysis
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 模型 attribution_analysis 可执行，匹配度: 100.00%
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 5 个模型
2025-08-14 15:53:26,897 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 5 个算法
2025-08-14 15:53:26,897 - __main__ - INFO - 开始执行5个算法
2025-08-14 15:53:26,897 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 15:53:26,913 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 15:53:26,963 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 15:53:26,963 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 15:53:26,963 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 15:53:26,966 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 15:53:26,966 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-14 15:53:26,966 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 15:53:26,974 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 15:53:26,974 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 15:53:26,974 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 15:53:26,977 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 15:53:26,977 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 15:53:26,977 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 15:53:27,363 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 15:53:27,363 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 15:53:27,363 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 15:53:27,363 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 15:53:28,518 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 15:53:28,518 - core.report_generator - INFO - 生成数据概览
2025-08-14 15:53:28,760 - core.report_generator - INFO - 生成算法结果
2025-08-14 15:53:28,760 - core.report_generator - INFO - 生成关键洞察
2025-08-14 15:53:28,760 - core.report_generator - INFO - 生成局限与建议
2025-08-14 15:53:28,760 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 15:53:28,761 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_155328.md
2025-08-14 15:53:28,761 - __main__ - INFO - 智能数据分析完成
2025-08-14 16:04:15,511 - __main__ - INFO - 开始智能数据分析
2025-08-14 16:04:22,904 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 16:04:22,904 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 16:04:22,904 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 16:04:22,904 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 16:04:22,926 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:04:22,945 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:04:22,946 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 16:04:22,946 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 16:04:22,946 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 16:04:22,950 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:04:23,053 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 16:04:23,053 - core.llm_analyzer - INFO - 对比模型: attribution_analysis
2025-08-14 16:04:23,054 - core.llm_analyzer - INFO - 模型 attribution_analysis 可执行，匹配度: 100.00%
2025-08-14 16:04:23,054 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:04:23,054 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 16:04:23,054 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 16:04:23,054 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-14 16:04:23,054 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 16:04:23,054 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 16:04:23,054 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 16:04:23,054 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 16:04:23,055 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 16:04:23,055 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 16:04:23,055 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 16:04:23,055 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 16:04:23,055 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 16:04:23,055 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 5 个模型
2025-08-14 16:04:23,055 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 5 个算法
2025-08-14 16:04:23,055 - __main__ - INFO - 开始执行5个算法
2025-08-14 16:04:23,055 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 16:04:23,073 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:04:23,124 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 16:04:23,124 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 16:04:23,124 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 16:04:23,127 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 16:04:23,127 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-14 16:04:23,127 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 16:04:23,136 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 16:04:23,136 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 16:04:23,136 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 16:04:23,139 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 16:04:23,139 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 16:04:23,139 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 16:04:23,523 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 16:04:23,523 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 16:04:23,523 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 16:04:23,523 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 16:04:24,707 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 16:04:24,707 - core.report_generator - INFO - 生成数据概览
2025-08-14 16:04:24,948 - core.report_generator - INFO - 生成算法结果
2025-08-14 16:04:24,948 - core.report_generator - INFO - 生成关键洞察
2025-08-14 16:04:24,948 - core.report_generator - INFO - 生成局限与建议
2025-08-14 16:04:24,948 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 16:04:24,948 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_160424.md
2025-08-14 16:04:24,948 - __main__ - INFO - 智能数据分析完成
2025-08-14 16:14:13,102 - __main__ - INFO - 开始智能数据分析
2025-08-14 16:14:20,927 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 16:14:20,927 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 16:14:20,927 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 16:14:20,927 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 16:14:20,949 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:14:20,974 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:14:20,976 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 16:14:20,976 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 16:14:20,976 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 16:14:20,994 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:14:21,115 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 对比模型: attribution_analysis
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 模型 attribution_analysis 可执行，匹配度: 100.00%
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 16:14:21,116 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 5 个模型
2025-08-14 16:14:21,117 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 5 个算法
2025-08-14 16:14:21,117 - __main__ - INFO - 开始执行5个算法
2025-08-14 16:14:21,117 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 16:14:21,135 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:14:21,188 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 16:14:21,188 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 16:14:21,188 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 16:14:21,192 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 16:14:21,192 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-14 16:14:21,192 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 16:14:21,202 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 16:14:21,202 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 16:14:21,202 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 16:14:21,205 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 16:14:21,205 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 16:14:21,205 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 16:14:21,629 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 16:14:21,629 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 16:14:21,629 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 16:14:21,629 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 16:14:22,924 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 16:14:22,924 - core.report_generator - INFO - 生成数据概览
2025-08-14 16:14:23,190 - core.report_generator - INFO - 生成算法结果
2025-08-14 16:14:23,190 - core.report_generator - INFO - 生成关键洞察
2025-08-14 16:14:23,190 - core.report_generator - INFO - 生成局限与建议
2025-08-14 16:14:23,190 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 16:14:23,190 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_161423.md
2025-08-14 16:14:23,190 - __main__ - INFO - 智能数据分析完成
2025-08-14 16:17:13,435 - __main__ - INFO - 开始智能数据分析
2025-08-14 16:17:20,561 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 16:17:20,561 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 16:17:20,561 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 16:17:20,561 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 16:17:20,579 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:17:20,595 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:17:20,596 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 16:17:20,596 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 16:17:20,596 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 16:17:20,599 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:17:20,698 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 16:17:20,698 - core.llm_analyzer - INFO - 对比模型: attribution_analysis
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 模型 attribution_analysis 可执行，匹配度: 100.00%
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 5 个模型
2025-08-14 16:17:20,699 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 5 个算法
2025-08-14 16:17:20,699 - __main__ - INFO - 开始执行5个算法
2025-08-14 16:17:20,699 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 16:17:20,714 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:17:20,759 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 16:17:20,760 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 16:17:20,760 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 16:17:20,762 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 16:17:20,762 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-14 16:17:20,762 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 16:17:20,769 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 16:17:20,769 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 16:17:20,769 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 16:17:20,772 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 16:17:20,772 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 16:17:20,772 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 16:17:21,154 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 16:17:21,154 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 16:17:21,154 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 16:17:21,154 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 16:17:22,264 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 16:17:22,264 - core.report_generator - INFO - 生成数据概览
2025-08-14 16:17:22,501 - core.report_generator - INFO - 生成算法结果
2025-08-14 16:17:22,501 - core.report_generator - INFO - 生成关键洞察
2025-08-14 16:17:22,501 - core.report_generator - INFO - 生成局限与建议
2025-08-14 16:17:22,501 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 16:17:22,502 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_161722.md
2025-08-14 16:17:22,502 - __main__ - INFO - 智能数据分析完成
2025-08-14 16:28:45,155 - __main__ - INFO - 开始智能数据分析
2025-08-14 16:28:52,834 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 16:28:52,834 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 16:28:52,834 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 16:28:52,834 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 16:28:52,856 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:28:52,878 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:28:52,879 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 16:28:52,879 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 16:28:52,879 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 16:28:52,883 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:28:52,992 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 16:28:52,992 - core.llm_analyzer - INFO - 对比模型: last_click_attribution
2025-08-14 16:28:52,993 - core.llm_analyzer - INFO - 模型 last_click_attribution 可执行，匹配度: 100.00%
2025-08-14 16:28:52,993 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:28:52,993 - core.llm_analyzer - INFO - 对比模型: first_click_attribution
2025-08-14 16:28:52,994 - core.llm_analyzer - INFO - 模型 first_click_attribution 可执行，匹配度: 100.00%
2025-08-14 16:28:52,994 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:28:52,994 - core.llm_analyzer - INFO - 对比模型: markov_channel_model
2025-08-14 16:28:52,994 - core.llm_analyzer - INFO - 模型 markov_channel_model 可执行，匹配度: 100.00%
2025-08-14 16:28:52,994 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:28:52,994 - core.llm_analyzer - INFO - 对比模型: markov_absorption_model
2025-08-14 16:28:52,994 - core.llm_analyzer - INFO - 模型 markov_absorption_model 可执行，匹配度: 100.00%
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 8 个模型
2025-08-14 16:28:52,995 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 8 个算法
2025-08-14 16:28:52,995 - __main__ - INFO - 开始执行8个算法
2025-08-14 16:28:52,995 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 16:28:53,015 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:28:53,067 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 16:28:53,067 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 16:28:53,067 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-14 16:28:53,082 - core.algorithm_executor - WARNING - 首次点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:28:53,130 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-14 16:28:53,130 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-14 16:28:53,130 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-14 16:28:53,145 - core.algorithm_executor - WARNING - Markov渠道模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:28:53,421 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-14 16:28:53,421 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-14 16:28:53,421 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-14 16:28:53,421 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-14 16:28:53,421 - __main__ - WARNING - 算法 Markov吸收链模型 执行失败: 不支持的算法: Markov吸收链模型
2025-08-14 16:28:53,421 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 16:28:53,425 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 16:28:53,425 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-14 16:28:53,425 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 16:28:53,434 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 16:28:53,434 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 16:28:53,434 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 16:28:53,437 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 16:28:53,437 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 16:28:53,437 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 16:28:53,827 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 16:28:53,827 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 16:28:53,827 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 16:28:53,827 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '首次点击归因', 'Markov渠道模型', 'Markov吸收链模型', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 16:28:55,023 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 16:28:55,023 - core.report_generator - INFO - 生成数据概览
2025-08-14 16:28:55,269 - core.report_generator - INFO - 生成算法结果
2025-08-14 16:28:55,269 - core.report_generator - INFO - 生成关键洞察
2025-08-14 16:28:55,269 - core.report_generator - INFO - 生成局限与建议
2025-08-14 16:28:55,270 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 16:28:55,270 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_162855.md
2025-08-14 16:28:55,270 - __main__ - INFO - 智能数据分析完成
2025-08-14 16:33:00,490 - __main__ - INFO - 开始智能数据分析
2025-08-14 16:33:07,978 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 16:33:07,978 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 16:33:07,978 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 16:33:07,978 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 16:33:08,002 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:33:08,020 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:33:08,020 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 16:33:08,020 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 16:33:08,020 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 16:33:08,025 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:33:08,130 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 16:33:08,130 - core.llm_analyzer - INFO - 对比模型: last_click_attribution
2025-08-14 16:33:08,131 - core.llm_analyzer - INFO - 模型 last_click_attribution 可执行，匹配度: 100.00%
2025-08-14 16:33:08,131 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:33:08,131 - core.llm_analyzer - INFO - 对比模型: first_click_attribution
2025-08-14 16:33:08,131 - core.llm_analyzer - INFO - 模型 first_click_attribution 可执行，匹配度: 100.00%
2025-08-14 16:33:08,131 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:33:08,131 - core.llm_analyzer - INFO - 对比模型: markov_channel_model
2025-08-14 16:33:08,132 - core.llm_analyzer - INFO - 模型 markov_channel_model 可执行，匹配度: 100.00%
2025-08-14 16:33:08,132 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:33:08,132 - core.llm_analyzer - INFO - 对比模型: markov_absorption_model
2025-08-14 16:33:08,132 - core.llm_analyzer - INFO - 模型 markov_absorption_model 可执行，匹配度: 100.00%
2025-08-14 16:33:08,132 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:33:08,132 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 16:33:08,132 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 16:33:08,132 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-14 16:33:08,132 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 16:33:08,133 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 16:33:08,133 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 16:33:08,133 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 16:33:08,133 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 16:33:08,133 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 16:33:08,133 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 16:33:08,133 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 16:33:08,133 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 16:33:08,133 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 8 个模型
2025-08-14 16:33:08,133 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 8 个算法
2025-08-14 16:33:08,133 - __main__ - INFO - 开始执行8个算法
2025-08-14 16:33:08,133 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 16:33:08,149 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:33:08,200 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 16:33:08,200 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 16:33:08,200 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-14 16:33:08,216 - core.algorithm_executor - WARNING - 首次点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:33:08,263 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-14 16:33:08,263 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-14 16:33:08,263 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-14 16:33:08,278 - core.algorithm_executor - WARNING - Markov渠道模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:33:08,547 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-14 16:33:08,547 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-14 16:33:08,547 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-14 16:33:08,562 - core.algorithm_executor - WARNING - Markov吸收链模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:33:08,856 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-14 16:33:08,856 - __main__ - INFO - 算法 Markov吸收链模型 执行成功
2025-08-14 16:33:08,856 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 16:33:08,860 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 16:33:08,860 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-14 16:33:08,860 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 16:33:08,868 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 16:33:08,868 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 16:33:08,868 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 16:33:08,871 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 16:33:08,871 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 16:33:08,871 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 16:33:09,260 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 16:33:09,261 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 16:33:09,261 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 16:33:09,261 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '首次点击归因', 'Markov渠道模型', 'Markov吸收链模型', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 16:33:10,452 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 16:33:10,452 - core.report_generator - INFO - 生成数据概览
2025-08-14 16:33:10,700 - core.report_generator - INFO - 生成算法结果
2025-08-14 16:33:10,700 - core.report_generator - INFO - 生成关键洞察
2025-08-14 16:33:10,700 - core.report_generator - INFO - 生成局限与建议
2025-08-14 16:33:10,700 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 16:33:10,700 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_163310.md
2025-08-14 16:33:10,700 - __main__ - INFO - 智能数据分析完成
2025-08-14 16:37:09,382 - __main__ - INFO - 开始智能数据分析
2025-08-14 16:37:16,869 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 16:37:16,869 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 16:37:16,869 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 16:37:16,869 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 16:37:16,893 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:37:16,910 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:37:16,911 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 16:37:16,911 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 16:37:16,911 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 16:37:16,915 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:37:17,019 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 16:37:17,019 - core.llm_analyzer - INFO - 对比模型: last_click_attribution
2025-08-14 16:37:17,020 - core.llm_analyzer - INFO - 模型 last_click_attribution 可执行，匹配度: 100.00%
2025-08-14 16:37:17,020 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:37:17,020 - core.llm_analyzer - INFO - 对比模型: first_click_attribution
2025-08-14 16:37:17,020 - core.llm_analyzer - INFO - 模型 first_click_attribution 可执行，匹配度: 100.00%
2025-08-14 16:37:17,020 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:37:17,020 - core.llm_analyzer - INFO - 对比模型: markov_channel_model
2025-08-14 16:37:17,020 - core.llm_analyzer - INFO - 模型 markov_channel_model 可执行，匹配度: 100.00%
2025-08-14 16:37:17,020 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:37:17,020 - core.llm_analyzer - INFO - 对比模型: markov_absorption_model
2025-08-14 16:37:17,021 - core.llm_analyzer - INFO - 模型 markov_absorption_model 可执行，匹配度: 100.00%
2025-08-14 16:37:17,021 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:37:17,021 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 16:37:17,021 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 16:37:17,021 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-14 16:37:17,021 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 16:37:17,021 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 16:37:17,021 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 16:37:17,021 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 16:37:17,022 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 16:37:17,022 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 16:37:17,022 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 16:37:17,022 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 16:37:17,022 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 16:37:17,022 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 8 个模型
2025-08-14 16:37:17,022 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 8 个算法
2025-08-14 16:37:17,022 - __main__ - INFO - 开始执行8个算法
2025-08-14 16:37:17,022 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 16:37:17,039 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:37:17,091 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 16:37:17,091 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 16:37:17,091 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-14 16:37:17,109 - core.algorithm_executor - WARNING - 首次点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:37:17,156 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-14 16:37:17,157 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-14 16:37:17,157 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-14 16:37:17,172 - core.algorithm_executor - WARNING - Markov渠道模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:37:17,444 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-14 16:37:17,444 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-14 16:37:17,444 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-14 16:37:17,459 - core.algorithm_executor - WARNING - Markov吸收链模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:37:17,749 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-14 16:37:17,749 - __main__ - INFO - 算法 Markov吸收链模型 执行成功
2025-08-14 16:37:17,749 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 16:37:17,753 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 16:37:17,753 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-14 16:37:17,753 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 16:37:17,761 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 16:37:17,761 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 16:37:17,761 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 16:37:17,764 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 16:37:17,764 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 16:37:17,764 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 16:37:18,157 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 16:37:18,157 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 16:37:18,157 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 16:37:18,157 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '首次点击归因', 'Markov渠道模型', 'Markov吸收链模型', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 16:37:19,329 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 16:37:19,330 - core.report_generator - INFO - 生成数据概览
2025-08-14 16:37:19,574 - core.report_generator - INFO - 生成算法结果
2025-08-14 16:37:19,574 - core.report_generator - INFO - 生成关键洞察
2025-08-14 16:37:19,574 - core.report_generator - INFO - 生成局限与建议
2025-08-14 16:37:19,574 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 16:37:19,575 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_163719.md
2025-08-14 16:37:19,575 - __main__ - INFO - 智能数据分析完成
2025-08-14 16:43:19,745 - __main__ - INFO - 开始智能数据分析
2025-08-14 16:43:27,259 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 16:43:27,259 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 16:43:27,259 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 16:43:27,259 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 16:43:27,280 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:43:27,298 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:43:27,299 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 16:43:27,299 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 16:43:27,299 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 16:43:27,303 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:43:27,414 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 16:43:27,414 - core.llm_analyzer - INFO - 对比模型: last_click_attribution
2025-08-14 16:43:27,415 - core.llm_analyzer - INFO - 模型 last_click_attribution 可执行，匹配度: 100.00%
2025-08-14 16:43:27,415 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:43:27,415 - core.llm_analyzer - INFO - 对比模型: first_click_attribution
2025-08-14 16:43:27,415 - core.llm_analyzer - INFO - 模型 first_click_attribution 可执行，匹配度: 100.00%
2025-08-14 16:43:27,415 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:43:27,415 - core.llm_analyzer - INFO - 对比模型: markov_channel_model
2025-08-14 16:43:27,416 - core.llm_analyzer - INFO - 模型 markov_channel_model 可执行，匹配度: 100.00%
2025-08-14 16:43:27,416 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:43:27,416 - core.llm_analyzer - INFO - 对比模型: markov_absorption_model
2025-08-14 16:43:27,416 - core.llm_analyzer - INFO - 模型 markov_absorption_model 可执行，匹配度: 100.00%
2025-08-14 16:43:27,416 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:43:27,416 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 16:43:27,416 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 16:43:27,416 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-14 16:43:27,416 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 16:43:27,416 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 16:43:27,416 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 16:43:27,416 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 16:43:27,417 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 16:43:27,417 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 16:43:27,417 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 16:43:27,417 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 16:43:27,417 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 16:43:27,417 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 8 个模型
2025-08-14 16:43:27,417 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 8 个算法
2025-08-14 16:43:27,417 - __main__ - INFO - 开始执行8个算法
2025-08-14 16:43:27,417 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 16:43:27,434 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:43:27,488 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 16:43:27,488 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 16:43:27,488 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-14 16:43:27,504 - core.algorithm_executor - WARNING - 首次点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:43:27,555 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-14 16:43:27,555 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-14 16:43:27,555 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-14 16:43:27,570 - core.algorithm_executor - WARNING - Markov渠道模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:43:27,861 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-14 16:43:27,861 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-14 16:43:27,861 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-14 16:43:27,879 - core.algorithm_executor - WARNING - Markov吸收链模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:43:28,179 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-14 16:43:28,179 - __main__ - INFO - 算法 Markov吸收链模型 执行成功
2025-08-14 16:43:28,179 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 16:43:28,183 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 16:43:28,183 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-14 16:43:28,183 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 16:43:28,191 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 16:43:28,191 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 16:43:28,191 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 16:43:28,194 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 16:43:28,194 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 16:43:28,194 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 16:43:28,591 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 16:43:28,591 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 16:43:28,591 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 16:43:28,591 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '首次点击归因', 'Markov渠道模型', 'Markov吸收链模型', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 16:43:29,788 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 16:43:29,788 - core.report_generator - INFO - 生成数据概览
2025-08-14 16:43:30,033 - core.report_generator - INFO - 生成算法结果
2025-08-14 16:43:30,034 - core.report_generator - INFO - 生成关键洞察
2025-08-14 16:43:30,034 - core.report_generator - INFO - 生成局限与建议
2025-08-14 16:43:30,034 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 16:43:30,034 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_164330.md
2025-08-14 16:43:30,034 - __main__ - INFO - 智能数据分析完成
2025-08-14 16:59:26,998 - __main__ - INFO - 开始智能数据分析
2025-08-14 16:59:34,657 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 16:59:34,657 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 16:59:34,657 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 16:59:34,657 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 16:59:34,679 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:59:34,711 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:59:34,711 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 16:59:34,711 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 16:59:34,711 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 16:59:34,715 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 16:59:34,820 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 16:59:34,821 - core.llm_analyzer - INFO - 对比模型: last_click_attribution
2025-08-14 16:59:34,821 - core.llm_analyzer - INFO - 模型 last_click_attribution 可执行，匹配度: 100.00%
2025-08-14 16:59:34,821 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:59:34,821 - core.llm_analyzer - INFO - 对比模型: first_click_attribution
2025-08-14 16:59:34,822 - core.llm_analyzer - INFO - 模型 first_click_attribution 可执行，匹配度: 100.00%
2025-08-14 16:59:34,822 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:59:34,822 - core.llm_analyzer - INFO - 对比模型: markov_channel_model
2025-08-14 16:59:34,822 - core.llm_analyzer - INFO - 模型 markov_channel_model 可执行，匹配度: 100.00%
2025-08-14 16:59:34,822 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:59:34,822 - core.llm_analyzer - INFO - 对比模型: markov_absorption_model
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 模型 markov_absorption_model 可执行，匹配度: 100.00%
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 8 个模型
2025-08-14 16:59:34,823 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 8 个算法
2025-08-14 16:59:34,823 - __main__ - INFO - 开始执行8个算法
2025-08-14 16:59:34,823 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 16:59:34,842 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:59:34,896 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 16:59:34,896 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 16:59:34,896 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-14 16:59:34,912 - core.algorithm_executor - WARNING - 首次点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:59:34,961 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-14 16:59:34,961 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-14 16:59:34,961 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-14 16:59:34,977 - core.algorithm_executor - WARNING - Markov渠道模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:59:35,255 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-14 16:59:35,255 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-14 16:59:35,255 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-14 16:59:35,270 - core.algorithm_executor - WARNING - Markov吸收链模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 16:59:35,565 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-14 16:59:35,565 - __main__ - INFO - 算法 Markov吸收链模型 执行成功
2025-08-14 16:59:35,565 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 16:59:35,569 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 16:59:35,569 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-14 16:59:35,569 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 16:59:35,579 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 16:59:35,579 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 16:59:35,579 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 16:59:35,583 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 16:59:35,583 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 16:59:35,583 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 16:59:35,971 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 16:59:35,971 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 16:59:35,971 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 16:59:35,971 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '首次点击归因', 'Markov渠道模型', 'Markov吸收链模型', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 16:59:37,166 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 16:59:37,166 - core.report_generator - INFO - 生成数据概览
2025-08-14 16:59:37,406 - core.report_generator - INFO - 生成算法结果
2025-08-14 16:59:37,406 - core.report_generator - INFO - 生成关键洞察
2025-08-14 16:59:37,406 - core.report_generator - INFO - 生成局限与建议
2025-08-14 16:59:37,406 - core.report_generator - INFO - 分析报告生成完成
2025-08-14 16:59:37,406 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_165937.md
2025-08-14 16:59:37,406 - __main__ - INFO - 智能数据分析完成
2025-08-14 17:08:07,861 - __main__ - INFO - 开始智能数据分析
2025-08-14 17:08:15,416 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-14 17:08:15,417 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-14 17:08:15,417 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-14 17:08:15,417 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-14 17:08:15,440 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 17:08:15,472 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 17:08:15,472 - core.llm_analyzer - INFO - 快速体检完成
2025-08-14 17:08:15,472 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-14 17:08:15,472 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-14 17:08:15,476 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-14 17:08:15,583 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-14 17:08:15,583 - core.llm_analyzer - INFO - 对比模型: last_click_attribution
2025-08-14 17:08:15,584 - core.llm_analyzer - INFO - 模型 last_click_attribution 可执行，匹配度: 100.00%
2025-08-14 17:08:15,584 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 17:08:15,584 - core.llm_analyzer - INFO - 对比模型: first_click_attribution
2025-08-14 17:08:15,585 - core.llm_analyzer - INFO - 模型 first_click_attribution 可执行，匹配度: 100.00%
2025-08-14 17:08:15,585 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 17:08:15,585 - core.llm_analyzer - INFO - 对比模型: markov_channel_model
2025-08-14 17:08:15,585 - core.llm_analyzer - INFO - 模型 markov_channel_model 可执行，匹配度: 100.00%
2025-08-14 17:08:15,585 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 17:08:15,585 - core.llm_analyzer - INFO - 对比模型: markov_absorption_model
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 模型 markov_absorption_model 可执行，匹配度: 100.00%
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 8 个模型
2025-08-14 17:08:15,586 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 8 个算法
2025-08-14 17:08:15,586 - __main__ - INFO - 开始执行8个算法
2025-08-14 17:08:15,586 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-14 17:08:15,605 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 17:08:15,659 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-14 17:08:15,659 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-14 17:08:15,659 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-14 17:08:15,675 - core.algorithm_executor - WARNING - 首次点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 17:08:15,722 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-14 17:08:15,722 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-14 17:08:15,722 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-14 17:08:15,738 - core.algorithm_executor - WARNING - Markov渠道模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 17:08:16,016 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-14 17:08:16,016 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-14 17:08:16,016 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-14 17:08:16,031 - core.algorithm_executor - WARNING - Markov吸收链模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-14 17:08:16,328 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-14 17:08:16,328 - __main__ - INFO - 算法 Markov吸收链模型 执行成功
2025-08-14 17:08:16,328 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-14 17:08:16,332 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-14 17:08:16,332 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-14 17:08:16,332 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-14 17:08:16,347 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-14 17:08:16,347 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-14 17:08:16,347 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-14 17:08:16,350 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-14 17:08:16,350 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-14 17:08:16,350 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-14 17:08:16,751 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-14 17:08:16,751 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-14 17:08:16,751 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 17:08:16,751 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '首次点击归因', 'Markov渠道模型', 'Markov吸收链模型', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 17:08:17,961 - core.report_generator - INFO - 开始生成分析报告
2025-08-14 17:08:17,961 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-14 17:08:17,961 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '首次点击归因', 'Markov渠道模型', 'Markov吸收链模型', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-14 17:08:19,315 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-14 17:08:19,316 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250814_170819.html
2025-08-14 17:08:19,316 - __main__ - INFO - 智能数据分析完成
2025-08-15 10:24:53,892 - __main__ - INFO - 开始智能数据分析
2025-08-15 10:25:01,457 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-15 10:25:01,457 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-15 10:25:01,457 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-15 10:25:01,457 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-15 10:25:01,479 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-15 10:25:01,510 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-15 10:25:01,510 - core.llm_analyzer - INFO - 快速体检完成
2025-08-15 10:25:01,511 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-15 10:25:01,511 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-15 10:25:01,515 - core.llm_analyzer - INFO - 成功加载字段说明文档，共74个字段
2025-08-15 10:25:01,622 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-15 10:25:01,622 - core.llm_analyzer - INFO - 对比模型: last_click_attribution
2025-08-15 10:25:01,623 - core.llm_analyzer - INFO - 模型 last_click_attribution 可执行，匹配度: 100.00%
2025-08-15 10:25:01,623 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-15 10:25:01,623 - core.llm_analyzer - INFO - 对比模型: first_click_attribution
2025-08-15 10:25:01,623 - core.llm_analyzer - INFO - 模型 first_click_attribution 可执行，匹配度: 100.00%
2025-08-15 10:25:01,623 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-15 10:25:01,623 - core.llm_analyzer - INFO - 对比模型: markov_channel_model
2025-08-15 10:25:01,624 - core.llm_analyzer - INFO - 模型 markov_channel_model 可执行，匹配度: 100.00%
2025-08-15 10:25:01,624 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-15 10:25:01,624 - core.llm_analyzer - INFO - 对比模型: markov_absorption_model
2025-08-15 10:25:01,624 - core.llm_analyzer - INFO - 模型 markov_absorption_model 可执行，匹配度: 100.00%
2025-08-15 10:25:01,624 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-15 10:25:01,624 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-15 10:25:01,624 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-15 10:25:01,625 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-15 10:25:01,625 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-15 10:25:01,625 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-15 10:25:01,625 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-15 10:25:01,625 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-15 10:25:01,625 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-15 10:25:01,625 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-15 10:25:01,625 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-15 10:25:01,625 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-15 10:25:01,625 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-15 10:25:01,625 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 8 个模型
2025-08-15 10:25:01,625 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 8 个算法
2025-08-15 10:25:01,625 - __main__ - INFO - 开始执行8个算法
2025-08-15 10:25:01,625 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-15 10:25:01,644 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-15 10:25:01,699 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-15 10:25:01,699 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-15 10:25:01,700 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-15 10:25:01,716 - core.algorithm_executor - WARNING - 首次点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-15 10:25:01,764 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-15 10:25:01,764 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-15 10:25:01,764 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-15 10:25:01,780 - core.algorithm_executor - WARNING - Markov渠道模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-15 10:25:02,051 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-15 10:25:02,052 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-15 10:25:02,052 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-15 10:25:02,067 - core.algorithm_executor - WARNING - Markov吸收链模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-15 10:25:02,358 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-15 10:25:02,358 - __main__ - INFO - 算法 Markov吸收链模型 执行成功
2025-08-15 10:25:02,358 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-15 10:25:02,362 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-15 10:25:02,362 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-15 10:25:02,362 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-15 10:25:02,371 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-15 10:25:02,371 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-15 10:25:02,371 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-15 10:25:02,374 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-15 10:25:02,374 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-15 10:25:02,374 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-15 10:25:02,768 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-15 10:25:02,768 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-15 10:25:02,768 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-15 10:25:02,768 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '首次点击归因', 'Markov渠道模型', 'Markov吸收链模型', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-15 10:25:03,948 - core.report_generator - INFO - 开始生成分析报告
2025-08-15 10:25:03,948 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-15 10:25:03,948 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '首次点击归因', 'Markov渠道模型', 'Markov吸收链模型', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-15 10:25:05,281 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-15 10:25:05,282 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250815_102505.html
2025-08-15 10:25:05,282 - __main__ - INFO - 智能数据分析完成
2025-08-15 10:47:37,751 - __main__ - INFO - 开始智能数据分析
2025-08-15 10:47:45,299 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-15 10:47:45,299 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-15 10:47:45,299 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-15 10:47:45,299 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-15 10:47:45,299 - core.llm_analyzer - INFO - 智能找到字段说明文件: data/Copy of 整车订单状态指标表字段说明.xlsx
2025-08-15 10:47:45,321 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-15 10:47:45,349 - core.llm_analyzer - INFO - 智能找到字段说明文件: data/Copy of 整车订单状态指标表字段说明.xlsx
2025-08-15 10:47:45,354 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-15 10:47:45,355 - core.llm_analyzer - INFO - 快速体检完成
2025-08-15 10:47:45,355 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-15 10:47:45,355 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-15 10:47:45,355 - core.llm_analyzer - INFO - 智能找到字段说明文件: data/Copy of 整车订单状态指标表字段说明.xlsx
2025-08-15 10:47:45,360 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-15 10:47:45,473 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-15 10:47:45,473 - core.llm_analyzer - INFO - 对比模型: last_click_attribution
2025-08-15 10:47:45,474 - core.llm_analyzer - INFO - 模型 last_click_attribution 可执行，匹配度: 100.00%
2025-08-15 10:47:45,474 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-15 10:47:45,474 - core.llm_analyzer - INFO - 对比模型: first_click_attribution
2025-08-15 10:47:45,474 - core.llm_analyzer - INFO - 模型 first_click_attribution 可执行，匹配度: 100.00%
2025-08-15 10:47:45,474 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-15 10:47:45,474 - core.llm_analyzer - INFO - 对比模型: markov_channel_model
2025-08-15 10:47:45,475 - core.llm_analyzer - INFO - 模型 markov_channel_model 可执行，匹配度: 100.00%
2025-08-15 10:47:45,475 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-15 10:47:45,475 - core.llm_analyzer - INFO - 对比模型: markov_absorption_model
2025-08-15 10:47:45,475 - core.llm_analyzer - INFO - 模型 markov_absorption_model 可执行，匹配度: 100.00%
2025-08-15 10:47:45,475 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'order_number'}
2025-08-15 10:47:45,475 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-15 10:47:45,475 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-15 10:47:45,475 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-15 10:47:45,475 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-15 10:47:45,476 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-15 10:47:45,476 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'current_retained_locked_count'}
2025-08-15 10:47:45,476 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-15 10:47:45,476 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-15 10:47:45,476 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'blind_lock_status'}
2025-08-15 10:47:45,476 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-15 10:47:45,476 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-15 10:47:45,476 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-15 10:47:45,476 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 8 个模型
2025-08-15 10:47:45,476 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 8 个算法
2025-08-15 10:47:45,476 - __main__ - INFO - 开始执行8个算法
2025-08-15 10:47:45,476 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-15 10:47:45,491 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-15 10:47:45,541 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-15 10:47:45,541 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-15 10:47:45,541 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-15 10:47:45,556 - core.algorithm_executor - WARNING - 首次点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-15 10:47:45,605 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-15 10:47:45,605 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-15 10:47:45,605 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-15 10:47:45,620 - core.algorithm_executor - WARNING - Markov渠道模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-15 10:47:45,896 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-15 10:47:45,896 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-15 10:47:45,896 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-15 10:47:45,912 - core.algorithm_executor - WARNING - Markov吸收链模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-15 10:47:46,202 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-15 10:47:46,202 - __main__ - INFO - 算法 Markov吸收链模型 执行成功
2025-08-15 10:47:46,202 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-15 10:47:46,205 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-15 10:47:46,205 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-15 10:47:46,205 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-15 10:47:46,213 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-15 10:47:46,213 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-15 10:47:46,213 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-15 10:47:46,216 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-15 10:47:46,216 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-15 10:47:46,216 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-15 10:47:46,608 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-15 10:47:46,608 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-15 10:47:46,608 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-15 10:47:46,608 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '首次点击归因', 'Markov渠道模型', 'Markov吸收链模型', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-15 10:47:47,790 - core.report_generator - INFO - 开始生成分析报告
2025-08-15 10:47:47,790 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-15 10:47:47,790 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '首次点击归因', 'Markov渠道模型', 'Markov吸收链模型', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-15 10:47:49,148 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-15 10:47:49,151 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250815_104749.html
2025-08-15 10:47:49,151 - __main__ - INFO - 智能数据分析完成
2025-08-20 15:11:21,744 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:11:29,497 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:11:29,498 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:11:29,498 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:11:29,498 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:11:29,498 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析
2025-08-20 15:12:01,324 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:12:01,325 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:12:01,325 - __main__ - ERROR - 分析流程失败: 'executable'
2025-08-20 15:12:54,124 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:13:01,587 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:13:01,588 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:13:01,588 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:13:01,588 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:13:01,588 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析
2025-08-20 15:13:19,269 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:13:19,269 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:13:19,270 - __main__ - INFO - 开始执行1个算法
2025-08-20 15:13:19,270 - core.algorithm_executor - INFO - 开始执行算法: time_series_analysis
2025-08-20 15:13:19,270 - core.algorithm_executor - INFO - 算法 time_series_analysis 执行完成
2025-08-20 15:13:19,270 - __main__ - WARNING - 算法 time_series_analysis 执行失败: 不支持的算法: time_series_analysis
2025-08-20 15:13:19,270 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:13:19,270 - core.report_generator - INFO - 算法结果键: ['time_series_analysis']
2025-08-20 15:13:19,270 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 15:13:19,270 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:13:19,270 - core.report_generator - INFO - 算法结果键: ['time_series_analysis']
2025-08-20 15:13:19,531 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-20 15:13:19,531 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_151319.html
2025-08-20 15:13:19,531 - __main__ - INFO - 智能数据分析完成
2025-08-20 15:25:14,840 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:25:22,360 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:25:22,360 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:25:22,360 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:25:22,360 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:25:22,361 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 15:25:22,381 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 15:25:49,802 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:25:49,803 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:25:49,803 - __main__ - INFO - 开始执行4个算法
2025-08-20 15:25:49,803 - core.algorithm_executor - INFO - 开始执行算法: descriptive_statistics
2025-08-20 15:25:49,803 - core.algorithm_executor - INFO - 算法 descriptive_statistics 执行完成
2025-08-20 15:25:49,803 - __main__ - WARNING - 算法 descriptive_statistics 执行失败: 不支持的算法: descriptive_statistics
2025-08-20 15:25:49,803 - core.algorithm_executor - INFO - 开始执行算法: correlation_analysis
2025-08-20 15:25:49,803 - core.algorithm_executor - INFO - 算法 correlation_analysis 执行完成
2025-08-20 15:25:49,803 - __main__ - WARNING - 算法 correlation_analysis 执行失败: 不支持的算法: correlation_analysis
2025-08-20 15:25:49,803 - core.algorithm_executor - INFO - 开始执行算法: time_series_analysis
2025-08-20 15:25:49,803 - core.algorithm_executor - INFO - 算法 time_series_analysis 执行完成
2025-08-20 15:25:49,803 - __main__ - WARNING - 算法 time_series_analysis 执行失败: 不支持的算法: time_series_analysis
2025-08-20 15:25:49,804 - core.algorithm_executor - INFO - 开始执行算法: categorical_analysis
2025-08-20 15:25:49,804 - core.algorithm_executor - INFO - 算法 categorical_analysis 执行完成
2025-08-20 15:25:49,804 - __main__ - WARNING - 算法 categorical_analysis 执行失败: 不支持的算法: categorical_analysis
2025-08-20 15:25:49,804 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:25:49,804 - core.report_generator - INFO - 算法结果键: ['descriptive_statistics', 'correlation_analysis', 'time_series_analysis', 'categorical_analysis']
2025-08-20 15:25:49,804 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 15:25:49,804 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:25:49,804 - core.report_generator - INFO - 算法结果键: ['descriptive_statistics', 'correlation_analysis', 'time_series_analysis', 'categorical_analysis']
2025-08-20 15:25:50,065 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-20 15:25:50,066 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_152550.html
2025-08-20 15:25:50,066 - __main__ - INFO - 智能数据分析完成
2025-08-20 15:28:34,583 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:28:42,324 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:28:42,325 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:28:42,325 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:28:42,325 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:28:42,326 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 15:28:42,353 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 15:29:13,215 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:29:13,217 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:29:13,217 - __main__ - INFO - 开始执行4个算法
2025-08-20 15:29:13,217 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 15:29:13,638 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 15:29:13,638 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 15:29:13,638 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 15:29:13,638 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 15:29:13,638 - __main__ - WARNING - 算法 相关性分析 执行失败: 未指定数值列
2025-08-20 15:29:13,638 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 15:29:13,638 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 15:29:13,638 - __main__ - WARNING - 算法 时间趋势分析 执行失败: 缺少日期列或数值列
2025-08-20 15:29:13,638 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 15:29:13,638 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 15:29:13,638 - __main__ - WARNING - 算法 分类分析 执行失败: 未指定分类列
2025-08-20 15:29:13,638 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:29:13,638 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:29:14,084 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 15:29:14,084 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:29:14,084 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:29:14,606 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-20 15:29:14,606 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_152914.html
2025-08-20 15:29:14,606 - __main__ - INFO - 智能数据分析完成
2025-08-20 15:32:01,228 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:32:08,791 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:32:08,791 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:32:08,791 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:32:08,791 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:32:08,791 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 15:32:08,812 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 15:32:35,898 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:32:35,898 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:32:35,899 - __main__ - INFO - 开始执行4个算法
2025-08-20 15:32:35,899 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 15:32:36,302 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 15:32:36,302 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 15:32:36,302 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 15:32:36,303 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 15:32:36,303 - __main__ - WARNING - 算法 相关性分析 执行失败: 未指定数值列
2025-08-20 15:32:36,303 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 15:32:36,303 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 15:32:36,303 - __main__ - WARNING - 算法 时间趋势分析 执行失败: 缺少日期列或数值列
2025-08-20 15:32:36,303 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 15:32:36,303 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 15:32:36,303 - __main__ - WARNING - 算法 分类分析 执行失败: 未指定分类列
2025-08-20 15:32:36,303 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:32:36,303 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:32:36,654 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 15:32:36,654 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:32:36,654 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:32:37,165 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-20 15:32:37,165 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_153237.html
2025-08-20 15:32:37,165 - __main__ - INFO - 智能数据分析完成
2025-08-20 15:34:47,699 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:34:55,292 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:34:55,292 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:34:55,292 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:34:55,292 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:34:55,292 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 15:34:55,311 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 15:35:29,401 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:35:29,401 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:35:29,402 - __main__ - INFO - 开始执行4个算法
2025-08-20 15:35:29,402 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 15:35:29,821 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 15:35:29,821 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 15:35:29,821 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 15:35:29,821 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 15:35:29,821 - __main__ - WARNING - 算法 相关性分析 执行失败: 未指定数值列
2025-08-20 15:35:29,821 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 15:35:29,821 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 15:35:29,821 - __main__ - WARNING - 算法 时间趋势分析 执行失败: 缺少日期列或数值列
2025-08-20 15:35:29,821 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 15:35:29,821 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 15:35:29,821 - __main__ - WARNING - 算法 分类分析 执行失败: 未指定分类列
2025-08-20 15:35:29,821 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:35:29,821 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:35:30,181 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 15:35:30,181 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:35:30,181 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:35:30,716 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-20 15:35:30,717 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_153530.html
2025-08-20 15:35:30,717 - __main__ - INFO - 智能数据分析完成
2025-08-20 15:36:28,851 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:36:36,514 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:36:36,514 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:36:36,514 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:36:36,514 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:36:36,514 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 15:36:36,537 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 15:37:06,616 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:37:06,618 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:37:06,622 - __main__ - INFO - 开始执行4个算法
2025-08-20 15:37:06,623 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 15:37:07,029 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 15:37:07,029 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 15:37:07,029 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 15:37:07,029 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 15:37:07,029 - __main__ - WARNING - 算法 相关性分析 执行失败: 未指定数值列
2025-08-20 15:37:07,029 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 15:37:07,029 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 15:37:07,029 - __main__ - WARNING - 算法 时间趋势分析 执行失败: 缺少日期列或数值列
2025-08-20 15:37:07,029 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 15:37:07,029 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 15:37:07,029 - __main__ - WARNING - 算法 分类分析 执行失败: 未指定分类列
2025-08-20 15:37:07,029 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:37:07,029 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:37:07,384 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 15:37:07,384 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:37:07,384 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:37:07,912 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-20 15:37:07,913 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_153707.html
2025-08-20 15:37:07,913 - __main__ - INFO - 智能数据分析完成
2025-08-20 15:37:43,913 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:37:51,595 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:37:51,595 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:37:51,595 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:37:51,595 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:37:51,595 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 15:37:51,616 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 15:38:12,745 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:38:12,746 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:38:12,747 - __main__ - INFO - 开始执行4个算法
2025-08-20 15:38:12,747 - __main__ - INFO - 执行算法: 描述统计, 参数: {}
2025-08-20 15:38:12,748 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 15:38:13,177 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 15:38:13,177 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 15:38:13,177 - __main__ - INFO - 执行算法: 相关性分析, 参数: {}
2025-08-20 15:38:13,177 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 15:38:13,177 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 15:38:13,177 - __main__ - WARNING - 算法 相关性分析 执行失败: 未指定数值列
2025-08-20 15:38:13,177 - __main__ - INFO - 执行算法: 时间趋势分析, 参数: {}
2025-08-20 15:38:13,177 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 15:38:13,178 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 15:38:13,178 - __main__ - WARNING - 算法 时间趋势分析 执行失败: 缺少日期列或数值列
2025-08-20 15:38:13,178 - __main__ - INFO - 执行算法: 分类分析, 参数: {}
2025-08-20 15:38:13,178 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 15:38:13,178 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 15:38:13,178 - __main__ - WARNING - 算法 分类分析 执行失败: 未指定分类列
2025-08-20 15:38:13,178 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:38:13,178 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:38:13,555 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 15:38:13,555 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:38:13,555 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:38:14,081 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-20 15:38:14,082 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_153814.html
2025-08-20 15:38:14,082 - __main__ - INFO - 智能数据分析完成
2025-08-20 15:38:36,932 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:38:44,660 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:38:44,660 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:38:44,660 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:38:44,660 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:38:44,660 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 15:38:44,682 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 15:39:14,538 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:39:14,539 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:39:14,539 - __main__ - INFO - 开始执行4个算法
2025-08-20 15:39:14,539 - __main__ - INFO - 执行算法: 描述统计, 参数: {}
2025-08-20 15:39:14,539 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 15:39:14,945 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 15:39:14,945 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 15:39:14,945 - __main__ - INFO - 执行算法: 相关性分析, 参数: {}
2025-08-20 15:39:14,945 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 15:39:14,945 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 15:39:14,945 - __main__ - WARNING - 算法 相关性分析 执行失败: 未指定数值列
2025-08-20 15:39:14,945 - __main__ - INFO - 执行算法: 时间趋势分析, 参数: {}
2025-08-20 15:39:14,945 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 15:39:14,945 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 15:39:14,945 - __main__ - WARNING - 算法 时间趋势分析 执行失败: 缺少日期列或数值列
2025-08-20 15:39:14,945 - __main__ - INFO - 执行算法: 分类分析, 参数: {}
2025-08-20 15:39:14,945 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 15:39:14,945 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 15:39:14,945 - __main__ - WARNING - 算法 分类分析 执行失败: 未指定分类列
2025-08-20 15:39:14,945 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:39:14,946 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:39:15,305 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 15:39:15,305 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:39:15,305 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:39:15,836 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-20 15:39:15,836 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_153915.html
2025-08-20 15:39:15,836 - __main__ - INFO - 智能数据分析完成
2025-08-20 15:39:34,979 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:39:42,831 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:39:42,831 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:39:42,831 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:39:42,831 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:39:42,831 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 15:39:42,852 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 15:40:05,923 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:40:05,923 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:40:05,924 - __main__ - INFO - LLM分析成功，分析结果: {'field_analyses': [{'field_name': 'order_number', 'data_type': 'object', 'business_meaning': '订单编号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.0}, {'field_name': 'order_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.8155382837604673}, {'field_name': 'wish_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '心愿单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.5001978693429154}, {'field_name': 'intention_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.7431655928956992), 'unique_ratio': 0.2336282905671727}, {'field_name': 'deposit_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.47982524179633707), 'unique_ratio': 0.4575214094629035}, {'field_name': 'lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '锁单时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5029205515014326), 'unique_ratio': 0.4383993161635509}, {'field_name': 'final_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '尾款支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.802463077580612), 'unique_ratio': 0.1846991594510313}, {'field_name': 'delivery_date', 'data_type': 'datetime64[ns]', 'business_meaning': '交付完成时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5842211071185475), 'unique_ratio': 0.36608994348851565}, {'field_name': 'blind_lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '盲锁时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9994301362924034), 'unique_ratio': 0.0005698637075965998}, {'field_name': 'approve_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '退款审批通过时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8458202080002533), 'unique_ratio': 0.1476580184572523}, {'field_name': 'order_cancel_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单取消时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8832729172272965), 'unique_ratio': 0.11360866192835546}, {'field_name': 'hold_set_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold发起时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0436420622734396}, {'field_name': 'hold_release_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold解除时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8390293321513937), 'unique_ratio': 0.15226441676032482}, {'field_name': 'clue_create_date', 'data_type': 'datetime64[ns]', 'business_meaning': '建档时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.830228103778513}, {'field_name': 'first_test_drive_time', 'data_type': 'datetime64[ns]', 'business_meaning': '首次试驾时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.6475234673040697), 'unique_ratio': 0.3196460513193928}, {'field_name': 'clue_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8340430247099235}, {'field_name': 'intention_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9344181849840913), 'unique_ratio': 0.06425213303151663}, {'field_name': 'deposit_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9129058300223196), 'unique_ratio': 0.08315261266680386}, {'field_name': 'clue_first_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索首次创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8364174568249094}, {'field_name': 'blind_lock_status', 'data_type': 'object', 'business_meaning': '盲锁状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_enterprise', 'data_type': 'object', 'business_meaning': '大客户标识', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0013296819843920662), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_hold', 'data_type': 'object', 'business_meaning': '是否hold', 'field_type': 'varchar', 'missing_ratio': np.float64(0.8975353394646447), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'hold_type', 'data_type': 'object', 'business_meaning': 'hold类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'hold_reason', 'data_type': 'object', 'business_meaning': 'hold原因', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0006490114447627942}, {'field_name': 'user_type', 'data_type': 'object', 'business_meaning': '用户类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'user_code', 'data_type': 'object', 'business_meaning': '主理编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.04110933468412138}, {'field_name': 'wish_number', 'data_type': 'float64', 'business_meaning': '心愿单号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.0006015228024630776, 'min_value': np.float64(20220300000000.0), 'max_value': np.float64(20250400000000.0), 'mean_value': np.float64(20249291221727.066), 'std_value': np.float64(3814100011.102841)}, {'field_name': 'main_lead_id', 'data_type': 'object', 'business_meaning': '线索ID', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25078751998480364}, {'field_name': 'unique_clue_id', 'data_type': 'object', 'business_meaning': '唯一线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'first_main_lead_id', 'data_type': 'object', 'business_meaning': '首触主线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'big_channel_name', 'data_type': 'object', 'business_meaning': '线索大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_name', 'data_type': 'object', 'business_meaning': '线索中渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_name', 'data_type': 'object', 'business_meaning': '线索小渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'sales_count', 'data_type': 'object', 'business_meaning': '销售报表计量分类', 'field_type': 'varchar', 'missing_ratio': np.float64(6.331818973295554e-05), 'unique_ratio': 9.49772845994333e-05}, {'field_name': 'big_channel_code', 'data_type': 'object', 'business_meaning': '线索大渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_code', 'data_type': 'object', 'business_meaning': '线索中渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_code', 'data_type': 'object', 'business_meaning': '线索小渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'first_big_channel_name', 'data_type': 'object', 'business_meaning': '线索首触大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'series', 'data_type': 'object', 'business_meaning': '车系名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'product_name', 'data_type': 'object', 'business_meaning': '商品名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.0010447501305937664}, {'field_name': 'order_status', 'data_type': 'object', 'business_meaning': '订单状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'vehicle_status', 'data_type': 'object', 'business_meaning': '车辆状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.5075427793519384), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'model_year', 'data_type': 'object', 'business_meaning': '年款', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'child_region_name', 'data_type': 'object', 'business_meaning': '销售小区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0009656023934275719}, {'field_name': 'parent_region_manager', 'data_type': 'object', 'business_meaning': '大区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00014246592689914995}, {'field_name': 'region_name', 'data_type': 'object', 'business_meaning': '大区名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'city_name', 'data_type': 'object', 'business_meaning': '门店所在城市', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0011713865100596774), 'unique_ratio': 0.002168647998353727}, {'field_name': 'dealer_code', 'data_type': 'object', 'business_meaning': '门店编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'dealer_name', 'data_type': 'object', 'business_meaning': '门店简称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'store_create_date', 'data_type': 'object', 'business_meaning': '门店开业日期', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.004717205135105187}, {'field_name': 'province_name', 'data_type': 'object', 'business_meaning': '门店所在省份', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0004590568755639276}, {'field_name': 'user_name', 'data_type': 'object', 'business_meaning': '用户主理姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.039827141342029033}, {'field_name': 'delivery_agent_name', 'data_type': 'object', 'business_meaning': '交付专员姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.4280626216896459), 'unique_ratio': 0.0065376030899276585}, {'field_name': 'war_zone_name', 'data_type': 'object', 'business_meaning': '战区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'war_zone_manager_name', 'data_type': 'object', 'business_meaning': '战区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'bloc_name', 'data_type': 'object', 'business_meaning': '经销商集团名称（投资主体）', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.002469409399585266}, {'field_name': 'bloc_city_code_experience', 'data_type': 'object', 'business_meaning': '经销商集团城市编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.0032925458661136877}, {'field_name': 'etl_load_time', 'data_type': 'datetime64[ns]', 'business_meaning': 'ETL处理时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05}, {'field_name': 'current_retained_locked_count', 'data_type': 'int64', 'business_meaning': '当前留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.008547955613948997), 'std_value': np.float64(0.09205988390464792)}, {'field_name': 'waiting_deposit_count', 'data_type': 'int64', 'business_meaning': '待大定数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.1806309657606889), 'std_value': np.float64(0.3847151710464417)}, {'field_name': 'waiting_lock_count', 'data_type': 'int64', 'business_meaning': '待锁单数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05, 'min_value': np.int64(0), 'max_value': np.int64(0), 'mean_value': np.float64(0.0), 'std_value': np.float64(0.0)}, {'field_name': 'current_period_refund_count', 'data_type': 'int64', 'business_meaning': '当期退订数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.08247194212717458), 'std_value': np.float64(0.27508456651517493)}, {'field_name': 'retained_locked2delivery_count', 'data_type': 'int64', 'business_meaning': '留存锁单本月交付数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.005825273455431909), 'std_value': np.float64(0.07610145412761929)}, {'field_name': 'non_current_month_retained_locked_count', 'data_type': 'int64', 'business_meaning': '非本月留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.014246592689914996), 'std_value': np.float64(0.11850674915137094)}, {'field_name': 'locked_order_count', 'data_type': 'int64', 'business_meaning': '锁单数,以锁单时间为准(该指标可选)', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.49707944849856744), 'std_value': np.float64(0.49999542767250205)}, {'field_name': 'delivered_locked_order_count', 'data_type': 'int64', 'business_meaning': '已交付锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.39461478796321214), 'std_value': np.float64(0.48877166317928883)}, {'field_name': 'lock_base_is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '企微建群锁单基数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3403036107197695), 'std_value': np.float64(0.4738149607114814)}, {'field_name': 'is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '锁单后企微建群数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3349215645924683), 'std_value': np.float64(0.47196677450517915)}, {'field_name': 'launch_time', 'data_type': 'datetime64[ns]', 'business_meaning': '上市时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'intent_pay_start_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金开始时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'region_code', 'data_type': 'object', 'business_meaning': '大区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'child_region_code', 'data_type': 'object', 'business_meaning': '小区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.0009656023934275719}], 'model_recommendations': [{'name': 'descriptive_statistics', 'confidence': 0.95, 'reason': '基础描述性统计，适用于所有数据集', 'source': 'field_mapping_llm_agreed'}, {'name': 'correlation_analysis', 'confidence': 0.9, 'reason': '检测到11个数值型字段，适合进行相关性分析', 'source': 'field_mapping_llm_agreed'}, {'name': 'time_series_analysis', 'confidence': 0.85, 'reason': '检测到时间字段和数值字段，适合进行时间序列分析', 'source': 'field_mapping_llm_agreed'}, {'name': 'categorical_analysis', 'confidence': 0.8, 'reason': '检测到39个分类字段，适合进行分类分析', 'source': 'field_mapping'}], 'data_quality_assessment': {'completeness': {'order_number': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_create_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'wish_create_time': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'intention_payment_time': {'missing_ratio': np.float64(0.7431655928956992), 'completeness_score': np.float64(0.25683440710430083)}, 'deposit_payment_time': {'missing_ratio': np.float64(0.47982524179633707), 'completeness_score': np.float64(0.5201747582036629)}, 'lock_time': {'missing_ratio': np.float64(0.5029205515014326), 'completeness_score': np.float64(0.49707944849856744)}, 'final_payment_time': {'missing_ratio': np.float64(0.802463077580612), 'completeness_score': np.float64(0.19753692241938803)}, 'delivery_date': {'missing_ratio': np.float64(0.5842211071185475), 'completeness_score': np.float64(0.41577889288145253)}, 'blind_lock_time': {'missing_ratio': np.float64(0.9994301362924034), 'completeness_score': np.float64(0.0005698637075965962)}, 'approve_refund_time': {'missing_ratio': np.float64(0.8458202080002533), 'completeness_score': np.float64(0.15417979199974674)}, 'order_cancel_time': {'missing_ratio': np.float64(0.8832729172272965), 'completeness_score': np.float64(0.1167270827727035)}, 'hold_set_date': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_release_date': {'missing_ratio': np.float64(0.8390293321513937), 'completeness_score': np.float64(0.16097066784860625)}, 'clue_create_date': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_test_drive_time': {'missing_ratio': np.float64(0.6475234673040697), 'completeness_score': np.float64(0.35247653269593027)}, 'clue_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'intention_refund_time': {'missing_ratio': np.float64(0.9344181849840913), 'completeness_score': np.float64(0.06558181501590865)}, 'deposit_refund_time': {'missing_ratio': np.float64(0.9129058300223196), 'completeness_score': np.float64(0.08709416997768038)}, 'clue_first_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'blind_lock_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_enterprise': {'missing_ratio': np.float64(0.0013296819843920662), 'completeness_score': np.float64(0.9986703180156079)}, 'is_hold': {'missing_ratio': np.float64(0.8975353394646447), 'completeness_score': np.float64(0.1024646605353553)}, 'hold_type': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_reason': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'user_type': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'user_code': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'wish_number': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'unique_clue_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'sales_count': {'missing_ratio': np.float64(6.331818973295554e-05), 'completeness_score': np.float64(0.9999366818102671)}, 'big_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'series': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'product_name': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'vehicle_status': {'missing_ratio': np.float64(0.5075427793519384), 'completeness_score': np.float64(0.49245722064806163)}, 'model_year': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'child_region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'parent_region_manager': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'city_name': {'missing_ratio': np.float64(0.0011713865100596774), 'completeness_score': np.float64(0.9988286134899403)}, 'dealer_code': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'dealer_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'store_create_date': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'province_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'user_name': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'delivery_agent_name': {'missing_ratio': np.float64(0.4280626216896459), 'completeness_score': np.float64(0.5719373783103541)}, 'war_zone_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'war_zone_manager_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'bloc_name': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'bloc_city_code_experience': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'etl_load_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_deposit_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_lock_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_period_refund_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'retained_locked2delivery_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'non_current_month_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'delivered_locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'lock_base_is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'launch_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'intent_pay_start_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}, 'child_region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}}, 'consistency': {'wish_number': {'range_check': '[20220300000000.0, 20220300000000.0]', 'outlier_detection': '需要进一步分析'}, 'current_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_deposit_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_lock_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'current_period_refund_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'retained_locked2delivery_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'non_current_month_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'delivered_locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'lock_base_is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}}, 'accuracy': {}}, 'business_insights': ["字段 'order_number': 订单编号", "字段 'order_create_time': 订单创建时间", "字段 'wish_create_time': 心愿单创建时间", "字段 'intention_payment_time': 意向金支付时间", "字段 'deposit_payment_time': 定金支付时间", "字段 'lock_time': 锁单时间", "字段 'final_payment_time': 尾款支付时间", "字段 'delivery_date': 交付完成时间", "字段 'blind_lock_time': 盲锁时间", "字段 'approve_refund_time': 退款审批通过时间", "字段 'order_cancel_time': 订单取消时间", "字段 'hold_set_date': 最近一次hold发起时间", "字段 'hold_release_date': 最近一次hold解除时间", "字段 'clue_create_date': 建档时间", "字段 'first_test_drive_time': 首次试驾时间", "字段 'clue_create_time': 线索创建时间", "字段 'intention_refund_time': 意向金退订时间", "字段 'deposit_refund_time': 定金退订时间", "字段 'clue_first_create_time': 线索首次创建时间", "字段 'blind_lock_status': 盲锁状态", "字段 'is_enterprise': 大客户标识", "字段 'is_hold': 是否hold", "字段 'hold_type': hold类型", "字段 'hold_reason': hold原因", "字段 'user_type': 用户类型", "字段 'user_code': 主理编码", "字段 'wish_number': 心愿单号", "字段 'main_lead_id': 线索ID", "字段 'unique_clue_id': 唯一线索id", "字段 'first_main_lead_id': 首触主线索id", "字段 'big_channel_name': 线索大渠道", "字段 'middle_channel_name': 线索中渠道", "字段 'small_channel_name': 线索小渠道", "字段 'sales_count': 销售报表计量分类", "字段 'big_channel_code': 线索大渠道编码", "字段 'middle_channel_code': 线索中渠道编码", "字段 'small_channel_code': 线索小渠道编码", "字段 'first_big_channel_name': 线索首触大渠道", "字段 'series': 车系名称", "字段 'product_name': 商品名称", "字段 'order_status': 订单状态", "字段 'vehicle_status': 车辆状态", "字段 'model_year': 年款", "字段 'child_region_name': 销售小区", "字段 'parent_region_manager': 大区总", "字段 'region_name': 大区名称", "字段 'city_name': 门店所在城市", "字段 'dealer_code': 门店编码", "字段 'dealer_name': 门店简称", "字段 'store_create_date': 门店开业日期", "字段 'province_name': 门店所在省份", "字段 'user_name': 用户主理姓名", "字段 'delivery_agent_name': 交付专员姓名", "字段 'war_zone_name': 战区", "字段 'war_zone_manager_name': 战区总", "字段 'bloc_name': 经销商集团名称（投资主体）", "字段 'bloc_city_code_experience': 经销商集团城市编码", "字段 'etl_load_time': ETL处理时间", "字段 'current_retained_locked_count': 当前留存锁单数", "字段 'waiting_deposit_count': 待大定数量", "字段 'waiting_lock_count': 待锁单数量", "字段 'current_period_refund_count': 当期退订数", "字段 'retained_locked2delivery_count': 留存锁单本月交付数", "字段 'non_current_month_retained_locked_count': 非本月留存锁单数", "字段 'locked_order_count': 锁单数,以锁单时间为准(该指标可选)", "字段 'delivered_locked_order_count': 已交付锁单数", "字段 'lock_base_is_create_wechat_group': 企微建群锁单基数", "字段 'is_create_wechat_group': 锁单后企微建群数", "字段 'launch_time': 上市时间", "字段 'intent_pay_start_time': 意向金开始时间", "字段 'region_code': 大区编码", "字段 'child_region_code': 小区编码", '数据集包含 63173 条记录，72 个字段', '发现缺失值的字段: wish_create_time, intention_payment_time, deposit_payment_time, lock_time, final_payment_time, delivery_date, blind_lock_time, approve_refund_time, order_cancel_time, hold_set_date, hold_release_date, clue_create_date, first_test_drive_time, clue_create_time, intention_refund_time, deposit_refund_time, clue_first_create_time, is_enterprise, is_hold, hold_type, hold_reason, user_code, wish_number, main_lead_id, unique_clue_id, first_main_lead_id, big_channel_name, middle_channel_name, small_channel_name, sales_count, big_channel_code, middle_channel_code, small_channel_code, first_big_channel_name, vehicle_status, child_region_name, parent_region_manager, region_name, city_name, dealer_code, dealer_name, store_create_date, province_name, user_name, delivery_agent_name, war_zone_name, war_zone_manager_name, bloc_name, bloc_city_code_experience, launch_time, intent_pay_start_time, region_code, child_region_code'], 'analysis_method': 'field_mapping_enhanced_by_llm'}
2025-08-20 15:40:05,925 - __main__ - INFO - 开始执行4个算法
2025-08-20 15:40:05,925 - __main__ - INFO - 执行算法: 描述统计, 参数: {}
2025-08-20 15:40:05,925 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 15:40:06,334 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 15:40:06,334 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 15:40:06,334 - __main__ - INFO - 执行算法: 相关性分析, 参数: {}
2025-08-20 15:40:06,334 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 15:40:06,334 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 15:40:06,334 - __main__ - WARNING - 算法 相关性分析 执行失败: 未指定数值列
2025-08-20 15:40:06,334 - __main__ - INFO - 执行算法: 时间趋势分析, 参数: {}
2025-08-20 15:40:06,334 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 15:40:06,334 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 15:40:06,334 - __main__ - WARNING - 算法 时间趋势分析 执行失败: 缺少日期列或数值列
2025-08-20 15:40:06,334 - __main__ - INFO - 执行算法: 分类分析, 参数: {}
2025-08-20 15:40:06,334 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 15:40:06,334 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 15:40:06,334 - __main__ - WARNING - 算法 分类分析 执行失败: 未指定分类列
2025-08-20 15:40:06,334 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:40:06,334 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:40:06,706 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 15:40:06,706 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:40:06,706 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:40:07,233 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-20 15:40:07,234 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_154007.html
2025-08-20 15:40:07,234 - __main__ - INFO - 智能数据分析完成
2025-08-20 15:40:50,297 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:40:58,254 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:40:58,254 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:40:58,254 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:40:58,254 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:40:58,255 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 15:40:58,278 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 15:41:23,918 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:41:23,918 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:41:23,918 - __main__ - INFO - LLM分析成功，分析结果: {'field_analyses': [{'field_name': 'order_number', 'data_type': 'object', 'business_meaning': '订单编号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.0}, {'field_name': 'order_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.8155382837604673}, {'field_name': 'wish_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '心愿单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.5001978693429154}, {'field_name': 'intention_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.7431655928956992), 'unique_ratio': 0.2336282905671727}, {'field_name': 'deposit_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.47982524179633707), 'unique_ratio': 0.4575214094629035}, {'field_name': 'lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '锁单时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5029205515014326), 'unique_ratio': 0.4383993161635509}, {'field_name': 'final_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '尾款支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.802463077580612), 'unique_ratio': 0.1846991594510313}, {'field_name': 'delivery_date', 'data_type': 'datetime64[ns]', 'business_meaning': '交付完成时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5842211071185475), 'unique_ratio': 0.36608994348851565}, {'field_name': 'blind_lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '盲锁时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9994301362924034), 'unique_ratio': 0.0005698637075965998}, {'field_name': 'approve_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '退款审批通过时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8458202080002533), 'unique_ratio': 0.1476580184572523}, {'field_name': 'order_cancel_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单取消时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8832729172272965), 'unique_ratio': 0.11360866192835546}, {'field_name': 'hold_set_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold发起时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0436420622734396}, {'field_name': 'hold_release_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold解除时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8390293321513937), 'unique_ratio': 0.15226441676032482}, {'field_name': 'clue_create_date', 'data_type': 'datetime64[ns]', 'business_meaning': '建档时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.830228103778513}, {'field_name': 'first_test_drive_time', 'data_type': 'datetime64[ns]', 'business_meaning': '首次试驾时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.6475234673040697), 'unique_ratio': 0.3196460513193928}, {'field_name': 'clue_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8340430247099235}, {'field_name': 'intention_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9344181849840913), 'unique_ratio': 0.06425213303151663}, {'field_name': 'deposit_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9129058300223196), 'unique_ratio': 0.08315261266680386}, {'field_name': 'clue_first_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索首次创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8364174568249094}, {'field_name': 'blind_lock_status', 'data_type': 'object', 'business_meaning': '盲锁状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_enterprise', 'data_type': 'object', 'business_meaning': '大客户标识', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0013296819843920662), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_hold', 'data_type': 'object', 'business_meaning': '是否hold', 'field_type': 'varchar', 'missing_ratio': np.float64(0.8975353394646447), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'hold_type', 'data_type': 'object', 'business_meaning': 'hold类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'hold_reason', 'data_type': 'object', 'business_meaning': 'hold原因', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0006490114447627942}, {'field_name': 'user_type', 'data_type': 'object', 'business_meaning': '用户类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'user_code', 'data_type': 'object', 'business_meaning': '主理编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.04110933468412138}, {'field_name': 'wish_number', 'data_type': 'float64', 'business_meaning': '心愿单号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.0006015228024630776, 'min_value': np.float64(20220300000000.0), 'max_value': np.float64(20250400000000.0), 'mean_value': np.float64(20249291221727.066), 'std_value': np.float64(3814100011.102841)}, {'field_name': 'main_lead_id', 'data_type': 'object', 'business_meaning': '线索ID', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25078751998480364}, {'field_name': 'unique_clue_id', 'data_type': 'object', 'business_meaning': '唯一线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'first_main_lead_id', 'data_type': 'object', 'business_meaning': '首触主线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'big_channel_name', 'data_type': 'object', 'business_meaning': '线索大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_name', 'data_type': 'object', 'business_meaning': '线索中渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_name', 'data_type': 'object', 'business_meaning': '线索小渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'sales_count', 'data_type': 'object', 'business_meaning': '销售报表计量分类', 'field_type': 'varchar', 'missing_ratio': np.float64(6.331818973295554e-05), 'unique_ratio': 9.49772845994333e-05}, {'field_name': 'big_channel_code', 'data_type': 'object', 'business_meaning': '线索大渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_code', 'data_type': 'object', 'business_meaning': '线索中渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_code', 'data_type': 'object', 'business_meaning': '线索小渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'first_big_channel_name', 'data_type': 'object', 'business_meaning': '线索首触大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'series', 'data_type': 'object', 'business_meaning': '车系名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'product_name', 'data_type': 'object', 'business_meaning': '商品名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.0010447501305937664}, {'field_name': 'order_status', 'data_type': 'object', 'business_meaning': '订单状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'vehicle_status', 'data_type': 'object', 'business_meaning': '车辆状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.5075427793519384), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'model_year', 'data_type': 'object', 'business_meaning': '年款', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'child_region_name', 'data_type': 'object', 'business_meaning': '销售小区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0009656023934275719}, {'field_name': 'parent_region_manager', 'data_type': 'object', 'business_meaning': '大区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00014246592689914995}, {'field_name': 'region_name', 'data_type': 'object', 'business_meaning': '大区名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'city_name', 'data_type': 'object', 'business_meaning': '门店所在城市', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0011713865100596774), 'unique_ratio': 0.002168647998353727}, {'field_name': 'dealer_code', 'data_type': 'object', 'business_meaning': '门店编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'dealer_name', 'data_type': 'object', 'business_meaning': '门店简称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'store_create_date', 'data_type': 'object', 'business_meaning': '门店开业日期', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.004717205135105187}, {'field_name': 'province_name', 'data_type': 'object', 'business_meaning': '门店所在省份', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0004590568755639276}, {'field_name': 'user_name', 'data_type': 'object', 'business_meaning': '用户主理姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.039827141342029033}, {'field_name': 'delivery_agent_name', 'data_type': 'object', 'business_meaning': '交付专员姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.4280626216896459), 'unique_ratio': 0.0065376030899276585}, {'field_name': 'war_zone_name', 'data_type': 'object', 'business_meaning': '战区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'war_zone_manager_name', 'data_type': 'object', 'business_meaning': '战区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'bloc_name', 'data_type': 'object', 'business_meaning': '经销商集团名称（投资主体）', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.002469409399585266}, {'field_name': 'bloc_city_code_experience', 'data_type': 'object', 'business_meaning': '经销商集团城市编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.0032925458661136877}, {'field_name': 'etl_load_time', 'data_type': 'datetime64[ns]', 'business_meaning': 'ETL处理时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05}, {'field_name': 'current_retained_locked_count', 'data_type': 'int64', 'business_meaning': '当前留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.008547955613948997), 'std_value': np.float64(0.09205988390464792)}, {'field_name': 'waiting_deposit_count', 'data_type': 'int64', 'business_meaning': '待大定数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.1806309657606889), 'std_value': np.float64(0.3847151710464417)}, {'field_name': 'waiting_lock_count', 'data_type': 'int64', 'business_meaning': '待锁单数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05, 'min_value': np.int64(0), 'max_value': np.int64(0), 'mean_value': np.float64(0.0), 'std_value': np.float64(0.0)}, {'field_name': 'current_period_refund_count', 'data_type': 'int64', 'business_meaning': '当期退订数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.08247194212717458), 'std_value': np.float64(0.27508456651517493)}, {'field_name': 'retained_locked2delivery_count', 'data_type': 'int64', 'business_meaning': '留存锁单本月交付数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.005825273455431909), 'std_value': np.float64(0.07610145412761929)}, {'field_name': 'non_current_month_retained_locked_count', 'data_type': 'int64', 'business_meaning': '非本月留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.014246592689914996), 'std_value': np.float64(0.11850674915137094)}, {'field_name': 'locked_order_count', 'data_type': 'int64', 'business_meaning': '锁单数,以锁单时间为准(该指标可选)', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.49707944849856744), 'std_value': np.float64(0.49999542767250205)}, {'field_name': 'delivered_locked_order_count', 'data_type': 'int64', 'business_meaning': '已交付锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.39461478796321214), 'std_value': np.float64(0.48877166317928883)}, {'field_name': 'lock_base_is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '企微建群锁单基数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3403036107197695), 'std_value': np.float64(0.4738149607114814)}, {'field_name': 'is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '锁单后企微建群数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3349215645924683), 'std_value': np.float64(0.47196677450517915)}, {'field_name': 'launch_time', 'data_type': 'datetime64[ns]', 'business_meaning': '上市时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'intent_pay_start_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金开始时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'region_code', 'data_type': 'object', 'business_meaning': '大区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'child_region_code', 'data_type': 'object', 'business_meaning': '小区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.0009656023934275719}], 'model_recommendations': [{'name': 'descriptive_statistics', 'confidence': 0.95, 'reason': '基础描述性统计，适用于所有数据集', 'source': 'field_mapping_llm_agreed', 'params': {}}, {'name': 'correlation_analysis', 'confidence': 0.9, 'reason': '检测到11个数值型字段，适合进行相关性分析', 'source': 'field_mapping_llm_agreed', 'params': {'columns': ['wish_number', 'current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count']}}, {'name': 'time_series_analysis', 'confidence': 0.85, 'reason': '检测到时间字段和数值字段，适合进行时间序列分析', 'source': 'field_mapping_llm_agreed', 'params': {'datetime_columns': ['order_create_time', 'wish_create_time'], 'numeric_columns': ['wish_number', 'current_retained_locked_count', 'waiting_deposit_count']}}, {'name': 'categorical_analysis', 'confidence': 0.8, 'reason': '检测到39个分类字段，适合进行分类分析', 'source': 'field_mapping', 'params': {'categorical_columns': ['order_number', 'blind_lock_status', 'is_enterprise']}}], 'data_quality_assessment': {'completeness': {'order_number': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_create_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'wish_create_time': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'intention_payment_time': {'missing_ratio': np.float64(0.7431655928956992), 'completeness_score': np.float64(0.25683440710430083)}, 'deposit_payment_time': {'missing_ratio': np.float64(0.47982524179633707), 'completeness_score': np.float64(0.5201747582036629)}, 'lock_time': {'missing_ratio': np.float64(0.5029205515014326), 'completeness_score': np.float64(0.49707944849856744)}, 'final_payment_time': {'missing_ratio': np.float64(0.802463077580612), 'completeness_score': np.float64(0.19753692241938803)}, 'delivery_date': {'missing_ratio': np.float64(0.5842211071185475), 'completeness_score': np.float64(0.41577889288145253)}, 'blind_lock_time': {'missing_ratio': np.float64(0.9994301362924034), 'completeness_score': np.float64(0.0005698637075965962)}, 'approve_refund_time': {'missing_ratio': np.float64(0.8458202080002533), 'completeness_score': np.float64(0.15417979199974674)}, 'order_cancel_time': {'missing_ratio': np.float64(0.8832729172272965), 'completeness_score': np.float64(0.1167270827727035)}, 'hold_set_date': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_release_date': {'missing_ratio': np.float64(0.8390293321513937), 'completeness_score': np.float64(0.16097066784860625)}, 'clue_create_date': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_test_drive_time': {'missing_ratio': np.float64(0.6475234673040697), 'completeness_score': np.float64(0.35247653269593027)}, 'clue_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'intention_refund_time': {'missing_ratio': np.float64(0.9344181849840913), 'completeness_score': np.float64(0.06558181501590865)}, 'deposit_refund_time': {'missing_ratio': np.float64(0.9129058300223196), 'completeness_score': np.float64(0.08709416997768038)}, 'clue_first_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'blind_lock_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_enterprise': {'missing_ratio': np.float64(0.0013296819843920662), 'completeness_score': np.float64(0.9986703180156079)}, 'is_hold': {'missing_ratio': np.float64(0.8975353394646447), 'completeness_score': np.float64(0.1024646605353553)}, 'hold_type': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_reason': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'user_type': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'user_code': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'wish_number': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'unique_clue_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'sales_count': {'missing_ratio': np.float64(6.331818973295554e-05), 'completeness_score': np.float64(0.9999366818102671)}, 'big_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'series': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'product_name': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'vehicle_status': {'missing_ratio': np.float64(0.5075427793519384), 'completeness_score': np.float64(0.49245722064806163)}, 'model_year': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'child_region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'parent_region_manager': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'city_name': {'missing_ratio': np.float64(0.0011713865100596774), 'completeness_score': np.float64(0.9988286134899403)}, 'dealer_code': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'dealer_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'store_create_date': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'province_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'user_name': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'delivery_agent_name': {'missing_ratio': np.float64(0.4280626216896459), 'completeness_score': np.float64(0.5719373783103541)}, 'war_zone_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'war_zone_manager_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'bloc_name': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'bloc_city_code_experience': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'etl_load_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_deposit_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_lock_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_period_refund_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'retained_locked2delivery_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'non_current_month_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'delivered_locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'lock_base_is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'launch_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'intent_pay_start_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}, 'child_region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}}, 'consistency': {'wish_number': {'range_check': '[20220300000000.0, 20220300000000.0]', 'outlier_detection': '需要进一步分析'}, 'current_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_deposit_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_lock_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'current_period_refund_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'retained_locked2delivery_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'non_current_month_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'delivered_locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'lock_base_is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}}, 'accuracy': {}}, 'business_insights': ["字段 'order_number': 订单编号", "字段 'order_create_time': 订单创建时间", "字段 'wish_create_time': 心愿单创建时间", "字段 'intention_payment_time': 意向金支付时间", "字段 'deposit_payment_time': 定金支付时间", "字段 'lock_time': 锁单时间", "字段 'final_payment_time': 尾款支付时间", "字段 'delivery_date': 交付完成时间", "字段 'blind_lock_time': 盲锁时间", "字段 'approve_refund_time': 退款审批通过时间", "字段 'order_cancel_time': 订单取消时间", "字段 'hold_set_date': 最近一次hold发起时间", "字段 'hold_release_date': 最近一次hold解除时间", "字段 'clue_create_date': 建档时间", "字段 'first_test_drive_time': 首次试驾时间", "字段 'clue_create_time': 线索创建时间", "字段 'intention_refund_time': 意向金退订时间", "字段 'deposit_refund_time': 定金退订时间", "字段 'clue_first_create_time': 线索首次创建时间", "字段 'blind_lock_status': 盲锁状态", "字段 'is_enterprise': 大客户标识", "字段 'is_hold': 是否hold", "字段 'hold_type': hold类型", "字段 'hold_reason': hold原因", "字段 'user_type': 用户类型", "字段 'user_code': 主理编码", "字段 'wish_number': 心愿单号", "字段 'main_lead_id': 线索ID", "字段 'unique_clue_id': 唯一线索id", "字段 'first_main_lead_id': 首触主线索id", "字段 'big_channel_name': 线索大渠道", "字段 'middle_channel_name': 线索中渠道", "字段 'small_channel_name': 线索小渠道", "字段 'sales_count': 销售报表计量分类", "字段 'big_channel_code': 线索大渠道编码", "字段 'middle_channel_code': 线索中渠道编码", "字段 'small_channel_code': 线索小渠道编码", "字段 'first_big_channel_name': 线索首触大渠道", "字段 'series': 车系名称", "字段 'product_name': 商品名称", "字段 'order_status': 订单状态", "字段 'vehicle_status': 车辆状态", "字段 'model_year': 年款", "字段 'child_region_name': 销售小区", "字段 'parent_region_manager': 大区总", "字段 'region_name': 大区名称", "字段 'city_name': 门店所在城市", "字段 'dealer_code': 门店编码", "字段 'dealer_name': 门店简称", "字段 'store_create_date': 门店开业日期", "字段 'province_name': 门店所在省份", "字段 'user_name': 用户主理姓名", "字段 'delivery_agent_name': 交付专员姓名", "字段 'war_zone_name': 战区", "字段 'war_zone_manager_name': 战区总", "字段 'bloc_name': 经销商集团名称（投资主体）", "字段 'bloc_city_code_experience': 经销商集团城市编码", "字段 'etl_load_time': ETL处理时间", "字段 'current_retained_locked_count': 当前留存锁单数", "字段 'waiting_deposit_count': 待大定数量", "字段 'waiting_lock_count': 待锁单数量", "字段 'current_period_refund_count': 当期退订数", "字段 'retained_locked2delivery_count': 留存锁单本月交付数", "字段 'non_current_month_retained_locked_count': 非本月留存锁单数", "字段 'locked_order_count': 锁单数,以锁单时间为准(该指标可选)", "字段 'delivered_locked_order_count': 已交付锁单数", "字段 'lock_base_is_create_wechat_group': 企微建群锁单基数", "字段 'is_create_wechat_group': 锁单后企微建群数", "字段 'launch_time': 上市时间", "字段 'intent_pay_start_time': 意向金开始时间", "字段 'region_code': 大区编码", "字段 'child_region_code': 小区编码", '数据集包含 63173 条记录，72 个字段', '发现缺失值的字段: wish_create_time, intention_payment_time, deposit_payment_time, lock_time, final_payment_time, delivery_date, blind_lock_time, approve_refund_time, order_cancel_time, hold_set_date, hold_release_date, clue_create_date, first_test_drive_time, clue_create_time, intention_refund_time, deposit_refund_time, clue_first_create_time, is_enterprise, is_hold, hold_type, hold_reason, user_code, wish_number, main_lead_id, unique_clue_id, first_main_lead_id, big_channel_name, middle_channel_name, small_channel_name, sales_count, big_channel_code, middle_channel_code, small_channel_code, first_big_channel_name, vehicle_status, child_region_name, parent_region_manager, region_name, city_name, dealer_code, dealer_name, store_create_date, province_name, user_name, delivery_agent_name, war_zone_name, war_zone_manager_name, bloc_name, bloc_city_code_experience, launch_time, intent_pay_start_time, region_code, child_region_code'], 'analysis_method': 'field_mapping_enhanced_by_llm'}
2025-08-20 15:41:23,919 - __main__ - INFO - 开始执行4个算法
2025-08-20 15:41:23,919 - __main__ - INFO - 执行算法: 描述统计, 参数: {}
2025-08-20 15:41:23,919 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 15:41:24,331 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 15:41:24,331 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 15:41:24,331 - __main__ - INFO - 执行算法: 相关性分析, 参数: {'columns': ['wish_number', 'current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count']}
2025-08-20 15:41:24,331 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 15:41:24,334 - core.algorithm_executor - WARNING - 相关性分析数据清洗警告: ['发现 27494 个缺失值，将进行删除']
2025-08-20 15:41:24,335 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 15:41:24,335 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-20 15:41:24,335 - __main__ - INFO - 执行算法: 时间趋势分析, 参数: {'datetime_columns': ['order_create_time', 'wish_create_time'], 'numeric_columns': ['wish_number', 'current_retained_locked_count', 'waiting_deposit_count']}
2025-08-20 15:41:24,335 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 15:41:24,337 - core.algorithm_executor - WARNING - 时间趋势分析数据清洗警告: ['列 order_create_time 发现 27494 个缺失值', '列 wish_create_time 发现 54988 个缺失值']
2025-08-20 15:41:24,354 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 15:41:24,354 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-20 15:41:24,354 - __main__ - INFO - 执行算法: 分类分析, 参数: {'categorical_columns': ['order_number', 'blind_lock_status', 'is_enterprise']}
2025-08-20 15:41:24,354 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 15:41:24,385 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 15:41:24,385 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-20 15:41:24,385 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:41:24,385 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:41:25,643 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 15:41:25,643 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:41:25,643 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '时间趋势分析', '分类分析']
2025-08-20 15:41:27,036 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-20 15:41:27,037 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_154127.html
2025-08-20 15:41:27,037 - __main__ - INFO - 智能数据分析完成
2025-08-20 15:48:02,442 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:48:10,157 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:48:10,157 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:48:10,157 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:48:10,157 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:48:10,157 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 15:48:10,178 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 15:48:40,342 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:48:40,342 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:48:40,343 - __main__ - INFO - LLM分析成功，分析结果: {'field_analyses': [{'field_name': 'order_number', 'data_type': 'object', 'business_meaning': '订单编号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.0}, {'field_name': 'order_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.8155382837604673}, {'field_name': 'wish_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '心愿单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.5001978693429154}, {'field_name': 'intention_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.7431655928956992), 'unique_ratio': 0.2336282905671727}, {'field_name': 'deposit_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.47982524179633707), 'unique_ratio': 0.4575214094629035}, {'field_name': 'lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '锁单时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5029205515014326), 'unique_ratio': 0.4383993161635509}, {'field_name': 'final_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '尾款支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.802463077580612), 'unique_ratio': 0.1846991594510313}, {'field_name': 'delivery_date', 'data_type': 'datetime64[ns]', 'business_meaning': '交付完成时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5842211071185475), 'unique_ratio': 0.36608994348851565}, {'field_name': 'blind_lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '盲锁时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9994301362924034), 'unique_ratio': 0.0005698637075965998}, {'field_name': 'approve_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '退款审批通过时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8458202080002533), 'unique_ratio': 0.1476580184572523}, {'field_name': 'order_cancel_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单取消时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8832729172272965), 'unique_ratio': 0.11360866192835546}, {'field_name': 'hold_set_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold发起时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0436420622734396}, {'field_name': 'hold_release_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold解除时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8390293321513937), 'unique_ratio': 0.15226441676032482}, {'field_name': 'clue_create_date', 'data_type': 'datetime64[ns]', 'business_meaning': '建档时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.830228103778513}, {'field_name': 'first_test_drive_time', 'data_type': 'datetime64[ns]', 'business_meaning': '首次试驾时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.6475234673040697), 'unique_ratio': 0.3196460513193928}, {'field_name': 'clue_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8340430247099235}, {'field_name': 'intention_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9344181849840913), 'unique_ratio': 0.06425213303151663}, {'field_name': 'deposit_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9129058300223196), 'unique_ratio': 0.08315261266680386}, {'field_name': 'clue_first_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索首次创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8364174568249094}, {'field_name': 'blind_lock_status', 'data_type': 'object', 'business_meaning': '盲锁状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_enterprise', 'data_type': 'object', 'business_meaning': '大客户标识', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0013296819843920662), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_hold', 'data_type': 'object', 'business_meaning': '是否hold', 'field_type': 'varchar', 'missing_ratio': np.float64(0.8975353394646447), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'hold_type', 'data_type': 'object', 'business_meaning': 'hold类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'hold_reason', 'data_type': 'object', 'business_meaning': 'hold原因', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0006490114447627942}, {'field_name': 'user_type', 'data_type': 'object', 'business_meaning': '用户类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'user_code', 'data_type': 'object', 'business_meaning': '主理编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.04110933468412138}, {'field_name': 'wish_number', 'data_type': 'float64', 'business_meaning': '心愿单号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.0006015228024630776, 'min_value': np.float64(20220300000000.0), 'max_value': np.float64(20250400000000.0), 'mean_value': np.float64(20249291221727.066), 'std_value': np.float64(3814100011.102841)}, {'field_name': 'main_lead_id', 'data_type': 'object', 'business_meaning': '线索ID', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25078751998480364}, {'field_name': 'unique_clue_id', 'data_type': 'object', 'business_meaning': '唯一线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'first_main_lead_id', 'data_type': 'object', 'business_meaning': '首触主线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'big_channel_name', 'data_type': 'object', 'business_meaning': '线索大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_name', 'data_type': 'object', 'business_meaning': '线索中渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_name', 'data_type': 'object', 'business_meaning': '线索小渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'sales_count', 'data_type': 'object', 'business_meaning': '销售报表计量分类', 'field_type': 'varchar', 'missing_ratio': np.float64(6.331818973295554e-05), 'unique_ratio': 9.49772845994333e-05}, {'field_name': 'big_channel_code', 'data_type': 'object', 'business_meaning': '线索大渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_code', 'data_type': 'object', 'business_meaning': '线索中渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_code', 'data_type': 'object', 'business_meaning': '线索小渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'first_big_channel_name', 'data_type': 'object', 'business_meaning': '线索首触大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'series', 'data_type': 'object', 'business_meaning': '车系名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'product_name', 'data_type': 'object', 'business_meaning': '商品名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.0010447501305937664}, {'field_name': 'order_status', 'data_type': 'object', 'business_meaning': '订单状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'vehicle_status', 'data_type': 'object', 'business_meaning': '车辆状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.5075427793519384), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'model_year', 'data_type': 'object', 'business_meaning': '年款', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'child_region_name', 'data_type': 'object', 'business_meaning': '销售小区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0009656023934275719}, {'field_name': 'parent_region_manager', 'data_type': 'object', 'business_meaning': '大区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00014246592689914995}, {'field_name': 'region_name', 'data_type': 'object', 'business_meaning': '大区名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'city_name', 'data_type': 'object', 'business_meaning': '门店所在城市', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0011713865100596774), 'unique_ratio': 0.002168647998353727}, {'field_name': 'dealer_code', 'data_type': 'object', 'business_meaning': '门店编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'dealer_name', 'data_type': 'object', 'business_meaning': '门店简称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'store_create_date', 'data_type': 'object', 'business_meaning': '门店开业日期', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.004717205135105187}, {'field_name': 'province_name', 'data_type': 'object', 'business_meaning': '门店所在省份', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0004590568755639276}, {'field_name': 'user_name', 'data_type': 'object', 'business_meaning': '用户主理姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.039827141342029033}, {'field_name': 'delivery_agent_name', 'data_type': 'object', 'business_meaning': '交付专员姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.4280626216896459), 'unique_ratio': 0.0065376030899276585}, {'field_name': 'war_zone_name', 'data_type': 'object', 'business_meaning': '战区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'war_zone_manager_name', 'data_type': 'object', 'business_meaning': '战区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'bloc_name', 'data_type': 'object', 'business_meaning': '经销商集团名称（投资主体）', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.002469409399585266}, {'field_name': 'bloc_city_code_experience', 'data_type': 'object', 'business_meaning': '经销商集团城市编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.0032925458661136877}, {'field_name': 'etl_load_time', 'data_type': 'datetime64[ns]', 'business_meaning': 'ETL处理时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05}, {'field_name': 'current_retained_locked_count', 'data_type': 'int64', 'business_meaning': '当前留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.008547955613948997), 'std_value': np.float64(0.09205988390464792)}, {'field_name': 'waiting_deposit_count', 'data_type': 'int64', 'business_meaning': '待大定数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.1806309657606889), 'std_value': np.float64(0.3847151710464417)}, {'field_name': 'waiting_lock_count', 'data_type': 'int64', 'business_meaning': '待锁单数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05, 'min_value': np.int64(0), 'max_value': np.int64(0), 'mean_value': np.float64(0.0), 'std_value': np.float64(0.0)}, {'field_name': 'current_period_refund_count', 'data_type': 'int64', 'business_meaning': '当期退订数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.08247194212717458), 'std_value': np.float64(0.27508456651517493)}, {'field_name': 'retained_locked2delivery_count', 'data_type': 'int64', 'business_meaning': '留存锁单本月交付数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.005825273455431909), 'std_value': np.float64(0.07610145412761929)}, {'field_name': 'non_current_month_retained_locked_count', 'data_type': 'int64', 'business_meaning': '非本月留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.014246592689914996), 'std_value': np.float64(0.11850674915137094)}, {'field_name': 'locked_order_count', 'data_type': 'int64', 'business_meaning': '锁单数,以锁单时间为准(该指标可选)', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.49707944849856744), 'std_value': np.float64(0.49999542767250205)}, {'field_name': 'delivered_locked_order_count', 'data_type': 'int64', 'business_meaning': '已交付锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.39461478796321214), 'std_value': np.float64(0.48877166317928883)}, {'field_name': 'lock_base_is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '企微建群锁单基数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3403036107197695), 'std_value': np.float64(0.4738149607114814)}, {'field_name': 'is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '锁单后企微建群数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3349215645924683), 'std_value': np.float64(0.47196677450517915)}, {'field_name': 'launch_time', 'data_type': 'datetime64[ns]', 'business_meaning': '上市时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'intent_pay_start_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金开始时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'region_code', 'data_type': 'object', 'business_meaning': '大区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'child_region_code', 'data_type': 'object', 'business_meaning': '小区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.0009656023934275719}], 'model_recommendations': [{'name': 'descriptive_statistics', 'confidence': 0.95, 'reason': '基础描述性统计，适用于所有数据集', 'source': 'field_mapping_llm_agreed', 'params': {}}, {'name': 'correlation_analysis', 'confidence': 0.9, 'reason': '检测到10个数值型字段，适合进行相关性分析', 'source': 'field_mapping_llm_agreed', 'params': {'columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}}, {'name': 'attribution_analysis', 'confidence': 0.9, 'reason': '检测到ID字段和分类字段，适合进行归因分析', 'source': 'field_mapping', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status'}}, {'name': 'time_series_analysis', 'confidence': 0.85, 'reason': '检测到时间字段和数值字段，适合进行时间序列分析', 'source': 'field_mapping_llm_agreed', 'params': {'datetime_columns': ['order_create_time', 'wish_create_time'], 'numeric_columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count']}}, {'name': 'categorical_analysis', 'confidence': 0.8, 'reason': '检测到20个分类字段，适合进行分类分析', 'source': 'field_mapping', 'params': {'categorical_columns': ['blind_lock_status', 'is_hold', 'hold_type']}}], 'data_quality_assessment': {'completeness': {'order_number': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_create_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'wish_create_time': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'intention_payment_time': {'missing_ratio': np.float64(0.7431655928956992), 'completeness_score': np.float64(0.25683440710430083)}, 'deposit_payment_time': {'missing_ratio': np.float64(0.47982524179633707), 'completeness_score': np.float64(0.5201747582036629)}, 'lock_time': {'missing_ratio': np.float64(0.5029205515014326), 'completeness_score': np.float64(0.49707944849856744)}, 'final_payment_time': {'missing_ratio': np.float64(0.802463077580612), 'completeness_score': np.float64(0.19753692241938803)}, 'delivery_date': {'missing_ratio': np.float64(0.5842211071185475), 'completeness_score': np.float64(0.41577889288145253)}, 'blind_lock_time': {'missing_ratio': np.float64(0.9994301362924034), 'completeness_score': np.float64(0.0005698637075965962)}, 'approve_refund_time': {'missing_ratio': np.float64(0.8458202080002533), 'completeness_score': np.float64(0.15417979199974674)}, 'order_cancel_time': {'missing_ratio': np.float64(0.8832729172272965), 'completeness_score': np.float64(0.1167270827727035)}, 'hold_set_date': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_release_date': {'missing_ratio': np.float64(0.8390293321513937), 'completeness_score': np.float64(0.16097066784860625)}, 'clue_create_date': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_test_drive_time': {'missing_ratio': np.float64(0.6475234673040697), 'completeness_score': np.float64(0.35247653269593027)}, 'clue_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'intention_refund_time': {'missing_ratio': np.float64(0.9344181849840913), 'completeness_score': np.float64(0.06558181501590865)}, 'deposit_refund_time': {'missing_ratio': np.float64(0.9129058300223196), 'completeness_score': np.float64(0.08709416997768038)}, 'clue_first_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'blind_lock_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_enterprise': {'missing_ratio': np.float64(0.0013296819843920662), 'completeness_score': np.float64(0.9986703180156079)}, 'is_hold': {'missing_ratio': np.float64(0.8975353394646447), 'completeness_score': np.float64(0.1024646605353553)}, 'hold_type': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_reason': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'user_type': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'user_code': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'wish_number': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'unique_clue_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'sales_count': {'missing_ratio': np.float64(6.331818973295554e-05), 'completeness_score': np.float64(0.9999366818102671)}, 'big_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'series': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'product_name': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'vehicle_status': {'missing_ratio': np.float64(0.5075427793519384), 'completeness_score': np.float64(0.49245722064806163)}, 'model_year': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'child_region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'parent_region_manager': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'city_name': {'missing_ratio': np.float64(0.0011713865100596774), 'completeness_score': np.float64(0.9988286134899403)}, 'dealer_code': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'dealer_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'store_create_date': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'province_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'user_name': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'delivery_agent_name': {'missing_ratio': np.float64(0.4280626216896459), 'completeness_score': np.float64(0.5719373783103541)}, 'war_zone_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'war_zone_manager_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'bloc_name': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'bloc_city_code_experience': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'etl_load_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_deposit_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_lock_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_period_refund_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'retained_locked2delivery_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'non_current_month_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'delivered_locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'lock_base_is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'launch_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'intent_pay_start_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}, 'child_region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}}, 'consistency': {'wish_number': {'range_check': '[20220300000000.0, 20220300000000.0]', 'outlier_detection': '需要进一步分析'}, 'current_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_deposit_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_lock_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'current_period_refund_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'retained_locked2delivery_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'non_current_month_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'delivered_locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'lock_base_is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}}, 'accuracy': {}}, 'business_insights': ["字段 'order_number': 订单编号", "字段 'order_create_time': 订单创建时间", "字段 'wish_create_time': 心愿单创建时间", "字段 'intention_payment_time': 意向金支付时间", "字段 'deposit_payment_time': 定金支付时间", "字段 'lock_time': 锁单时间", "字段 'final_payment_time': 尾款支付时间", "字段 'delivery_date': 交付完成时间", "字段 'blind_lock_time': 盲锁时间", "字段 'approve_refund_time': 退款审批通过时间", "字段 'order_cancel_time': 订单取消时间", "字段 'hold_set_date': 最近一次hold发起时间", "字段 'hold_release_date': 最近一次hold解除时间", "字段 'clue_create_date': 建档时间", "字段 'first_test_drive_time': 首次试驾时间", "字段 'clue_create_time': 线索创建时间", "字段 'intention_refund_time': 意向金退订时间", "字段 'deposit_refund_time': 定金退订时间", "字段 'clue_first_create_time': 线索首次创建时间", "字段 'blind_lock_status': 盲锁状态", "字段 'is_enterprise': 大客户标识", "字段 'is_hold': 是否hold", "字段 'hold_type': hold类型", "字段 'hold_reason': hold原因", "字段 'user_type': 用户类型", "字段 'user_code': 主理编码", "字段 'wish_number': 心愿单号", "字段 'main_lead_id': 线索ID", "字段 'unique_clue_id': 唯一线索id", "字段 'first_main_lead_id': 首触主线索id", "字段 'big_channel_name': 线索大渠道", "字段 'middle_channel_name': 线索中渠道", "字段 'small_channel_name': 线索小渠道", "字段 'sales_count': 销售报表计量分类", "字段 'big_channel_code': 线索大渠道编码", "字段 'middle_channel_code': 线索中渠道编码", "字段 'small_channel_code': 线索小渠道编码", "字段 'first_big_channel_name': 线索首触大渠道", "字段 'series': 车系名称", "字段 'product_name': 商品名称", "字段 'order_status': 订单状态", "字段 'vehicle_status': 车辆状态", "字段 'model_year': 年款", "字段 'child_region_name': 销售小区", "字段 'parent_region_manager': 大区总", "字段 'region_name': 大区名称", "字段 'city_name': 门店所在城市", "字段 'dealer_code': 门店编码", "字段 'dealer_name': 门店简称", "字段 'store_create_date': 门店开业日期", "字段 'province_name': 门店所在省份", "字段 'user_name': 用户主理姓名", "字段 'delivery_agent_name': 交付专员姓名", "字段 'war_zone_name': 战区", "字段 'war_zone_manager_name': 战区总", "字段 'bloc_name': 经销商集团名称（投资主体）", "字段 'bloc_city_code_experience': 经销商集团城市编码", "字段 'etl_load_time': ETL处理时间", "字段 'current_retained_locked_count': 当前留存锁单数", "字段 'waiting_deposit_count': 待大定数量", "字段 'waiting_lock_count': 待锁单数量", "字段 'current_period_refund_count': 当期退订数", "字段 'retained_locked2delivery_count': 留存锁单本月交付数", "字段 'non_current_month_retained_locked_count': 非本月留存锁单数", "字段 'locked_order_count': 锁单数,以锁单时间为准(该指标可选)", "字段 'delivered_locked_order_count': 已交付锁单数", "字段 'lock_base_is_create_wechat_group': 企微建群锁单基数", "字段 'is_create_wechat_group': 锁单后企微建群数", "字段 'launch_time': 上市时间", "字段 'intent_pay_start_time': 意向金开始时间", "字段 'region_code': 大区编码", "字段 'child_region_code': 小区编码", '数据集包含 63173 条记录，72 个字段', '发现缺失值的字段: wish_create_time, intention_payment_time, deposit_payment_time, lock_time, final_payment_time, delivery_date, blind_lock_time, approve_refund_time, order_cancel_time, hold_set_date, hold_release_date, clue_create_date, first_test_drive_time, clue_create_time, intention_refund_time, deposit_refund_time, clue_first_create_time, is_enterprise, is_hold, hold_type, hold_reason, user_code, wish_number, main_lead_id, unique_clue_id, first_main_lead_id, big_channel_name, middle_channel_name, small_channel_name, sales_count, big_channel_code, middle_channel_code, small_channel_code, first_big_channel_name, vehicle_status, child_region_name, parent_region_manager, region_name, city_name, dealer_code, dealer_name, store_create_date, province_name, user_name, delivery_agent_name, war_zone_name, war_zone_manager_name, bloc_name, bloc_city_code_experience, launch_time, intent_pay_start_time, region_code, child_region_code'], 'analysis_method': 'field_mapping_enhanced_by_llm'}
2025-08-20 15:48:40,344 - __main__ - INFO - 开始执行5个算法
2025-08-20 15:48:40,344 - __main__ - INFO - 执行算法: 描述统计, 参数: {}
2025-08-20 15:48:40,344 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 15:48:40,750 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 15:48:40,750 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 15:48:40,750 - __main__ - INFO - 执行算法: 相关性分析, 参数: {'columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-20 15:48:40,750 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 15:48:40,755 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 15:48:40,755 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-20 15:48:40,755 - __main__ - INFO - 执行算法: 归因分析, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status'}
2025-08-20 15:48:40,755 - core.algorithm_executor - INFO - 开始执行算法: 归因分析
2025-08-20 15:48:40,755 - core.algorithm_executor - INFO - 算法 归因分析 执行完成
2025-08-20 15:48:40,755 - __main__ - WARNING - 算法 归因分析 执行失败: 不支持的算法: 归因分析
2025-08-20 15:48:40,755 - __main__ - INFO - 执行算法: 时间趋势分析, 参数: {'datetime_columns': ['order_create_time', 'wish_create_time'], 'numeric_columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count']}
2025-08-20 15:48:40,755 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 15:48:40,757 - core.algorithm_executor - WARNING - 时间趋势分析数据清洗警告: ['列 wish_create_time 发现 27494 个缺失值']
2025-08-20 15:48:40,774 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 15:48:40,774 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-20 15:48:40,774 - __main__ - INFO - 执行算法: 分类分析, 参数: {'categorical_columns': ['blind_lock_status', 'is_hold', 'hold_type']}
2025-08-20 15:48:40,774 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 15:48:40,781 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 15:48:40,781 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-20 15:48:40,781 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:48:40,781 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '归因分析', '时间趋势分析', '分类分析']
2025-08-20 15:48:42,013 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 15:48:42,013 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:48:42,013 - core.report_generator - INFO - 算法结果键: ['描述统计', '相关性分析', '归因分析', '时间趋势分析', '分类分析']
2025-08-20 15:48:43,382 - core.report_generator - INFO - HTML分析报告生成完成
2025-08-20 15:48:43,382 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_154843.html
2025-08-20 15:48:43,382 - __main__ - INFO - 智能数据分析完成
2025-08-20 15:49:21,295 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:55:22,722 - __main__ - INFO - 开始智能数据分析
2025-08-20 15:55:30,393 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 15:55:30,393 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 15:55:30,393 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 15:55:30,393 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 15:55:30,393 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 15:55:30,416 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 15:56:24,304 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 15:56:24,305 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 15:56:24,305 - __main__ - INFO - LLM分析成功，分析结果: {'field_analyses': [{'field_name': 'order_number', 'data_type': 'object', 'business_meaning': '订单编号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.0}, {'field_name': 'order_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.8155382837604673}, {'field_name': 'wish_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '心愿单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.5001978693429154}, {'field_name': 'intention_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.7431655928956992), 'unique_ratio': 0.2336282905671727}, {'field_name': 'deposit_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.47982524179633707), 'unique_ratio': 0.4575214094629035}, {'field_name': 'lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '锁单时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5029205515014326), 'unique_ratio': 0.4383993161635509}, {'field_name': 'final_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '尾款支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.802463077580612), 'unique_ratio': 0.1846991594510313}, {'field_name': 'delivery_date', 'data_type': 'datetime64[ns]', 'business_meaning': '交付完成时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5842211071185475), 'unique_ratio': 0.36608994348851565}, {'field_name': 'blind_lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '盲锁时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9994301362924034), 'unique_ratio': 0.0005698637075965998}, {'field_name': 'approve_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '退款审批通过时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8458202080002533), 'unique_ratio': 0.1476580184572523}, {'field_name': 'order_cancel_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单取消时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8832729172272965), 'unique_ratio': 0.11360866192835546}, {'field_name': 'hold_set_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold发起时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0436420622734396}, {'field_name': 'hold_release_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold解除时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8390293321513937), 'unique_ratio': 0.15226441676032482}, {'field_name': 'clue_create_date', 'data_type': 'datetime64[ns]', 'business_meaning': '建档时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.830228103778513}, {'field_name': 'first_test_drive_time', 'data_type': 'datetime64[ns]', 'business_meaning': '首次试驾时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.6475234673040697), 'unique_ratio': 0.3196460513193928}, {'field_name': 'clue_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8340430247099235}, {'field_name': 'intention_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9344181849840913), 'unique_ratio': 0.06425213303151663}, {'field_name': 'deposit_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9129058300223196), 'unique_ratio': 0.08315261266680386}, {'field_name': 'clue_first_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索首次创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8364174568249094}, {'field_name': 'blind_lock_status', 'data_type': 'object', 'business_meaning': '盲锁状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_enterprise', 'data_type': 'object', 'business_meaning': '大客户标识', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0013296819843920662), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_hold', 'data_type': 'object', 'business_meaning': '是否hold', 'field_type': 'varchar', 'missing_ratio': np.float64(0.8975353394646447), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'hold_type', 'data_type': 'object', 'business_meaning': 'hold类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'hold_reason', 'data_type': 'object', 'business_meaning': 'hold原因', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0006490114447627942}, {'field_name': 'user_type', 'data_type': 'object', 'business_meaning': '用户类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'user_code', 'data_type': 'object', 'business_meaning': '主理编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.04110933468412138}, {'field_name': 'wish_number', 'data_type': 'float64', 'business_meaning': '心愿单号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.0006015228024630776, 'min_value': np.float64(20220300000000.0), 'max_value': np.float64(20250400000000.0), 'mean_value': np.float64(20249291221727.066), 'std_value': np.float64(3814100011.102841)}, {'field_name': 'main_lead_id', 'data_type': 'object', 'business_meaning': '线索ID', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25078751998480364}, {'field_name': 'unique_clue_id', 'data_type': 'object', 'business_meaning': '唯一线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'first_main_lead_id', 'data_type': 'object', 'business_meaning': '首触主线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'big_channel_name', 'data_type': 'object', 'business_meaning': '线索大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_name', 'data_type': 'object', 'business_meaning': '线索中渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_name', 'data_type': 'object', 'business_meaning': '线索小渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'sales_count', 'data_type': 'object', 'business_meaning': '销售报表计量分类', 'field_type': 'varchar', 'missing_ratio': np.float64(6.331818973295554e-05), 'unique_ratio': 9.49772845994333e-05}, {'field_name': 'big_channel_code', 'data_type': 'object', 'business_meaning': '线索大渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_code', 'data_type': 'object', 'business_meaning': '线索中渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_code', 'data_type': 'object', 'business_meaning': '线索小渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'first_big_channel_name', 'data_type': 'object', 'business_meaning': '线索首触大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'series', 'data_type': 'object', 'business_meaning': '车系名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'product_name', 'data_type': 'object', 'business_meaning': '商品名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.0010447501305937664}, {'field_name': 'order_status', 'data_type': 'object', 'business_meaning': '订单状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'vehicle_status', 'data_type': 'object', 'business_meaning': '车辆状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.5075427793519384), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'model_year', 'data_type': 'object', 'business_meaning': '年款', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'child_region_name', 'data_type': 'object', 'business_meaning': '销售小区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0009656023934275719}, {'field_name': 'parent_region_manager', 'data_type': 'object', 'business_meaning': '大区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00014246592689914995}, {'field_name': 'region_name', 'data_type': 'object', 'business_meaning': '大区名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'city_name', 'data_type': 'object', 'business_meaning': '门店所在城市', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0011713865100596774), 'unique_ratio': 0.002168647998353727}, {'field_name': 'dealer_code', 'data_type': 'object', 'business_meaning': '门店编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'dealer_name', 'data_type': 'object', 'business_meaning': '门店简称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'store_create_date', 'data_type': 'object', 'business_meaning': '门店开业日期', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.004717205135105187}, {'field_name': 'province_name', 'data_type': 'object', 'business_meaning': '门店所在省份', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0004590568755639276}, {'field_name': 'user_name', 'data_type': 'object', 'business_meaning': '用户主理姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.039827141342029033}, {'field_name': 'delivery_agent_name', 'data_type': 'object', 'business_meaning': '交付专员姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.4280626216896459), 'unique_ratio': 0.0065376030899276585}, {'field_name': 'war_zone_name', 'data_type': 'object', 'business_meaning': '战区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'war_zone_manager_name', 'data_type': 'object', 'business_meaning': '战区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'bloc_name', 'data_type': 'object', 'business_meaning': '经销商集团名称（投资主体）', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.002469409399585266}, {'field_name': 'bloc_city_code_experience', 'data_type': 'object', 'business_meaning': '经销商集团城市编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.0032925458661136877}, {'field_name': 'etl_load_time', 'data_type': 'datetime64[ns]', 'business_meaning': 'ETL处理时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05}, {'field_name': 'current_retained_locked_count', 'data_type': 'int64', 'business_meaning': '当前留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.008547955613948997), 'std_value': np.float64(0.09205988390464792)}, {'field_name': 'waiting_deposit_count', 'data_type': 'int64', 'business_meaning': '待大定数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.1806309657606889), 'std_value': np.float64(0.3847151710464417)}, {'field_name': 'waiting_lock_count', 'data_type': 'int64', 'business_meaning': '待锁单数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05, 'min_value': np.int64(0), 'max_value': np.int64(0), 'mean_value': np.float64(0.0), 'std_value': np.float64(0.0)}, {'field_name': 'current_period_refund_count', 'data_type': 'int64', 'business_meaning': '当期退订数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.08247194212717458), 'std_value': np.float64(0.27508456651517493)}, {'field_name': 'retained_locked2delivery_count', 'data_type': 'int64', 'business_meaning': '留存锁单本月交付数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.005825273455431909), 'std_value': np.float64(0.07610145412761929)}, {'field_name': 'non_current_month_retained_locked_count', 'data_type': 'int64', 'business_meaning': '非本月留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.014246592689914996), 'std_value': np.float64(0.11850674915137094)}, {'field_name': 'locked_order_count', 'data_type': 'int64', 'business_meaning': '锁单数,以锁单时间为准(该指标可选)', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.49707944849856744), 'std_value': np.float64(0.49999542767250205)}, {'field_name': 'delivered_locked_order_count', 'data_type': 'int64', 'business_meaning': '已交付锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.39461478796321214), 'std_value': np.float64(0.48877166317928883)}, {'field_name': 'lock_base_is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '企微建群锁单基数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3403036107197695), 'std_value': np.float64(0.4738149607114814)}, {'field_name': 'is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '锁单后企微建群数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3349215645924683), 'std_value': np.float64(0.47196677450517915)}, {'field_name': 'launch_time', 'data_type': 'datetime64[ns]', 'business_meaning': '上市时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'intent_pay_start_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金开始时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'region_code', 'data_type': 'object', 'business_meaning': '大区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'child_region_code', 'data_type': 'object', 'business_meaning': '小区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.0009656023934275719}], 'model_recommendations': [{'name': 'first_click_attribution', 'confidence': 0.95, 'reason': '检测到用户ID(order_number)、渠道(blind_lock_status)和时间字段，适合首次点击归因分析', 'source': 'field_mapping', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}}, {'name': 'last_click_attribution', 'confidence': 0.95, 'reason': '检测到用户ID(order_number)、渠道(blind_lock_status)和时间字段，适合最后点击归因分析', 'source': 'field_mapping', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}}, {'name': 'descriptive_statistics', 'confidence': 0.95, 'reason': '基础描述性统计，适用于所有数据集', 'source': 'field_mapping_llm_agreed', 'params': {}}, {'name': 'correlation_analysis', 'confidence': 0.9, 'reason': '检测到10个数值型字段，适合进行相关性分析', 'source': 'field_mapping_llm_agreed', 'params': {'columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}}, {'name': 'time_series_analysis', 'confidence': 0.85, 'reason': '检测到时间字段和数值字段，适合进行时间序列分析', 'source': 'field_mapping_llm_agreed', 'params': {'datetime_columns': ['order_create_time', 'wish_create_time'], 'numeric_columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count']}}, {'name': 'markov_channel_model', 'confidence': 0.85, 'reason': '检测到用户ID(order_number)和渠道(blind_lock_status)，适合Markov渠道模型分析', 'source': 'field_mapping', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}}, {'name': 'markov_absorption_model', 'confidence': 0.85, 'reason': '检测到用户ID(order_number)和渠道(blind_lock_status)，适合Markov吸收链模型分析', 'source': 'field_mapping', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}}, {'name': 'multi_dimension_attribution', 'confidence': 0.85, 'reason': '检测到用户ID(order_number)、渠道(blind_lock_status)和时间维度，适合多维度归因分析', 'source': 'field_mapping', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}}, {'name': 'categorical_analysis', 'confidence': 0.8, 'reason': '检测到20个分类字段，适合进行分类分析', 'source': 'field_mapping', 'params': {'categorical_columns': ['blind_lock_status', 'is_hold', 'hold_type']}}], 'data_quality_assessment': {'completeness': {'order_number': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_create_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'wish_create_time': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'intention_payment_time': {'missing_ratio': np.float64(0.7431655928956992), 'completeness_score': np.float64(0.25683440710430083)}, 'deposit_payment_time': {'missing_ratio': np.float64(0.47982524179633707), 'completeness_score': np.float64(0.5201747582036629)}, 'lock_time': {'missing_ratio': np.float64(0.5029205515014326), 'completeness_score': np.float64(0.49707944849856744)}, 'final_payment_time': {'missing_ratio': np.float64(0.802463077580612), 'completeness_score': np.float64(0.19753692241938803)}, 'delivery_date': {'missing_ratio': np.float64(0.5842211071185475), 'completeness_score': np.float64(0.41577889288145253)}, 'blind_lock_time': {'missing_ratio': np.float64(0.9994301362924034), 'completeness_score': np.float64(0.0005698637075965962)}, 'approve_refund_time': {'missing_ratio': np.float64(0.8458202080002533), 'completeness_score': np.float64(0.15417979199974674)}, 'order_cancel_time': {'missing_ratio': np.float64(0.8832729172272965), 'completeness_score': np.float64(0.1167270827727035)}, 'hold_set_date': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_release_date': {'missing_ratio': np.float64(0.8390293321513937), 'completeness_score': np.float64(0.16097066784860625)}, 'clue_create_date': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_test_drive_time': {'missing_ratio': np.float64(0.6475234673040697), 'completeness_score': np.float64(0.35247653269593027)}, 'clue_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'intention_refund_time': {'missing_ratio': np.float64(0.9344181849840913), 'completeness_score': np.float64(0.06558181501590865)}, 'deposit_refund_time': {'missing_ratio': np.float64(0.9129058300223196), 'completeness_score': np.float64(0.08709416997768038)}, 'clue_first_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'blind_lock_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_enterprise': {'missing_ratio': np.float64(0.0013296819843920662), 'completeness_score': np.float64(0.9986703180156079)}, 'is_hold': {'missing_ratio': np.float64(0.8975353394646447), 'completeness_score': np.float64(0.1024646605353553)}, 'hold_type': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_reason': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'user_type': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'user_code': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'wish_number': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'unique_clue_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'sales_count': {'missing_ratio': np.float64(6.331818973295554e-05), 'completeness_score': np.float64(0.9999366818102671)}, 'big_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'series': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'product_name': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'vehicle_status': {'missing_ratio': np.float64(0.5075427793519384), 'completeness_score': np.float64(0.49245722064806163)}, 'model_year': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'child_region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'parent_region_manager': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'city_name': {'missing_ratio': np.float64(0.0011713865100596774), 'completeness_score': np.float64(0.9988286134899403)}, 'dealer_code': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'dealer_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'store_create_date': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'province_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'user_name': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'delivery_agent_name': {'missing_ratio': np.float64(0.4280626216896459), 'completeness_score': np.float64(0.5719373783103541)}, 'war_zone_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'war_zone_manager_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'bloc_name': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'bloc_city_code_experience': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'etl_load_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_deposit_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_lock_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_period_refund_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'retained_locked2delivery_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'non_current_month_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'delivered_locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'lock_base_is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'launch_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'intent_pay_start_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}, 'child_region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}}, 'consistency': {'wish_number': {'range_check': '[20220300000000.0, 20220300000000.0]', 'outlier_detection': '需要进一步分析'}, 'current_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_deposit_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_lock_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'current_period_refund_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'retained_locked2delivery_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'non_current_month_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'delivered_locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'lock_base_is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}}, 'accuracy': {}}, 'business_insights': ["字段 'order_number': 订单编号", "字段 'order_create_time': 订单创建时间", "字段 'wish_create_time': 心愿单创建时间", "字段 'intention_payment_time': 意向金支付时间", "字段 'deposit_payment_time': 定金支付时间", "字段 'lock_time': 锁单时间", "字段 'final_payment_time': 尾款支付时间", "字段 'delivery_date': 交付完成时间", "字段 'blind_lock_time': 盲锁时间", "字段 'approve_refund_time': 退款审批通过时间", "字段 'order_cancel_time': 订单取消时间", "字段 'hold_set_date': 最近一次hold发起时间", "字段 'hold_release_date': 最近一次hold解除时间", "字段 'clue_create_date': 建档时间", "字段 'first_test_drive_time': 首次试驾时间", "字段 'clue_create_time': 线索创建时间", "字段 'intention_refund_time': 意向金退订时间", "字段 'deposit_refund_time': 定金退订时间", "字段 'clue_first_create_time': 线索首次创建时间", "字段 'blind_lock_status': 盲锁状态", "字段 'is_enterprise': 大客户标识", "字段 'is_hold': 是否hold", "字段 'hold_type': hold类型", "字段 'hold_reason': hold原因", "字段 'user_type': 用户类型", "字段 'user_code': 主理编码", "字段 'wish_number': 心愿单号", "字段 'main_lead_id': 线索ID", "字段 'unique_clue_id': 唯一线索id", "字段 'first_main_lead_id': 首触主线索id", "字段 'big_channel_name': 线索大渠道", "字段 'middle_channel_name': 线索中渠道", "字段 'small_channel_name': 线索小渠道", "字段 'sales_count': 销售报表计量分类", "字段 'big_channel_code': 线索大渠道编码", "字段 'middle_channel_code': 线索中渠道编码", "字段 'small_channel_code': 线索小渠道编码", "字段 'first_big_channel_name': 线索首触大渠道", "字段 'series': 车系名称", "字段 'product_name': 商品名称", "字段 'order_status': 订单状态", "字段 'vehicle_status': 车辆状态", "字段 'model_year': 年款", "字段 'child_region_name': 销售小区", "字段 'parent_region_manager': 大区总", "字段 'region_name': 大区名称", "字段 'city_name': 门店所在城市", "字段 'dealer_code': 门店编码", "字段 'dealer_name': 门店简称", "字段 'store_create_date': 门店开业日期", "字段 'province_name': 门店所在省份", "字段 'user_name': 用户主理姓名", "字段 'delivery_agent_name': 交付专员姓名", "字段 'war_zone_name': 战区", "字段 'war_zone_manager_name': 战区总", "字段 'bloc_name': 经销商集团名称（投资主体）", "字段 'bloc_city_code_experience': 经销商集团城市编码", "字段 'etl_load_time': ETL处理时间", "字段 'current_retained_locked_count': 当前留存锁单数", "字段 'waiting_deposit_count': 待大定数量", "字段 'waiting_lock_count': 待锁单数量", "字段 'current_period_refund_count': 当期退订数", "字段 'retained_locked2delivery_count': 留存锁单本月交付数", "字段 'non_current_month_retained_locked_count': 非本月留存锁单数", "字段 'locked_order_count': 锁单数,以锁单时间为准(该指标可选)", "字段 'delivered_locked_order_count': 已交付锁单数", "字段 'lock_base_is_create_wechat_group': 企微建群锁单基数", "字段 'is_create_wechat_group': 锁单后企微建群数", "字段 'launch_time': 上市时间", "字段 'intent_pay_start_time': 意向金开始时间", "字段 'region_code': 大区编码", "字段 'child_region_code': 小区编码", '数据集包含 63173 条记录，72 个字段', '发现缺失值的字段: wish_create_time, intention_payment_time, deposit_payment_time, lock_time, final_payment_time, delivery_date, blind_lock_time, approve_refund_time, order_cancel_time, hold_set_date, hold_release_date, clue_create_date, first_test_drive_time, clue_create_time, intention_refund_time, deposit_refund_time, clue_first_create_time, is_enterprise, is_hold, hold_type, hold_reason, user_code, wish_number, main_lead_id, unique_clue_id, first_main_lead_id, big_channel_name, middle_channel_name, small_channel_name, sales_count, big_channel_code, middle_channel_code, small_channel_code, first_big_channel_name, vehicle_status, child_region_name, parent_region_manager, region_name, city_name, dealer_code, dealer_name, store_create_date, province_name, user_name, delivery_agent_name, war_zone_name, war_zone_manager_name, bloc_name, bloc_city_code_experience, launch_time, intent_pay_start_time, region_code, child_region_code'], 'analysis_method': 'field_mapping_enhanced_by_llm'}
2025-08-20 15:56:24,306 - __main__ - INFO - 开始执行9个算法
2025-08-20 15:56:24,306 - __main__ - INFO - 执行算法: 首次点击归因, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}
2025-08-20 15:56:24,306 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-20 15:56:24,378 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-20 15:56:24,378 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-20 15:56:24,378 - __main__ - INFO - 执行算法: 最后点击归因, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}
2025-08-20 15:56:24,378 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-20 15:56:24,444 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-20 15:56:24,444 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-20 15:56:24,444 - __main__ - INFO - 执行算法: 描述统计, 参数: {}
2025-08-20 15:56:24,444 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 15:56:24,842 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 15:56:24,842 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 15:56:24,842 - __main__ - INFO - 执行算法: 相关性分析, 参数: {'columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-20 15:56:24,842 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 15:56:24,845 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 15:56:24,845 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-20 15:56:24,845 - __main__ - INFO - 执行算法: 时间趋势分析, 参数: {'datetime_columns': ['order_create_time', 'wish_create_time'], 'numeric_columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count']}
2025-08-20 15:56:24,846 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 15:56:24,847 - core.algorithm_executor - WARNING - 时间趋势分析数据清洗警告: ['列 wish_create_time 发现 27494 个缺失值']
2025-08-20 15:56:24,862 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 15:56:24,863 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-20 15:56:24,863 - __main__ - INFO - 执行算法: Markov渠道模型, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}
2025-08-20 15:56:24,863 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-20 15:56:25,166 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-20 15:56:25,166 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-20 15:56:25,166 - __main__ - INFO - 执行算法: Markov吸收链模型, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}
2025-08-20 15:56:25,166 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-20 15:56:25,492 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-20 15:56:25,492 - __main__ - INFO - 算法 Markov吸收链模型 执行成功
2025-08-20 15:56:25,492 - __main__ - INFO - 执行算法: 多维度归因分析, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}
2025-08-20 15:56:25,492 - core.algorithm_executor - INFO - 开始执行算法: 多维度归因分析
2025-08-20 15:56:25,505 - core.algorithm_executor - WARNING - 多维度归因分析数据清洗警告: ['使用 20/20 个时间列', '发现 673653 个缺失值']
2025-08-20 15:56:25,604 - core.algorithm_executor - INFO - 算法 多维度归因分析 执行完成
2025-08-20 15:56:25,604 - __main__ - INFO - 算法 多维度归因分析 执行成功
2025-08-20 15:56:25,604 - __main__ - INFO - 执行算法: 分类分析, 参数: {'categorical_columns': ['blind_lock_status', 'is_hold', 'hold_type']}
2025-08-20 15:56:25,604 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 15:56:25,610 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 15:56:25,610 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-20 15:56:25,610 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 15:56:25,610 - core.report_generator - INFO - 算法结果键: ['首次点击归因', '最后点击归因', '描述统计', '相关性分析', '时间趋势分析', 'Markov渠道模型', 'Markov吸收链模型', '多维度归因分析', '分类分析']
2025-08-20 15:56:26,845 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 15:56:26,845 - core.report_generator - INFO - 生成数据概览
2025-08-20 15:56:27,103 - core.report_generator - INFO - 生成算法结果
2025-08-20 15:56:27,103 - core.report_generator - INFO - 生成关键洞察
2025-08-20 15:56:27,103 - core.report_generator - INFO - 生成局限与建议
2025-08-20 15:56:27,103 - core.report_generator - INFO - 分析报告生成完成
2025-08-20 15:56:27,103 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_155627.md
2025-08-20 15:56:27,103 - __main__ - INFO - 智能数据分析完成
2025-08-20 16:06:46,160 - __main__ - INFO - 开始智能数据分析
2025-08-20 16:06:53,511 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 16:06:53,511 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 16:06:53,511 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 16:06:53,511 - core.llm_analyzer - INFO - 开始快速体检，样本大小: 20
2025-08-20 16:06:53,531 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 16:06:53,559 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 16:06:53,559 - core.llm_analyzer - INFO - 快速体检完成
2025-08-20 16:06:53,559 - core.llm_analyzer - INFO - 开始归因算法推荐（Schema对比方式）
2025-08-20 16:06:53,559 - core.llm_analyzer - INFO - 开始模型匹配
2025-08-20 16:06:53,563 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 16:06:53,669 - core.llm_analyzer - INFO - 当前数据Schema包含 72 个字段
2025-08-20 16:06:53,669 - core.llm_analyzer - INFO - 对比模型: last_click_attribution
2025-08-20 16:06:53,955 - core.llm_analyzer - INFO - 模型 last_click_attribution 可执行，匹配度: 100.00%
2025-08-20 16:06:53,955 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'blind_lock_status'}
2025-08-20 16:06:53,955 - core.llm_analyzer - INFO - 对比模型: first_click_attribution
2025-08-20 16:06:54,242 - core.llm_analyzer - INFO - 模型 first_click_attribution 可执行，匹配度: 100.00%
2025-08-20 16:06:54,242 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'blind_lock_status'}
2025-08-20 16:06:54,242 - core.llm_analyzer - INFO - 对比模型: markov_channel_model
2025-08-20 16:06:54,523 - core.llm_analyzer - INFO - 模型 markov_channel_model 可执行，匹配度: 100.00%
2025-08-20 16:06:54,523 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'blind_lock_status'}
2025-08-20 16:06:54,523 - core.llm_analyzer - INFO - 对比模型: markov_absorption_model
2025-08-20 16:06:54,806 - core.llm_analyzer - INFO - 模型 markov_absorption_model 可执行，匹配度: 100.00%
2025-08-20 16:06:54,806 - core.llm_analyzer - INFO - 字段映射: {'user_id': 'order_number', 'channel': 'big_channel_name', 'timestamp': 'order_create_time', 'conversion': 'blind_lock_status'}
2025-08-20 16:06:54,806 - core.llm_analyzer - INFO - 对比模型: correlation_analysis
2025-08-20 16:06:54,808 - core.llm_analyzer - INFO - 模型 correlation_analysis 可执行，匹配度: 100.00%
2025-08-20 16:06:54,808 - core.llm_analyzer - INFO - 字段映射: {'numeric_field': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-20 16:06:54,808 - core.llm_analyzer - INFO - 对比模型: time_series_analysis
2025-08-20 16:06:54,950 - core.llm_analyzer - INFO - 模型 time_series_analysis 可执行，匹配度: 100.00%
2025-08-20 16:06:54,950 - core.llm_analyzer - INFO - 字段映射: {'timestamp': 'order_create_time', 'numeric_field': 'waiting_deposit_count'}
2025-08-20 16:06:54,950 - core.llm_analyzer - INFO - 对比模型: categorical_analysis
2025-08-20 16:06:55,022 - core.llm_analyzer - INFO - 模型 categorical_analysis 可执行，匹配度: 100.00%
2025-08-20 16:06:55,022 - core.llm_analyzer - INFO - 字段映射: {'categorical_field': 'user_type'}
2025-08-20 16:06:55,022 - core.llm_analyzer - INFO - 对比模型: descriptive_statistics
2025-08-20 16:06:55,022 - core.llm_analyzer - INFO - 模型 descriptive_statistics 可执行，匹配度: 100.00%
2025-08-20 16:06:55,022 - core.llm_analyzer - INFO - 字段映射: {}
2025-08-20 16:06:55,022 - core.llm_analyzer - INFO - 模型匹配完成，共匹配 8 个模型
2025-08-20 16:06:55,022 - core.llm_analyzer - INFO - Schema对比推荐完成，共推荐 8 个算法
2025-08-20 16:06:55,022 - __main__ - INFO - 开始执行8个算法
2025-08-20 16:06:55,022 - __main__ - INFO - 执行算法: 最后点击归因, 参数: {'user_id_column': 'order_number', 'channel_column': 'big_channel_name', 'event_time_column': 'order_create_time', 'conversion_column': 'blind_lock_status'}
2025-08-20 16:06:55,022 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-20 16:06:55,038 - core.algorithm_executor - WARNING - 最后点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-20 16:06:55,089 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-20 16:06:55,089 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-20 16:06:55,089 - __main__ - INFO - 执行算法: 首次点击归因, 参数: {'user_id_column': 'order_number', 'channel_column': 'big_channel_name', 'event_time_column': 'order_create_time', 'conversion_column': 'blind_lock_status'}
2025-08-20 16:06:55,089 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-20 16:06:55,105 - core.algorithm_executor - WARNING - 首次点击归因数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-20 16:06:55,154 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-20 16:06:55,154 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-20 16:06:55,154 - __main__ - INFO - 执行算法: Markov渠道模型, 参数: {'user_id_column': 'order_number', 'channel_column': 'big_channel_name', 'event_time_column': 'order_create_time', 'conversion_column': 'blind_lock_status'}
2025-08-20 16:06:55,154 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-20 16:06:55,170 - core.algorithm_executor - WARNING - Markov渠道模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-20 16:06:55,445 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-20 16:06:55,445 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-20 16:06:55,445 - __main__ - INFO - 执行算法: Markov吸收链模型, 参数: {'user_id_column': 'order_number', 'channel_column': 'big_channel_name', 'event_time_column': 'order_create_time', 'conversion_column': 'blind_lock_status'}
2025-08-20 16:06:55,445 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-20 16:06:55,461 - core.algorithm_executor - WARNING - Markov吸收链模型数据清洗警告: ['关键列发现 1483 个缺失值，将进行删除']
2025-08-20 16:06:55,751 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-20 16:06:55,751 - __main__ - INFO - 算法 Markov吸收链模型 执行成功
2025-08-20 16:06:55,751 - __main__ - INFO - 执行算法: 相关性分析, 参数: {'columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-20 16:06:55,751 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 16:06:55,755 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 16:06:55,755 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-20 16:06:55,755 - __main__ - INFO - 执行算法: 时间趋势分析, 参数: {'event_time_column': 'order_create_time', 'numeric_columns': ['waiting_deposit_count'], 'datetime_columns': ['order_create_time']}
2025-08-20 16:06:55,755 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 16:06:55,764 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 16:06:55,765 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-20 16:06:55,765 - __main__ - INFO - 执行算法: 分类分析, 参数: {'categorical_columns': ['user_type']}
2025-08-20 16:06:55,765 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 16:06:55,768 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 16:06:55,768 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-20 16:06:55,768 - __main__ - INFO - 执行算法: 描述统计, 参数: {}
2025-08-20 16:06:55,768 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 16:06:56,164 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 16:06:56,164 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 16:06:56,164 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 16:06:56,164 - core.report_generator - INFO - 算法结果键: ['最后点击归因', '首次点击归因', 'Markov渠道模型', 'Markov吸收链模型', '相关性分析', '时间趋势分析', '分类分析', '描述统计']
2025-08-20 16:06:57,379 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 16:06:57,379 - core.report_generator - INFO - 生成数据概览
2025-08-20 16:06:57,624 - core.report_generator - INFO - 生成算法结果
2025-08-20 16:06:57,624 - core.report_generator - INFO - 生成关键洞察
2025-08-20 16:06:57,624 - core.report_generator - INFO - 生成局限与建议
2025-08-20 16:06:57,624 - core.report_generator - INFO - 分析报告生成完成
2025-08-20 16:06:57,625 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_160657.md
2025-08-20 16:06:57,625 - __main__ - INFO - 智能数据分析完成
2025-08-20 16:17:31,072 - __main__ - INFO - 开始智能数据分析
2025-08-20 16:17:38,364 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 16:17:38,364 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 16:17:38,364 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 16:17:38,364 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 16:17:38,364 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 16:17:38,385 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 16:18:27,857 - core.llm_client - ERROR - 解析响应失败: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
2025-08-20 16:18:27,857 - core.llm_analyzer - INFO - LLM分析成功
2025-08-20 16:18:27,858 - __main__ - INFO - LLM分析成功，分析结果: {'field_analyses': [{'field_name': 'order_number', 'data_type': 'object', 'business_meaning': '订单编号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.0}, {'field_name': 'order_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.8155382837604673}, {'field_name': 'wish_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '心愿单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.5001978693429154}, {'field_name': 'intention_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.7431655928956992), 'unique_ratio': 0.2336282905671727}, {'field_name': 'deposit_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.47982524179633707), 'unique_ratio': 0.4575214094629035}, {'field_name': 'lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '锁单时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5029205515014326), 'unique_ratio': 0.4383993161635509}, {'field_name': 'final_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '尾款支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.802463077580612), 'unique_ratio': 0.1846991594510313}, {'field_name': 'delivery_date', 'data_type': 'datetime64[ns]', 'business_meaning': '交付完成时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5842211071185475), 'unique_ratio': 0.36608994348851565}, {'field_name': 'blind_lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '盲锁时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9994301362924034), 'unique_ratio': 0.0005698637075965998}, {'field_name': 'approve_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '退款审批通过时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8458202080002533), 'unique_ratio': 0.1476580184572523}, {'field_name': 'order_cancel_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单取消时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8832729172272965), 'unique_ratio': 0.11360866192835546}, {'field_name': 'hold_set_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold发起时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0436420622734396}, {'field_name': 'hold_release_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold解除时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8390293321513937), 'unique_ratio': 0.15226441676032482}, {'field_name': 'clue_create_date', 'data_type': 'datetime64[ns]', 'business_meaning': '建档时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.830228103778513}, {'field_name': 'first_test_drive_time', 'data_type': 'datetime64[ns]', 'business_meaning': '首次试驾时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.6475234673040697), 'unique_ratio': 0.3196460513193928}, {'field_name': 'clue_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8340430247099235}, {'field_name': 'intention_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9344181849840913), 'unique_ratio': 0.06425213303151663}, {'field_name': 'deposit_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9129058300223196), 'unique_ratio': 0.08315261266680386}, {'field_name': 'clue_first_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索首次创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8364174568249094}, {'field_name': 'blind_lock_status', 'data_type': 'object', 'business_meaning': '盲锁状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_enterprise', 'data_type': 'object', 'business_meaning': '大客户标识', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0013296819843920662), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_hold', 'data_type': 'object', 'business_meaning': '是否hold', 'field_type': 'varchar', 'missing_ratio': np.float64(0.8975353394646447), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'hold_type', 'data_type': 'object', 'business_meaning': 'hold类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'hold_reason', 'data_type': 'object', 'business_meaning': 'hold原因', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0006490114447627942}, {'field_name': 'user_type', 'data_type': 'object', 'business_meaning': '用户类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'user_code', 'data_type': 'object', 'business_meaning': '主理编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.04110933468412138}, {'field_name': 'wish_number', 'data_type': 'float64', 'business_meaning': '心愿单号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.0006015228024630776, 'min_value': np.float64(20220300000000.0), 'max_value': np.float64(20250400000000.0), 'mean_value': np.float64(20249291221727.066), 'std_value': np.float64(3814100011.102841)}, {'field_name': 'main_lead_id', 'data_type': 'object', 'business_meaning': '线索ID', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25078751998480364}, {'field_name': 'unique_clue_id', 'data_type': 'object', 'business_meaning': '唯一线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'first_main_lead_id', 'data_type': 'object', 'business_meaning': '首触主线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'big_channel_name', 'data_type': 'object', 'business_meaning': '线索大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_name', 'data_type': 'object', 'business_meaning': '线索中渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_name', 'data_type': 'object', 'business_meaning': '线索小渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'sales_count', 'data_type': 'object', 'business_meaning': '销售报表计量分类', 'field_type': 'varchar', 'missing_ratio': np.float64(6.331818973295554e-05), 'unique_ratio': 9.49772845994333e-05}, {'field_name': 'big_channel_code', 'data_type': 'object', 'business_meaning': '线索大渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_code', 'data_type': 'object', 'business_meaning': '线索中渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_code', 'data_type': 'object', 'business_meaning': '线索小渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'first_big_channel_name', 'data_type': 'object', 'business_meaning': '线索首触大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'series', 'data_type': 'object', 'business_meaning': '车系名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'product_name', 'data_type': 'object', 'business_meaning': '商品名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.0010447501305937664}, {'field_name': 'order_status', 'data_type': 'object', 'business_meaning': '订单状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'vehicle_status', 'data_type': 'object', 'business_meaning': '车辆状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.5075427793519384), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'model_year', 'data_type': 'object', 'business_meaning': '年款', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'child_region_name', 'data_type': 'object', 'business_meaning': '销售小区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0009656023934275719}, {'field_name': 'parent_region_manager', 'data_type': 'object', 'business_meaning': '大区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00014246592689914995}, {'field_name': 'region_name', 'data_type': 'object', 'business_meaning': '大区名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'city_name', 'data_type': 'object', 'business_meaning': '门店所在城市', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0011713865100596774), 'unique_ratio': 0.002168647998353727}, {'field_name': 'dealer_code', 'data_type': 'object', 'business_meaning': '门店编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'dealer_name', 'data_type': 'object', 'business_meaning': '门店简称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'store_create_date', 'data_type': 'object', 'business_meaning': '门店开业日期', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.004717205135105187}, {'field_name': 'province_name', 'data_type': 'object', 'business_meaning': '门店所在省份', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0004590568755639276}, {'field_name': 'user_name', 'data_type': 'object', 'business_meaning': '用户主理姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.039827141342029033}, {'field_name': 'delivery_agent_name', 'data_type': 'object', 'business_meaning': '交付专员姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.4280626216896459), 'unique_ratio': 0.0065376030899276585}, {'field_name': 'war_zone_name', 'data_type': 'object', 'business_meaning': '战区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'war_zone_manager_name', 'data_type': 'object', 'business_meaning': '战区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'bloc_name', 'data_type': 'object', 'business_meaning': '经销商集团名称（投资主体）', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.002469409399585266}, {'field_name': 'bloc_city_code_experience', 'data_type': 'object', 'business_meaning': '经销商集团城市编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.0032925458661136877}, {'field_name': 'etl_load_time', 'data_type': 'datetime64[ns]', 'business_meaning': 'ETL处理时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05}, {'field_name': 'current_retained_locked_count', 'data_type': 'int64', 'business_meaning': '当前留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.008547955613948997), 'std_value': np.float64(0.09205988390464792)}, {'field_name': 'waiting_deposit_count', 'data_type': 'int64', 'business_meaning': '待大定数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.1806309657606889), 'std_value': np.float64(0.3847151710464417)}, {'field_name': 'waiting_lock_count', 'data_type': 'int64', 'business_meaning': '待锁单数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05, 'min_value': np.int64(0), 'max_value': np.int64(0), 'mean_value': np.float64(0.0), 'std_value': np.float64(0.0)}, {'field_name': 'current_period_refund_count', 'data_type': 'int64', 'business_meaning': '当期退订数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.08247194212717458), 'std_value': np.float64(0.27508456651517493)}, {'field_name': 'retained_locked2delivery_count', 'data_type': 'int64', 'business_meaning': '留存锁单本月交付数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.005825273455431909), 'std_value': np.float64(0.07610145412761929)}, {'field_name': 'non_current_month_retained_locked_count', 'data_type': 'int64', 'business_meaning': '非本月留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.014246592689914996), 'std_value': np.float64(0.11850674915137094)}, {'field_name': 'locked_order_count', 'data_type': 'int64', 'business_meaning': '锁单数,以锁单时间为准(该指标可选)', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.49707944849856744), 'std_value': np.float64(0.49999542767250205)}, {'field_name': 'delivered_locked_order_count', 'data_type': 'int64', 'business_meaning': '已交付锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.39461478796321214), 'std_value': np.float64(0.48877166317928883)}, {'field_name': 'lock_base_is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '企微建群锁单基数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3403036107197695), 'std_value': np.float64(0.4738149607114814)}, {'field_name': 'is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '锁单后企微建群数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3349215645924683), 'std_value': np.float64(0.47196677450517915)}, {'field_name': 'launch_time', 'data_type': 'datetime64[ns]', 'business_meaning': '上市时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'intent_pay_start_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金开始时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'region_code', 'data_type': 'object', 'business_meaning': '大区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'child_region_code', 'data_type': 'object', 'business_meaning': '小区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.0009656023934275719}], 'model_recommendations': [{'name': 'first_click_attribution', 'confidence': 0.95, 'reason': '检测到用户ID(order_number)、渠道(blind_lock_status)和时间字段，适合首次点击归因分析', 'source': 'field_mapping', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}}, {'name': 'last_click_attribution', 'confidence': 0.95, 'reason': '检测到用户ID(order_number)、渠道(blind_lock_status)和时间字段，适合最后点击归因分析', 'source': 'field_mapping', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}}, {'name': 'descriptive_statistics', 'confidence': 0.95, 'reason': '基础描述性统计，适用于所有数据集', 'source': 'field_mapping_llm_agreed', 'params': {}}, {'name': 'correlation_analysis', 'confidence': 0.9, 'reason': '检测到10个数值型字段，适合进行相关性分析', 'source': 'field_mapping_llm_agreed', 'params': {'columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}}, {'name': 'time_series_analysis', 'confidence': 0.85, 'reason': '检测到时间字段和数值字段，适合进行时间序列分析', 'source': 'field_mapping_llm_agreed', 'params': {'datetime_columns': ['order_create_time', 'wish_create_time'], 'numeric_columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count']}}, {'name': 'markov_channel_model', 'confidence': 0.85, 'reason': '检测到用户ID(order_number)和渠道(blind_lock_status)，适合Markov渠道模型分析', 'source': 'field_mapping', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}}, {'name': 'markov_absorption_model', 'confidence': 0.85, 'reason': '检测到用户ID(order_number)和渠道(blind_lock_status)，适合Markov吸收链模型分析', 'source': 'field_mapping', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}}, {'name': 'multi_dimension_attribution', 'confidence': 0.85, 'reason': '检测到用户ID(order_number)、渠道(blind_lock_status)和时间维度，适合多维度归因分析', 'source': 'field_mapping', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}}, {'name': 'categorical_analysis', 'confidence': 0.8, 'reason': '检测到20个分类字段，适合进行分类分析', 'source': 'field_mapping', 'params': {'categorical_columns': ['blind_lock_status', 'is_hold', 'hold_type']}}], 'data_quality_assessment': {'completeness': {'order_number': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_create_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'wish_create_time': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'intention_payment_time': {'missing_ratio': np.float64(0.7431655928956992), 'completeness_score': np.float64(0.25683440710430083)}, 'deposit_payment_time': {'missing_ratio': np.float64(0.47982524179633707), 'completeness_score': np.float64(0.5201747582036629)}, 'lock_time': {'missing_ratio': np.float64(0.5029205515014326), 'completeness_score': np.float64(0.49707944849856744)}, 'final_payment_time': {'missing_ratio': np.float64(0.802463077580612), 'completeness_score': np.float64(0.19753692241938803)}, 'delivery_date': {'missing_ratio': np.float64(0.5842211071185475), 'completeness_score': np.float64(0.41577889288145253)}, 'blind_lock_time': {'missing_ratio': np.float64(0.9994301362924034), 'completeness_score': np.float64(0.0005698637075965962)}, 'approve_refund_time': {'missing_ratio': np.float64(0.8458202080002533), 'completeness_score': np.float64(0.15417979199974674)}, 'order_cancel_time': {'missing_ratio': np.float64(0.8832729172272965), 'completeness_score': np.float64(0.1167270827727035)}, 'hold_set_date': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_release_date': {'missing_ratio': np.float64(0.8390293321513937), 'completeness_score': np.float64(0.16097066784860625)}, 'clue_create_date': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_test_drive_time': {'missing_ratio': np.float64(0.6475234673040697), 'completeness_score': np.float64(0.35247653269593027)}, 'clue_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'intention_refund_time': {'missing_ratio': np.float64(0.9344181849840913), 'completeness_score': np.float64(0.06558181501590865)}, 'deposit_refund_time': {'missing_ratio': np.float64(0.9129058300223196), 'completeness_score': np.float64(0.08709416997768038)}, 'clue_first_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'blind_lock_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_enterprise': {'missing_ratio': np.float64(0.0013296819843920662), 'completeness_score': np.float64(0.9986703180156079)}, 'is_hold': {'missing_ratio': np.float64(0.8975353394646447), 'completeness_score': np.float64(0.1024646605353553)}, 'hold_type': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_reason': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'user_type': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'user_code': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'wish_number': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'unique_clue_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'sales_count': {'missing_ratio': np.float64(6.331818973295554e-05), 'completeness_score': np.float64(0.9999366818102671)}, 'big_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'series': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'product_name': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'vehicle_status': {'missing_ratio': np.float64(0.5075427793519384), 'completeness_score': np.float64(0.49245722064806163)}, 'model_year': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'child_region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'parent_region_manager': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'city_name': {'missing_ratio': np.float64(0.0011713865100596774), 'completeness_score': np.float64(0.9988286134899403)}, 'dealer_code': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'dealer_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'store_create_date': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'province_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'user_name': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'delivery_agent_name': {'missing_ratio': np.float64(0.4280626216896459), 'completeness_score': np.float64(0.5719373783103541)}, 'war_zone_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'war_zone_manager_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'bloc_name': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'bloc_city_code_experience': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'etl_load_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_deposit_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_lock_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_period_refund_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'retained_locked2delivery_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'non_current_month_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'delivered_locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'lock_base_is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'launch_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'intent_pay_start_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}, 'child_region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}}, 'consistency': {'wish_number': {'range_check': '[20220300000000.0, 20220300000000.0]', 'outlier_detection': '需要进一步分析'}, 'current_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_deposit_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_lock_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'current_period_refund_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'retained_locked2delivery_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'non_current_month_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'delivered_locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'lock_base_is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}}, 'accuracy': {}}, 'business_insights': ["字段 'order_number': 订单编号", "字段 'order_create_time': 订单创建时间", "字段 'wish_create_time': 心愿单创建时间", "字段 'intention_payment_time': 意向金支付时间", "字段 'deposit_payment_time': 定金支付时间", "字段 'lock_time': 锁单时间", "字段 'final_payment_time': 尾款支付时间", "字段 'delivery_date': 交付完成时间", "字段 'blind_lock_time': 盲锁时间", "字段 'approve_refund_time': 退款审批通过时间", "字段 'order_cancel_time': 订单取消时间", "字段 'hold_set_date': 最近一次hold发起时间", "字段 'hold_release_date': 最近一次hold解除时间", "字段 'clue_create_date': 建档时间", "字段 'first_test_drive_time': 首次试驾时间", "字段 'clue_create_time': 线索创建时间", "字段 'intention_refund_time': 意向金退订时间", "字段 'deposit_refund_time': 定金退订时间", "字段 'clue_first_create_time': 线索首次创建时间", "字段 'blind_lock_status': 盲锁状态", "字段 'is_enterprise': 大客户标识", "字段 'is_hold': 是否hold", "字段 'hold_type': hold类型", "字段 'hold_reason': hold原因", "字段 'user_type': 用户类型", "字段 'user_code': 主理编码", "字段 'wish_number': 心愿单号", "字段 'main_lead_id': 线索ID", "字段 'unique_clue_id': 唯一线索id", "字段 'first_main_lead_id': 首触主线索id", "字段 'big_channel_name': 线索大渠道", "字段 'middle_channel_name': 线索中渠道", "字段 'small_channel_name': 线索小渠道", "字段 'sales_count': 销售报表计量分类", "字段 'big_channel_code': 线索大渠道编码", "字段 'middle_channel_code': 线索中渠道编码", "字段 'small_channel_code': 线索小渠道编码", "字段 'first_big_channel_name': 线索首触大渠道", "字段 'series': 车系名称", "字段 'product_name': 商品名称", "字段 'order_status': 订单状态", "字段 'vehicle_status': 车辆状态", "字段 'model_year': 年款", "字段 'child_region_name': 销售小区", "字段 'parent_region_manager': 大区总", "字段 'region_name': 大区名称", "字段 'city_name': 门店所在城市", "字段 'dealer_code': 门店编码", "字段 'dealer_name': 门店简称", "字段 'store_create_date': 门店开业日期", "字段 'province_name': 门店所在省份", "字段 'user_name': 用户主理姓名", "字段 'delivery_agent_name': 交付专员姓名", "字段 'war_zone_name': 战区", "字段 'war_zone_manager_name': 战区总", "字段 'bloc_name': 经销商集团名称（投资主体）", "字段 'bloc_city_code_experience': 经销商集团城市编码", "字段 'etl_load_time': ETL处理时间", "字段 'current_retained_locked_count': 当前留存锁单数", "字段 'waiting_deposit_count': 待大定数量", "字段 'waiting_lock_count': 待锁单数量", "字段 'current_period_refund_count': 当期退订数", "字段 'retained_locked2delivery_count': 留存锁单本月交付数", "字段 'non_current_month_retained_locked_count': 非本月留存锁单数", "字段 'locked_order_count': 锁单数,以锁单时间为准(该指标可选)", "字段 'delivered_locked_order_count': 已交付锁单数", "字段 'lock_base_is_create_wechat_group': 企微建群锁单基数", "字段 'is_create_wechat_group': 锁单后企微建群数", "字段 'launch_time': 上市时间", "字段 'intent_pay_start_time': 意向金开始时间", "字段 'region_code': 大区编码", "字段 'child_region_code': 小区编码", '数据集包含 63173 条记录，72 个字段', '发现缺失值的字段: wish_create_time, intention_payment_time, deposit_payment_time, lock_time, final_payment_time, delivery_date, blind_lock_time, approve_refund_time, order_cancel_time, hold_set_date, hold_release_date, clue_create_date, first_test_drive_time, clue_create_time, intention_refund_time, deposit_refund_time, clue_first_create_time, is_enterprise, is_hold, hold_type, hold_reason, user_code, wish_number, main_lead_id, unique_clue_id, first_main_lead_id, big_channel_name, middle_channel_name, small_channel_name, sales_count, big_channel_code, middle_channel_code, small_channel_code, first_big_channel_name, vehicle_status, child_region_name, parent_region_manager, region_name, city_name, dealer_code, dealer_name, store_create_date, province_name, user_name, delivery_agent_name, war_zone_name, war_zone_manager_name, bloc_name, bloc_city_code_experience, launch_time, intent_pay_start_time, region_code, child_region_code'], 'analysis_method': 'field_mapping_enhanced_by_llm'}
2025-08-20 16:18:27,861 - __main__ - INFO - 开始执行9个算法
2025-08-20 16:18:27,862 - __main__ - INFO - 执行算法: 首次点击归因, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}
2025-08-20 16:18:27,862 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-20 16:18:27,948 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-20 16:18:27,949 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-20 16:18:27,949 - __main__ - INFO - 执行算法: 最后点击归因, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}
2025-08-20 16:18:27,949 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-20 16:18:28,009 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-20 16:18:28,009 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-20 16:18:28,009 - __main__ - INFO - 执行算法: 描述统计, 参数: {}
2025-08-20 16:18:28,009 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 16:18:28,415 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 16:18:28,415 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 16:18:28,415 - __main__ - INFO - 执行算法: 相关性分析, 参数: {'columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-20 16:18:28,415 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 16:18:28,418 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 16:18:28,419 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-20 16:18:28,419 - __main__ - INFO - 执行算法: 时间趋势分析, 参数: {'datetime_columns': ['order_create_time', 'wish_create_time'], 'numeric_columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count']}
2025-08-20 16:18:28,419 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 16:18:28,420 - core.algorithm_executor - WARNING - 时间趋势分析数据清洗警告: ['列 wish_create_time 发现 27494 个缺失值']
2025-08-20 16:18:28,440 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 16:18:28,440 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-20 16:18:28,440 - __main__ - INFO - 执行算法: Markov渠道模型, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}
2025-08-20 16:18:28,440 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-20 16:18:28,736 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-20 16:18:28,736 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-20 16:18:28,736 - __main__ - INFO - 执行算法: Markov吸收链模型, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}
2025-08-20 16:18:28,736 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-20 16:18:29,048 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-20 16:18:29,048 - __main__ - INFO - 算法 Markov吸收链模型 执行成功
2025-08-20 16:18:29,048 - __main__ - INFO - 执行算法: 多维度归因分析, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}
2025-08-20 16:18:29,048 - core.algorithm_executor - INFO - 开始执行算法: 多维度归因分析
2025-08-20 16:18:29,060 - core.algorithm_executor - WARNING - 多维度归因分析数据清洗警告: ['使用 20/20 个时间列', '发现 673653 个缺失值']
2025-08-20 16:18:29,150 - core.algorithm_executor - INFO - 算法 多维度归因分析 执行完成
2025-08-20 16:18:29,150 - __main__ - INFO - 算法 多维度归因分析 执行成功
2025-08-20 16:18:29,150 - __main__ - INFO - 执行算法: 分类分析, 参数: {'categorical_columns': ['blind_lock_status', 'is_hold', 'hold_type']}
2025-08-20 16:18:29,150 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 16:18:29,156 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 16:18:29,156 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-20 16:18:29,156 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 16:18:29,156 - core.report_generator - INFO - 算法结果键: ['首次点击归因', '最后点击归因', '描述统计', '相关性分析', '时间趋势分析', 'Markov渠道模型', 'Markov吸收链模型', '多维度归因分析', '分类分析']
2025-08-20 16:18:30,314 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 16:18:30,314 - core.report_generator - INFO - 生成数据概览
2025-08-20 16:18:30,552 - core.report_generator - INFO - 生成算法结果
2025-08-20 16:18:30,552 - core.report_generator - INFO - 生成关键洞察
2025-08-20 16:18:30,552 - core.report_generator - INFO - 生成局限与建议
2025-08-20 16:18:30,552 - core.report_generator - INFO - 分析报告生成完成
2025-08-20 16:18:30,552 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_161830.md
2025-08-20 16:18:30,552 - __main__ - INFO - 智能数据分析完成
2025-08-20 16:27:12,313 - __main__ - INFO - 开始智能数据分析
2025-08-20 16:27:19,964 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 16:27:19,965 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 16:27:19,965 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 16:27:19,965 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 16:27:19,965 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 16:27:19,989 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 16:27:21,756 - core.llm_client - ERROR - OpenAI API调用失败: API调用失败: 401 - {
    "error": {
        "message": "Incorrect API key provided: test-key. You can find your API key at https://platform.openai.com/account/api-keys.",
        "type": "invalid_request_error",
        "param": null,
        "code": "invalid_api_key"
    }
}

2025-08-20 16:27:21,757 - core.llm_client - ERROR - LLM调用失败: API调用失败: 401 - {
    "error": {
        "message": "Incorrect API key provided: test-key. You can find your API key at https://platform.openai.com/account/api-keys.",
        "type": "invalid_request_error",
        "param": null,
        "code": "invalid_api_key"
    }
}

2025-08-20 16:27:21,757 - core.llm_client - WARNING - LLM分析失败: API调用失败: 401 - {
    "error": {
        "message": "Incorrect API key provided: test-key. You can find your API key at https://platform.openai.com/account/api-keys.",
        "type": "invalid_request_error",
        "param": null,
        "code": "invalid_api_key"
    }
}
，使用字段说明分析结果
2025-08-20 16:27:21,757 - core.llm_analyzer - WARNING - LLM分析失败: API调用失败: 401 - {
    "error": {
        "message": "Incorrect API key provided: test-key. You can find your API key at https://platform.openai.com/account/api-keys.",
        "type": "invalid_request_error",
        "param": null,
        "code": "invalid_api_key"
    }
}

2025-08-20 16:27:21,757 - __main__ - WARNING - LLM分析失败: API调用失败: 401 - {
    "error": {
        "message": "Incorrect API key provided: test-key. You can find your API key at https://platform.openai.com/account/api-keys.",
        "type": "invalid_request_error",
        "param": null,
        "code": "invalid_api_key"
    }
}

2025-08-20 16:27:21,758 - __main__ - INFO - 使用备用分析结果: {'field_analyses': [{'field_name': 'order_number', 'data_type': 'object', 'business_meaning': '订单编号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.0}, {'field_name': 'order_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.8155382837604673}, {'field_name': 'wish_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '心愿单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.5001978693429154}, {'field_name': 'intention_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.7431655928956992), 'unique_ratio': 0.2336282905671727}, {'field_name': 'deposit_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.47982524179633707), 'unique_ratio': 0.4575214094629035}, {'field_name': 'lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '锁单时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5029205515014326), 'unique_ratio': 0.4383993161635509}, {'field_name': 'final_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '尾款支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.802463077580612), 'unique_ratio': 0.1846991594510313}, {'field_name': 'delivery_date', 'data_type': 'datetime64[ns]', 'business_meaning': '交付完成时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5842211071185475), 'unique_ratio': 0.36608994348851565}, {'field_name': 'blind_lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '盲锁时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9994301362924034), 'unique_ratio': 0.0005698637075965998}, {'field_name': 'approve_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '退款审批通过时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8458202080002533), 'unique_ratio': 0.1476580184572523}, {'field_name': 'order_cancel_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单取消时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8832729172272965), 'unique_ratio': 0.11360866192835546}, {'field_name': 'hold_set_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold发起时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0436420622734396}, {'field_name': 'hold_release_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold解除时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8390293321513937), 'unique_ratio': 0.15226441676032482}, {'field_name': 'clue_create_date', 'data_type': 'datetime64[ns]', 'business_meaning': '建档时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.830228103778513}, {'field_name': 'first_test_drive_time', 'data_type': 'datetime64[ns]', 'business_meaning': '首次试驾时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.6475234673040697), 'unique_ratio': 0.3196460513193928}, {'field_name': 'clue_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8340430247099235}, {'field_name': 'intention_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9344181849840913), 'unique_ratio': 0.06425213303151663}, {'field_name': 'deposit_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9129058300223196), 'unique_ratio': 0.08315261266680386}, {'field_name': 'clue_first_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索首次创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8364174568249094}, {'field_name': 'blind_lock_status', 'data_type': 'object', 'business_meaning': '盲锁状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_enterprise', 'data_type': 'object', 'business_meaning': '大客户标识', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0013296819843920662), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_hold', 'data_type': 'object', 'business_meaning': '是否hold', 'field_type': 'varchar', 'missing_ratio': np.float64(0.8975353394646447), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'hold_type', 'data_type': 'object', 'business_meaning': 'hold类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'hold_reason', 'data_type': 'object', 'business_meaning': 'hold原因', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0006490114447627942}, {'field_name': 'user_type', 'data_type': 'object', 'business_meaning': '用户类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'user_code', 'data_type': 'object', 'business_meaning': '主理编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.04110933468412138}, {'field_name': 'wish_number', 'data_type': 'float64', 'business_meaning': '心愿单号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.0006015228024630776, 'min_value': np.float64(20220300000000.0), 'max_value': np.float64(20250400000000.0), 'mean_value': np.float64(20249291221727.066), 'std_value': np.float64(3814100011.102841)}, {'field_name': 'main_lead_id', 'data_type': 'object', 'business_meaning': '线索ID', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25078751998480364}, {'field_name': 'unique_clue_id', 'data_type': 'object', 'business_meaning': '唯一线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'first_main_lead_id', 'data_type': 'object', 'business_meaning': '首触主线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'big_channel_name', 'data_type': 'object', 'business_meaning': '线索大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_name', 'data_type': 'object', 'business_meaning': '线索中渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_name', 'data_type': 'object', 'business_meaning': '线索小渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'sales_count', 'data_type': 'object', 'business_meaning': '销售报表计量分类', 'field_type': 'varchar', 'missing_ratio': np.float64(6.331818973295554e-05), 'unique_ratio': 9.49772845994333e-05}, {'field_name': 'big_channel_code', 'data_type': 'object', 'business_meaning': '线索大渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_code', 'data_type': 'object', 'business_meaning': '线索中渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_code', 'data_type': 'object', 'business_meaning': '线索小渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'first_big_channel_name', 'data_type': 'object', 'business_meaning': '线索首触大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'series', 'data_type': 'object', 'business_meaning': '车系名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'product_name', 'data_type': 'object', 'business_meaning': '商品名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.0010447501305937664}, {'field_name': 'order_status', 'data_type': 'object', 'business_meaning': '订单状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'vehicle_status', 'data_type': 'object', 'business_meaning': '车辆状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.5075427793519384), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'model_year', 'data_type': 'object', 'business_meaning': '年款', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'child_region_name', 'data_type': 'object', 'business_meaning': '销售小区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0009656023934275719}, {'field_name': 'parent_region_manager', 'data_type': 'object', 'business_meaning': '大区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00014246592689914995}, {'field_name': 'region_name', 'data_type': 'object', 'business_meaning': '大区名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'city_name', 'data_type': 'object', 'business_meaning': '门店所在城市', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0011713865100596774), 'unique_ratio': 0.002168647998353727}, {'field_name': 'dealer_code', 'data_type': 'object', 'business_meaning': '门店编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'dealer_name', 'data_type': 'object', 'business_meaning': '门店简称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'store_create_date', 'data_type': 'object', 'business_meaning': '门店开业日期', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.004717205135105187}, {'field_name': 'province_name', 'data_type': 'object', 'business_meaning': '门店所在省份', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0004590568755639276}, {'field_name': 'user_name', 'data_type': 'object', 'business_meaning': '用户主理姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.039827141342029033}, {'field_name': 'delivery_agent_name', 'data_type': 'object', 'business_meaning': '交付专员姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.4280626216896459), 'unique_ratio': 0.0065376030899276585}, {'field_name': 'war_zone_name', 'data_type': 'object', 'business_meaning': '战区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'war_zone_manager_name', 'data_type': 'object', 'business_meaning': '战区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'bloc_name', 'data_type': 'object', 'business_meaning': '经销商集团名称（投资主体）', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.002469409399585266}, {'field_name': 'bloc_city_code_experience', 'data_type': 'object', 'business_meaning': '经销商集团城市编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.0032925458661136877}, {'field_name': 'etl_load_time', 'data_type': 'datetime64[ns]', 'business_meaning': 'ETL处理时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05}, {'field_name': 'current_retained_locked_count', 'data_type': 'int64', 'business_meaning': '当前留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.008547955613948997), 'std_value': np.float64(0.09205988390464792)}, {'field_name': 'waiting_deposit_count', 'data_type': 'int64', 'business_meaning': '待大定数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.1806309657606889), 'std_value': np.float64(0.3847151710464417)}, {'field_name': 'waiting_lock_count', 'data_type': 'int64', 'business_meaning': '待锁单数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05, 'min_value': np.int64(0), 'max_value': np.int64(0), 'mean_value': np.float64(0.0), 'std_value': np.float64(0.0)}, {'field_name': 'current_period_refund_count', 'data_type': 'int64', 'business_meaning': '当期退订数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.08247194212717458), 'std_value': np.float64(0.27508456651517493)}, {'field_name': 'retained_locked2delivery_count', 'data_type': 'int64', 'business_meaning': '留存锁单本月交付数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.005825273455431909), 'std_value': np.float64(0.07610145412761929)}, {'field_name': 'non_current_month_retained_locked_count', 'data_type': 'int64', 'business_meaning': '非本月留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.014246592689914996), 'std_value': np.float64(0.11850674915137094)}, {'field_name': 'locked_order_count', 'data_type': 'int64', 'business_meaning': '锁单数,以锁单时间为准(该指标可选)', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.49707944849856744), 'std_value': np.float64(0.49999542767250205)}, {'field_name': 'delivered_locked_order_count', 'data_type': 'int64', 'business_meaning': '已交付锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.39461478796321214), 'std_value': np.float64(0.48877166317928883)}, {'field_name': 'lock_base_is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '企微建群锁单基数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3403036107197695), 'std_value': np.float64(0.4738149607114814)}, {'field_name': 'is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '锁单后企微建群数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3349215645924683), 'std_value': np.float64(0.47196677450517915)}, {'field_name': 'launch_time', 'data_type': 'datetime64[ns]', 'business_meaning': '上市时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'intent_pay_start_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金开始时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'region_code', 'data_type': 'object', 'business_meaning': '大区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'child_region_code', 'data_type': 'object', 'business_meaning': '小区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.0009656023934275719}], 'model_recommendations': [{'name': 'correlation_analysis', 'confidence': 0.9, 'reason': '检测到10个数值型字段，适合进行相关性分析', 'params': {'columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}}, {'name': 'categorical_analysis', 'confidence': 0.8, 'reason': '检测到20个分类字段，适合进行分类分析', 'params': {'categorical_columns': ['blind_lock_status', 'is_hold', 'hold_type']}}, {'name': 'time_series_analysis', 'confidence': 0.85, 'reason': '检测到时间字段和数值字段，适合进行时间序列分析', 'params': {'datetime_columns': ['order_create_time', 'wish_create_time'], 'numeric_columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count']}}, {'name': 'first_click_attribution', 'confidence': 0.95, 'reason': '检测到用户ID(order_number)、渠道(blind_lock_status)和时间字段，适合首次点击归因分析', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}}, {'name': 'last_click_attribution', 'confidence': 0.95, 'reason': '检测到用户ID(order_number)、渠道(blind_lock_status)和时间字段，适合最后点击归因分析', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}}, {'name': 'markov_channel_model', 'confidence': 0.85, 'reason': '检测到用户ID(order_number)和渠道(blind_lock_status)，适合Markov渠道模型分析', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}}, {'name': 'markov_absorption_model', 'confidence': 0.85, 'reason': '检测到用户ID(order_number)和渠道(blind_lock_status)，适合Markov吸收链模型分析', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}}, {'name': 'multi_dimension_attribution', 'confidence': 0.85, 'reason': '检测到用户ID(order_number)、渠道(blind_lock_status)和时间维度，适合多维度归因分析', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}}, {'name': 'descriptive_statistics', 'confidence': 0.95, 'reason': '基础描述性统计，适用于所有数据集', 'params': {}}], 'data_quality_assessment': {'completeness': {'order_number': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_create_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'wish_create_time': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'intention_payment_time': {'missing_ratio': np.float64(0.7431655928956992), 'completeness_score': np.float64(0.25683440710430083)}, 'deposit_payment_time': {'missing_ratio': np.float64(0.47982524179633707), 'completeness_score': np.float64(0.5201747582036629)}, 'lock_time': {'missing_ratio': np.float64(0.5029205515014326), 'completeness_score': np.float64(0.49707944849856744)}, 'final_payment_time': {'missing_ratio': np.float64(0.802463077580612), 'completeness_score': np.float64(0.19753692241938803)}, 'delivery_date': {'missing_ratio': np.float64(0.5842211071185475), 'completeness_score': np.float64(0.41577889288145253)}, 'blind_lock_time': {'missing_ratio': np.float64(0.9994301362924034), 'completeness_score': np.float64(0.0005698637075965962)}, 'approve_refund_time': {'missing_ratio': np.float64(0.8458202080002533), 'completeness_score': np.float64(0.15417979199974674)}, 'order_cancel_time': {'missing_ratio': np.float64(0.8832729172272965), 'completeness_score': np.float64(0.1167270827727035)}, 'hold_set_date': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_release_date': {'missing_ratio': np.float64(0.8390293321513937), 'completeness_score': np.float64(0.16097066784860625)}, 'clue_create_date': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_test_drive_time': {'missing_ratio': np.float64(0.6475234673040697), 'completeness_score': np.float64(0.35247653269593027)}, 'clue_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'intention_refund_time': {'missing_ratio': np.float64(0.9344181849840913), 'completeness_score': np.float64(0.06558181501590865)}, 'deposit_refund_time': {'missing_ratio': np.float64(0.9129058300223196), 'completeness_score': np.float64(0.08709416997768038)}, 'clue_first_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'blind_lock_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_enterprise': {'missing_ratio': np.float64(0.0013296819843920662), 'completeness_score': np.float64(0.9986703180156079)}, 'is_hold': {'missing_ratio': np.float64(0.8975353394646447), 'completeness_score': np.float64(0.1024646605353553)}, 'hold_type': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_reason': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'user_type': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'user_code': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'wish_number': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'unique_clue_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'sales_count': {'missing_ratio': np.float64(6.331818973295554e-05), 'completeness_score': np.float64(0.9999366818102671)}, 'big_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'series': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'product_name': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'vehicle_status': {'missing_ratio': np.float64(0.5075427793519384), 'completeness_score': np.float64(0.49245722064806163)}, 'model_year': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'child_region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'parent_region_manager': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'city_name': {'missing_ratio': np.float64(0.0011713865100596774), 'completeness_score': np.float64(0.9988286134899403)}, 'dealer_code': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'dealer_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'store_create_date': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'province_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'user_name': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'delivery_agent_name': {'missing_ratio': np.float64(0.4280626216896459), 'completeness_score': np.float64(0.5719373783103541)}, 'war_zone_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'war_zone_manager_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'bloc_name': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'bloc_city_code_experience': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'etl_load_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_deposit_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_lock_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_period_refund_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'retained_locked2delivery_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'non_current_month_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'delivered_locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'lock_base_is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'launch_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'intent_pay_start_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}, 'child_region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}}, 'consistency': {'wish_number': {'range_check': '[20220300000000.0, 20220300000000.0]', 'outlier_detection': '需要进一步分析'}, 'current_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_deposit_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_lock_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'current_period_refund_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'retained_locked2delivery_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'non_current_month_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'delivered_locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'lock_base_is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}}, 'accuracy': {}}, 'business_insights': ["字段 'order_number': 订单编号", "字段 'order_create_time': 订单创建时间", "字段 'wish_create_time': 心愿单创建时间", "字段 'intention_payment_time': 意向金支付时间", "字段 'deposit_payment_time': 定金支付时间", "字段 'lock_time': 锁单时间", "字段 'final_payment_time': 尾款支付时间", "字段 'delivery_date': 交付完成时间", "字段 'blind_lock_time': 盲锁时间", "字段 'approve_refund_time': 退款审批通过时间", "字段 'order_cancel_time': 订单取消时间", "字段 'hold_set_date': 最近一次hold发起时间", "字段 'hold_release_date': 最近一次hold解除时间", "字段 'clue_create_date': 建档时间", "字段 'first_test_drive_time': 首次试驾时间", "字段 'clue_create_time': 线索创建时间", "字段 'intention_refund_time': 意向金退订时间", "字段 'deposit_refund_time': 定金退订时间", "字段 'clue_first_create_time': 线索首次创建时间", "字段 'blind_lock_status': 盲锁状态", "字段 'is_enterprise': 大客户标识", "字段 'is_hold': 是否hold", "字段 'hold_type': hold类型", "字段 'hold_reason': hold原因", "字段 'user_type': 用户类型", "字段 'user_code': 主理编码", "字段 'wish_number': 心愿单号", "字段 'main_lead_id': 线索ID", "字段 'unique_clue_id': 唯一线索id", "字段 'first_main_lead_id': 首触主线索id", "字段 'big_channel_name': 线索大渠道", "字段 'middle_channel_name': 线索中渠道", "字段 'small_channel_name': 线索小渠道", "字段 'sales_count': 销售报表计量分类", "字段 'big_channel_code': 线索大渠道编码", "字段 'middle_channel_code': 线索中渠道编码", "字段 'small_channel_code': 线索小渠道编码", "字段 'first_big_channel_name': 线索首触大渠道", "字段 'series': 车系名称", "字段 'product_name': 商品名称", "字段 'order_status': 订单状态", "字段 'vehicle_status': 车辆状态", "字段 'model_year': 年款", "字段 'child_region_name': 销售小区", "字段 'parent_region_manager': 大区总", "字段 'region_name': 大区名称", "字段 'city_name': 门店所在城市", "字段 'dealer_code': 门店编码", "字段 'dealer_name': 门店简称", "字段 'store_create_date': 门店开业日期", "字段 'province_name': 门店所在省份", "字段 'user_name': 用户主理姓名", "字段 'delivery_agent_name': 交付专员姓名", "字段 'war_zone_name': 战区", "字段 'war_zone_manager_name': 战区总", "字段 'bloc_name': 经销商集团名称（投资主体）", "字段 'bloc_city_code_experience': 经销商集团城市编码", "字段 'etl_load_time': ETL处理时间", "字段 'current_retained_locked_count': 当前留存锁单数", "字段 'waiting_deposit_count': 待大定数量", "字段 'waiting_lock_count': 待锁单数量", "字段 'current_period_refund_count': 当期退订数", "字段 'retained_locked2delivery_count': 留存锁单本月交付数", "字段 'non_current_month_retained_locked_count': 非本月留存锁单数", "字段 'locked_order_count': 锁单数,以锁单时间为准(该指标可选)", "字段 'delivered_locked_order_count': 已交付锁单数", "字段 'lock_base_is_create_wechat_group': 企微建群锁单基数", "字段 'is_create_wechat_group': 锁单后企微建群数", "字段 'launch_time': 上市时间", "字段 'intent_pay_start_time': 意向金开始时间", "字段 'region_code': 大区编码", "字段 'child_region_code': 小区编码", '数据集包含 63173 条记录，72 个字段', '发现缺失值的字段: wish_create_time, intention_payment_time, deposit_payment_time, lock_time, final_payment_time, delivery_date, blind_lock_time, approve_refund_time, order_cancel_time, hold_set_date, hold_release_date, clue_create_date, first_test_drive_time, clue_create_time, intention_refund_time, deposit_refund_time, clue_first_create_time, is_enterprise, is_hold, hold_type, hold_reason, user_code, wish_number, main_lead_id, unique_clue_id, first_main_lead_id, big_channel_name, middle_channel_name, small_channel_name, sales_count, big_channel_code, middle_channel_code, small_channel_code, first_big_channel_name, vehicle_status, child_region_name, parent_region_manager, region_name, city_name, dealer_code, dealer_name, store_create_date, province_name, user_name, delivery_agent_name, war_zone_name, war_zone_manager_name, bloc_name, bloc_city_code_experience, launch_time, intent_pay_start_time, region_code, child_region_code']}
2025-08-20 16:27:21,760 - __main__ - INFO - 开始执行9个算法
2025-08-20 16:27:21,760 - __main__ - INFO - 执行算法: 相关性分析, 参数: {'columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-20 16:27:21,760 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 16:27:21,767 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 16:27:21,767 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-20 16:27:21,767 - __main__ - INFO - 执行算法: 分类分析, 参数: {'categorical_columns': ['blind_lock_status', 'is_hold', 'hold_type']}
2025-08-20 16:27:21,767 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 16:27:21,781 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 16:27:21,781 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-20 16:27:21,781 - __main__ - INFO - 执行算法: 时间趋势分析, 参数: {'datetime_columns': ['order_create_time', 'wish_create_time'], 'numeric_columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count']}
2025-08-20 16:27:21,781 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 16:27:21,786 - core.algorithm_executor - WARNING - 时间趋势分析数据清洗警告: ['列 wish_create_time 发现 27494 个缺失值']
2025-08-20 16:27:21,810 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 16:27:21,810 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-20 16:27:21,810 - __main__ - INFO - 执行算法: 首次点击归因, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}
2025-08-20 16:27:21,810 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-20 16:27:21,881 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-20 16:27:21,881 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-20 16:27:21,881 - __main__ - INFO - 执行算法: 最后点击归因, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}
2025-08-20 16:27:21,881 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-20 16:27:21,948 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-20 16:27:21,948 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-20 16:27:21,948 - __main__ - INFO - 执行算法: Markov渠道模型, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}
2025-08-20 16:27:21,948 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-20 16:27:22,243 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-20 16:27:22,243 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-20 16:27:22,243 - __main__ - INFO - 执行算法: Markov吸收链模型, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}
2025-08-20 16:27:22,243 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-20 16:27:22,559 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-20 16:27:22,560 - __main__ - INFO - 算法 Markov吸收链模型 执行成功
2025-08-20 16:27:22,560 - __main__ - INFO - 执行算法: 多维度归因分析, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}
2025-08-20 16:27:22,560 - core.algorithm_executor - INFO - 开始执行算法: 多维度归因分析
2025-08-20 16:27:22,573 - core.algorithm_executor - WARNING - 多维度归因分析数据清洗警告: ['使用 20/20 个时间列', '发现 673653 个缺失值']
2025-08-20 16:27:22,677 - core.algorithm_executor - INFO - 算法 多维度归因分析 执行完成
2025-08-20 16:27:22,677 - __main__ - INFO - 算法 多维度归因分析 执行成功
2025-08-20 16:27:22,677 - __main__ - INFO - 执行算法: 描述统计, 参数: {}
2025-08-20 16:27:22,677 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 16:27:23,074 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 16:27:23,074 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 16:27:23,074 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 16:27:23,074 - core.report_generator - INFO - 算法结果键: ['相关性分析', '分类分析', '时间趋势分析', '首次点击归因', '最后点击归因', 'Markov渠道模型', 'Markov吸收链模型', '多维度归因分析', '描述统计']
2025-08-20 16:27:24,287 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 16:27:24,287 - core.report_generator - INFO - 生成数据概览
2025-08-20 16:27:24,533 - core.report_generator - INFO - 生成算法结果
2025-08-20 16:27:24,533 - core.report_generator - INFO - 生成关键洞察
2025-08-20 16:27:24,534 - core.report_generator - INFO - 生成局限与建议
2025-08-20 16:27:24,534 - core.report_generator - INFO - 分析报告生成完成
2025-08-20 16:27:24,534 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_162724.md
2025-08-20 16:27:24,534 - __main__ - INFO - 智能数据分析完成
2025-08-20 16:31:25,671 - __main__ - INFO - 开始智能数据分析
2025-08-20 16:31:33,406 - utils.data_loader - WARNING - 工作表 'None' 不存在，使用工作表: Sheet1
2025-08-20 16:31:33,406 - utils.data_loader - INFO - 成功加载Excel文件: data/整车订单状态指标表.xlsx, 工作表: None, 形状: (63173, 72)
2025-08-20 16:31:33,406 - utils.data_loader - INFO - 数据验证通过: (63173, 72)
2025-08-20 16:31:33,406 - __main__ - INFO - 使用LLM进行智能分析
2025-08-20 16:31:33,407 - core.llm_analyzer - INFO - 开始使用LLM进行智能分析（以字段说明为主）
2025-08-20 16:31:33,430 - core.llm_analyzer - INFO - 成功加载字段说明文档: data/Copy of 整车订单状态指标表字段说明.xlsx，共74个字段
2025-08-20 16:31:35,594 - core.llm_client - ERROR - OpenAI API调用失败: API调用失败: 429 - {
    "error": {
        "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.",
        "type": "insufficient_quota",
        "param": null,
        "code": "insufficient_quota"
    }
}

2025-08-20 16:31:35,594 - core.llm_client - ERROR - LLM调用失败: API调用失败: 429 - {
    "error": {
        "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.",
        "type": "insufficient_quota",
        "param": null,
        "code": "insufficient_quota"
    }
}

2025-08-20 16:31:35,594 - core.llm_client - WARNING - LLM分析失败: API调用失败: 429 - {
    "error": {
        "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.",
        "type": "insufficient_quota",
        "param": null,
        "code": "insufficient_quota"
    }
}
，使用字段说明分析结果
2025-08-20 16:31:35,595 - core.llm_analyzer - WARNING - LLM分析失败: API调用失败: 429 - {
    "error": {
        "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.",
        "type": "insufficient_quota",
        "param": null,
        "code": "insufficient_quota"
    }
}

2025-08-20 16:31:35,595 - __main__ - WARNING - LLM分析失败: API调用失败: 429 - {
    "error": {
        "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.",
        "type": "insufficient_quota",
        "param": null,
        "code": "insufficient_quota"
    }
}

2025-08-20 16:31:35,595 - __main__ - INFO - 使用备用分析结果: {'field_analyses': [{'field_name': 'order_number', 'data_type': 'object', 'business_meaning': '订单编号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.0}, {'field_name': 'order_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.8155382837604673}, {'field_name': 'wish_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '心愿单创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.5001978693429154}, {'field_name': 'intention_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.7431655928956992), 'unique_ratio': 0.2336282905671727}, {'field_name': 'deposit_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.47982524179633707), 'unique_ratio': 0.4575214094629035}, {'field_name': 'lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '锁单时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5029205515014326), 'unique_ratio': 0.4383993161635509}, {'field_name': 'final_payment_time', 'data_type': 'datetime64[ns]', 'business_meaning': '尾款支付时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.802463077580612), 'unique_ratio': 0.1846991594510313}, {'field_name': 'delivery_date', 'data_type': 'datetime64[ns]', 'business_meaning': '交付完成时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.5842211071185475), 'unique_ratio': 0.36608994348851565}, {'field_name': 'blind_lock_time', 'data_type': 'datetime64[ns]', 'business_meaning': '盲锁时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9994301362924034), 'unique_ratio': 0.0005698637075965998}, {'field_name': 'approve_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '退款审批通过时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8458202080002533), 'unique_ratio': 0.1476580184572523}, {'field_name': 'order_cancel_time', 'data_type': 'datetime64[ns]', 'business_meaning': '订单取消时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8832729172272965), 'unique_ratio': 0.11360866192835546}, {'field_name': 'hold_set_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold发起时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0436420622734396}, {'field_name': 'hold_release_date', 'data_type': 'datetime64[ns]', 'business_meaning': '最近一次hold解除时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.8390293321513937), 'unique_ratio': 0.15226441676032482}, {'field_name': 'clue_create_date', 'data_type': 'datetime64[ns]', 'business_meaning': '建档时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.830228103778513}, {'field_name': 'first_test_drive_time', 'data_type': 'datetime64[ns]', 'business_meaning': '首次试驾时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.6475234673040697), 'unique_ratio': 0.3196460513193928}, {'field_name': 'clue_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8340430247099235}, {'field_name': 'intention_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9344181849840913), 'unique_ratio': 0.06425213303151663}, {'field_name': 'deposit_refund_time', 'data_type': 'datetime64[ns]', 'business_meaning': '定金退订时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.9129058300223196), 'unique_ratio': 0.08315261266680386}, {'field_name': 'clue_first_create_time', 'data_type': 'datetime64[ns]', 'business_meaning': '线索首次创建时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.8364174568249094}, {'field_name': 'blind_lock_status', 'data_type': 'object', 'business_meaning': '盲锁状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_enterprise', 'data_type': 'object', 'business_meaning': '大客户标识', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0013296819843920662), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'is_hold', 'data_type': 'object', 'business_meaning': '是否hold', 'field_type': 'varchar', 'missing_ratio': np.float64(0.8975353394646447), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'hold_type', 'data_type': 'object', 'business_meaning': 'hold类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'hold_reason', 'data_type': 'object', 'business_meaning': 'hold原因', 'field_type': 'varchar', 'missing_ratio': np.float64(0.9550915739319012), 'unique_ratio': 0.0006490114447627942}, {'field_name': 'user_type', 'data_type': 'object', 'business_meaning': '用户类型', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'user_code', 'data_type': 'object', 'business_meaning': '主理编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.04110933468412138}, {'field_name': 'wish_number', 'data_type': 'float64', 'business_meaning': '心愿单号', 'field_type': 'varchar', 'missing_ratio': np.float64(0.43521757712946985), 'unique_ratio': 0.0006015228024630776, 'min_value': np.float64(20220300000000.0), 'max_value': np.float64(20250400000000.0), 'mean_value': np.float64(20249291221727.066), 'std_value': np.float64(3814100011.102841)}, {'field_name': 'main_lead_id', 'data_type': 'object', 'business_meaning': '线索ID', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25078751998480364}, {'field_name': 'unique_clue_id', 'data_type': 'object', 'business_meaning': '唯一线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'first_main_lead_id', 'data_type': 'object', 'business_meaning': '首触主线索id', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.25028097446694}, {'field_name': 'big_channel_name', 'data_type': 'object', 'business_meaning': '线索大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_name', 'data_type': 'object', 'business_meaning': '线索中渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_name', 'data_type': 'object', 'business_meaning': '线索小渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'sales_count', 'data_type': 'object', 'business_meaning': '销售报表计量分类', 'field_type': 'varchar', 'missing_ratio': np.float64(6.331818973295554e-05), 'unique_ratio': 9.49772845994333e-05}, {'field_name': 'big_channel_code', 'data_type': 'object', 'business_meaning': '线索大渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'middle_channel_code', 'data_type': 'object', 'business_meaning': '线索中渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.00033242049609801655}, {'field_name': 'small_channel_code', 'data_type': 'object', 'business_meaning': '线索小渠道编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 0.0019945229765880993}, {'field_name': 'first_big_channel_name', 'data_type': 'object', 'business_meaning': '线索首触大渠道', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023475218843493264), 'unique_ratio': 3.165909486647777e-05}, {'field_name': 'series', 'data_type': 'object', 'business_meaning': '车系名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'product_name', 'data_type': 'object', 'business_meaning': '商品名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.0010447501305937664}, {'field_name': 'order_status', 'data_type': 'object', 'business_meaning': '订单状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'vehicle_status', 'data_type': 'object', 'business_meaning': '车辆状态', 'field_type': 'varchar', 'missing_ratio': np.float64(0.5075427793519384), 'unique_ratio': 0.00022161366406534436}, {'field_name': 'model_year', 'data_type': 'object', 'business_meaning': '年款', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'child_region_name', 'data_type': 'object', 'business_meaning': '销售小区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0009656023934275719}, {'field_name': 'parent_region_manager', 'data_type': 'object', 'business_meaning': '大区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00014246592689914995}, {'field_name': 'region_name', 'data_type': 'object', 'business_meaning': '大区名称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'city_name', 'data_type': 'object', 'business_meaning': '门店所在城市', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0011713865100596774), 'unique_ratio': 0.002168647998353727}, {'field_name': 'dealer_code', 'data_type': 'object', 'business_meaning': '门店编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'dealer_name', 'data_type': 'object', 'business_meaning': '门店简称', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0071391258923907365}, {'field_name': 'store_create_date', 'data_type': 'object', 'business_meaning': '门店开业日期', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.004717205135105187}, {'field_name': 'province_name', 'data_type': 'object', 'business_meaning': '门店所在省份', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0005698637075965998), 'unique_ratio': 0.0004590568755639276}, {'field_name': 'user_name', 'data_type': 'object', 'business_meaning': '用户主理姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.023601855222959177), 'unique_ratio': 0.039827141342029033}, {'field_name': 'delivery_agent_name', 'data_type': 'object', 'business_meaning': '交付专员姓名', 'field_type': 'varchar', 'missing_ratio': np.float64(0.4280626216896459), 'unique_ratio': 0.0065376030899276585}, {'field_name': 'war_zone_name', 'data_type': 'object', 'business_meaning': '战区', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'war_zone_manager_name', 'data_type': 'object', 'business_meaning': '战区总', 'field_type': 'varchar', 'missing_ratio': np.float64(0.021480695866905167), 'unique_ratio': 4.748864229971665e-05}, {'field_name': 'bloc_name', 'data_type': 'object', 'business_meaning': '经销商集团名称（投资主体）', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.002469409399585266}, {'field_name': 'bloc_city_code_experience', 'data_type': 'object', 'business_meaning': '经销商集团城市编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006173523498963165), 'unique_ratio': 0.0032925458661136877}, {'field_name': 'etl_load_time', 'data_type': 'datetime64[ns]', 'business_meaning': 'ETL处理时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05}, {'field_name': 'current_retained_locked_count', 'data_type': 'int64', 'business_meaning': '当前留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.008547955613948997), 'std_value': np.float64(0.09205988390464792)}, {'field_name': 'waiting_deposit_count', 'data_type': 'int64', 'business_meaning': '待大定数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.1806309657606889), 'std_value': np.float64(0.3847151710464417)}, {'field_name': 'waiting_lock_count', 'data_type': 'int64', 'business_meaning': '待锁单数量', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 1.5829547433238884e-05, 'min_value': np.int64(0), 'max_value': np.int64(0), 'mean_value': np.float64(0.0), 'std_value': np.float64(0.0)}, {'field_name': 'current_period_refund_count', 'data_type': 'int64', 'business_meaning': '当期退订数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.08247194212717458), 'std_value': np.float64(0.27508456651517493)}, {'field_name': 'retained_locked2delivery_count', 'data_type': 'int64', 'business_meaning': '留存锁单本月交付数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.005825273455431909), 'std_value': np.float64(0.07610145412761929)}, {'field_name': 'non_current_month_retained_locked_count', 'data_type': 'int64', 'business_meaning': '非本月留存锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.014246592689914996), 'std_value': np.float64(0.11850674915137094)}, {'field_name': 'locked_order_count', 'data_type': 'int64', 'business_meaning': '锁单数,以锁单时间为准(该指标可选)', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.49707944849856744), 'std_value': np.float64(0.49999542767250205)}, {'field_name': 'delivered_locked_order_count', 'data_type': 'int64', 'business_meaning': '已交付锁单数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.39461478796321214), 'std_value': np.float64(0.48877166317928883)}, {'field_name': 'lock_base_is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '企微建群锁单基数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3403036107197695), 'std_value': np.float64(0.4738149607114814)}, {'field_name': 'is_create_wechat_group', 'data_type': 'int64', 'business_meaning': '锁单后企微建群数', 'field_type': 'bigint', 'missing_ratio': np.float64(0.0), 'unique_ratio': 3.165909486647777e-05, 'min_value': np.int64(0), 'max_value': np.int64(1), 'mean_value': np.float64(0.3349215645924683), 'std_value': np.float64(0.47196677450517915)}, {'field_name': 'launch_time', 'data_type': 'datetime64[ns]', 'business_meaning': '上市时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'intent_pay_start_time', 'data_type': 'datetime64[ns]', 'business_meaning': '意向金开始时间', 'field_type': 'datetime', 'missing_ratio': np.float64(0.03713611827837842), 'unique_ratio': 6.331818973295554e-05}, {'field_name': 'region_code', 'data_type': 'object', 'business_meaning': '大区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.00017412502176562773}, {'field_name': 'child_region_code', 'data_type': 'object', 'business_meaning': '小区编码', 'field_type': 'varchar', 'missing_ratio': np.float64(0.0006965000870625109), 'unique_ratio': 0.0009656023934275719}], 'model_recommendations': [{'name': 'correlation_analysis', 'confidence': 0.9, 'reason': '检测到10个数值型字段，适合进行相关性分析', 'params': {'columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}}, {'name': 'categorical_analysis', 'confidence': 0.8, 'reason': '检测到20个分类字段，适合进行分类分析', 'params': {'categorical_columns': ['blind_lock_status', 'is_hold', 'hold_type']}}, {'name': 'time_series_analysis', 'confidence': 0.85, 'reason': '检测到时间字段和数值字段，适合进行时间序列分析', 'params': {'datetime_columns': ['order_create_time', 'wish_create_time'], 'numeric_columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count']}}, {'name': 'first_click_attribution', 'confidence': 0.95, 'reason': '检测到用户ID(order_number)、渠道(blind_lock_status)和时间字段，适合首次点击归因分析', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}}, {'name': 'last_click_attribution', 'confidence': 0.95, 'reason': '检测到用户ID(order_number)、渠道(blind_lock_status)和时间字段，适合最后点击归因分析', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}}, {'name': 'markov_channel_model', 'confidence': 0.85, 'reason': '检测到用户ID(order_number)和渠道(blind_lock_status)，适合Markov渠道模型分析', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}}, {'name': 'markov_absorption_model', 'confidence': 0.85, 'reason': '检测到用户ID(order_number)和渠道(blind_lock_status)，适合Markov吸收链模型分析', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}}, {'name': 'multi_dimension_attribution', 'confidence': 0.85, 'reason': '检测到用户ID(order_number)、渠道(blind_lock_status)和时间维度，适合多维度归因分析', 'params': {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}}, {'name': 'descriptive_statistics', 'confidence': 0.95, 'reason': '基础描述性统计，适用于所有数据集', 'params': {}}], 'data_quality_assessment': {'completeness': {'order_number': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_create_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'wish_create_time': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'intention_payment_time': {'missing_ratio': np.float64(0.7431655928956992), 'completeness_score': np.float64(0.25683440710430083)}, 'deposit_payment_time': {'missing_ratio': np.float64(0.47982524179633707), 'completeness_score': np.float64(0.5201747582036629)}, 'lock_time': {'missing_ratio': np.float64(0.5029205515014326), 'completeness_score': np.float64(0.49707944849856744)}, 'final_payment_time': {'missing_ratio': np.float64(0.802463077580612), 'completeness_score': np.float64(0.19753692241938803)}, 'delivery_date': {'missing_ratio': np.float64(0.5842211071185475), 'completeness_score': np.float64(0.41577889288145253)}, 'blind_lock_time': {'missing_ratio': np.float64(0.9994301362924034), 'completeness_score': np.float64(0.0005698637075965962)}, 'approve_refund_time': {'missing_ratio': np.float64(0.8458202080002533), 'completeness_score': np.float64(0.15417979199974674)}, 'order_cancel_time': {'missing_ratio': np.float64(0.8832729172272965), 'completeness_score': np.float64(0.1167270827727035)}, 'hold_set_date': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_release_date': {'missing_ratio': np.float64(0.8390293321513937), 'completeness_score': np.float64(0.16097066784860625)}, 'clue_create_date': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_test_drive_time': {'missing_ratio': np.float64(0.6475234673040697), 'completeness_score': np.float64(0.35247653269593027)}, 'clue_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'intention_refund_time': {'missing_ratio': np.float64(0.9344181849840913), 'completeness_score': np.float64(0.06558181501590865)}, 'deposit_refund_time': {'missing_ratio': np.float64(0.9129058300223196), 'completeness_score': np.float64(0.08709416997768038)}, 'clue_first_create_time': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'blind_lock_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_enterprise': {'missing_ratio': np.float64(0.0013296819843920662), 'completeness_score': np.float64(0.9986703180156079)}, 'is_hold': {'missing_ratio': np.float64(0.8975353394646447), 'completeness_score': np.float64(0.1024646605353553)}, 'hold_type': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'hold_reason': {'missing_ratio': np.float64(0.9550915739319012), 'completeness_score': np.float64(0.04490842606809875)}, 'user_type': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'user_code': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'wish_number': {'missing_ratio': np.float64(0.43521757712946985), 'completeness_score': np.float64(0.5647824228705302)}, 'main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'unique_clue_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_main_lead_id': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'sales_count': {'missing_ratio': np.float64(6.331818973295554e-05), 'completeness_score': np.float64(0.9999366818102671)}, 'big_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'middle_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'small_channel_code': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'first_big_channel_name': {'missing_ratio': np.float64(0.023475218843493264), 'completeness_score': np.float64(0.9765247811565068)}, 'series': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'product_name': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'order_status': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'vehicle_status': {'missing_ratio': np.float64(0.5075427793519384), 'completeness_score': np.float64(0.49245722064806163)}, 'model_year': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'child_region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'parent_region_manager': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'region_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'city_name': {'missing_ratio': np.float64(0.0011713865100596774), 'completeness_score': np.float64(0.9988286134899403)}, 'dealer_code': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'dealer_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'store_create_date': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'province_name': {'missing_ratio': np.float64(0.0005698637075965998), 'completeness_score': np.float64(0.9994301362924034)}, 'user_name': {'missing_ratio': np.float64(0.023601855222959177), 'completeness_score': np.float64(0.9763981447770408)}, 'delivery_agent_name': {'missing_ratio': np.float64(0.4280626216896459), 'completeness_score': np.float64(0.5719373783103541)}, 'war_zone_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'war_zone_manager_name': {'missing_ratio': np.float64(0.021480695866905167), 'completeness_score': np.float64(0.9785193041330948)}, 'bloc_name': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'bloc_city_code_experience': {'missing_ratio': np.float64(0.0006173523498963165), 'completeness_score': np.float64(0.9993826476501037)}, 'etl_load_time': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_deposit_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'waiting_lock_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'current_period_refund_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'retained_locked2delivery_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'non_current_month_retained_locked_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'delivered_locked_order_count': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'lock_base_is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'is_create_wechat_group': {'missing_ratio': np.float64(0.0), 'completeness_score': np.float64(1.0)}, 'launch_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'intent_pay_start_time': {'missing_ratio': np.float64(0.03713611827837842), 'completeness_score': np.float64(0.9628638817216216)}, 'region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}, 'child_region_code': {'missing_ratio': np.float64(0.0006965000870625109), 'completeness_score': np.float64(0.9993034999129375)}}, 'consistency': {'wish_number': {'range_check': '[20220300000000.0, 20220300000000.0]', 'outlier_detection': '需要进一步分析'}, 'current_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_deposit_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'waiting_lock_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'current_period_refund_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'retained_locked2delivery_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'non_current_month_retained_locked_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'delivered_locked_order_count': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'lock_base_is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}, 'is_create_wechat_group': {'range_check': '[0, 0]', 'outlier_detection': '需要进一步分析'}}, 'accuracy': {}}, 'business_insights': ["字段 'order_number': 订单编号", "字段 'order_create_time': 订单创建时间", "字段 'wish_create_time': 心愿单创建时间", "字段 'intention_payment_time': 意向金支付时间", "字段 'deposit_payment_time': 定金支付时间", "字段 'lock_time': 锁单时间", "字段 'final_payment_time': 尾款支付时间", "字段 'delivery_date': 交付完成时间", "字段 'blind_lock_time': 盲锁时间", "字段 'approve_refund_time': 退款审批通过时间", "字段 'order_cancel_time': 订单取消时间", "字段 'hold_set_date': 最近一次hold发起时间", "字段 'hold_release_date': 最近一次hold解除时间", "字段 'clue_create_date': 建档时间", "字段 'first_test_drive_time': 首次试驾时间", "字段 'clue_create_time': 线索创建时间", "字段 'intention_refund_time': 意向金退订时间", "字段 'deposit_refund_time': 定金退订时间", "字段 'clue_first_create_time': 线索首次创建时间", "字段 'blind_lock_status': 盲锁状态", "字段 'is_enterprise': 大客户标识", "字段 'is_hold': 是否hold", "字段 'hold_type': hold类型", "字段 'hold_reason': hold原因", "字段 'user_type': 用户类型", "字段 'user_code': 主理编码", "字段 'wish_number': 心愿单号", "字段 'main_lead_id': 线索ID", "字段 'unique_clue_id': 唯一线索id", "字段 'first_main_lead_id': 首触主线索id", "字段 'big_channel_name': 线索大渠道", "字段 'middle_channel_name': 线索中渠道", "字段 'small_channel_name': 线索小渠道", "字段 'sales_count': 销售报表计量分类", "字段 'big_channel_code': 线索大渠道编码", "字段 'middle_channel_code': 线索中渠道编码", "字段 'small_channel_code': 线索小渠道编码", "字段 'first_big_channel_name': 线索首触大渠道", "字段 'series': 车系名称", "字段 'product_name': 商品名称", "字段 'order_status': 订单状态", "字段 'vehicle_status': 车辆状态", "字段 'model_year': 年款", "字段 'child_region_name': 销售小区", "字段 'parent_region_manager': 大区总", "字段 'region_name': 大区名称", "字段 'city_name': 门店所在城市", "字段 'dealer_code': 门店编码", "字段 'dealer_name': 门店简称", "字段 'store_create_date': 门店开业日期", "字段 'province_name': 门店所在省份", "字段 'user_name': 用户主理姓名", "字段 'delivery_agent_name': 交付专员姓名", "字段 'war_zone_name': 战区", "字段 'war_zone_manager_name': 战区总", "字段 'bloc_name': 经销商集团名称（投资主体）", "字段 'bloc_city_code_experience': 经销商集团城市编码", "字段 'etl_load_time': ETL处理时间", "字段 'current_retained_locked_count': 当前留存锁单数", "字段 'waiting_deposit_count': 待大定数量", "字段 'waiting_lock_count': 待锁单数量", "字段 'current_period_refund_count': 当期退订数", "字段 'retained_locked2delivery_count': 留存锁单本月交付数", "字段 'non_current_month_retained_locked_count': 非本月留存锁单数", "字段 'locked_order_count': 锁单数,以锁单时间为准(该指标可选)", "字段 'delivered_locked_order_count': 已交付锁单数", "字段 'lock_base_is_create_wechat_group': 企微建群锁单基数", "字段 'is_create_wechat_group': 锁单后企微建群数", "字段 'launch_time': 上市时间", "字段 'intent_pay_start_time': 意向金开始时间", "字段 'region_code': 大区编码", "字段 'child_region_code': 小区编码", '数据集包含 63173 条记录，72 个字段', '发现缺失值的字段: wish_create_time, intention_payment_time, deposit_payment_time, lock_time, final_payment_time, delivery_date, blind_lock_time, approve_refund_time, order_cancel_time, hold_set_date, hold_release_date, clue_create_date, first_test_drive_time, clue_create_time, intention_refund_time, deposit_refund_time, clue_first_create_time, is_enterprise, is_hold, hold_type, hold_reason, user_code, wish_number, main_lead_id, unique_clue_id, first_main_lead_id, big_channel_name, middle_channel_name, small_channel_name, sales_count, big_channel_code, middle_channel_code, small_channel_code, first_big_channel_name, vehicle_status, child_region_name, parent_region_manager, region_name, city_name, dealer_code, dealer_name, store_create_date, province_name, user_name, delivery_agent_name, war_zone_name, war_zone_manager_name, bloc_name, bloc_city_code_experience, launch_time, intent_pay_start_time, region_code, child_region_code']}
2025-08-20 16:31:35,596 - __main__ - INFO - 开始执行9个算法
2025-08-20 16:31:35,596 - __main__ - INFO - 执行算法: 相关性分析, 参数: {'columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count', 'current_period_refund_count', 'retained_locked2delivery_count']}
2025-08-20 16:31:35,596 - core.algorithm_executor - INFO - 开始执行算法: 相关性分析
2025-08-20 16:31:35,599 - core.algorithm_executor - INFO - 算法 相关性分析 执行完成
2025-08-20 16:31:35,599 - __main__ - INFO - 算法 相关性分析 执行成功
2025-08-20 16:31:35,599 - __main__ - INFO - 执行算法: 分类分析, 参数: {'categorical_columns': ['blind_lock_status', 'is_hold', 'hold_type']}
2025-08-20 16:31:35,599 - core.algorithm_executor - INFO - 开始执行算法: 分类分析
2025-08-20 16:31:35,607 - core.algorithm_executor - INFO - 算法 分类分析 执行完成
2025-08-20 16:31:35,607 - __main__ - INFO - 算法 分类分析 执行成功
2025-08-20 16:31:35,607 - __main__ - INFO - 执行算法: 时间趋势分析, 参数: {'datetime_columns': ['order_create_time', 'wish_create_time'], 'numeric_columns': ['current_retained_locked_count', 'waiting_deposit_count', 'waiting_lock_count']}
2025-08-20 16:31:35,607 - core.algorithm_executor - INFO - 开始执行算法: 时间趋势分析
2025-08-20 16:31:35,609 - core.algorithm_executor - WARNING - 时间趋势分析数据清洗警告: ['列 wish_create_time 发现 27494 个缺失值']
2025-08-20 16:31:35,628 - core.algorithm_executor - INFO - 算法 时间趋势分析 执行完成
2025-08-20 16:31:35,628 - __main__ - INFO - 算法 时间趋势分析 执行成功
2025-08-20 16:31:35,628 - __main__ - INFO - 执行算法: 首次点击归因, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}
2025-08-20 16:31:35,628 - core.algorithm_executor - INFO - 开始执行算法: 首次点击归因
2025-08-20 16:31:35,709 - core.algorithm_executor - INFO - 算法 首次点击归因 执行完成
2025-08-20 16:31:35,709 - __main__ - INFO - 算法 首次点击归因 执行成功
2025-08-20 16:31:35,709 - __main__ - INFO - 执行算法: 最后点击归因, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'event_time_column': 'order_create_time'}
2025-08-20 16:31:35,709 - core.algorithm_executor - INFO - 开始执行算法: 最后点击归因
2025-08-20 16:31:35,785 - core.algorithm_executor - INFO - 算法 最后点击归因 执行完成
2025-08-20 16:31:35,785 - __main__ - INFO - 算法 最后点击归因 执行成功
2025-08-20 16:31:35,785 - __main__ - INFO - 执行算法: Markov渠道模型, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}
2025-08-20 16:31:35,785 - core.algorithm_executor - INFO - 开始执行算法: Markov渠道模型
2025-08-20 16:31:36,100 - core.algorithm_executor - INFO - 算法 Markov渠道模型 执行完成
2025-08-20 16:31:36,100 - __main__ - INFO - 算法 Markov渠道模型 执行成功
2025-08-20 16:31:36,100 - __main__ - INFO - 执行算法: Markov吸收链模型, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}
2025-08-20 16:31:36,100 - core.algorithm_executor - INFO - 开始执行算法: Markov吸收链模型
2025-08-20 16:31:36,429 - core.algorithm_executor - INFO - 算法 Markov吸收链模型 执行完成
2025-08-20 16:31:36,429 - __main__ - INFO - 算法 Markov吸收链模型 执行成功
2025-08-20 16:31:36,429 - __main__ - INFO - 执行算法: 多维度归因分析, 参数: {'user_id_column': 'order_number', 'channel_column': 'blind_lock_status', 'datetime_columns': ['order_create_time', 'wish_create_time', 'intention_payment_time', 'deposit_payment_time', 'lock_time', 'final_payment_time', 'delivery_date', 'blind_lock_time', 'approve_refund_time', 'order_cancel_time', 'hold_set_date', 'hold_release_date', 'clue_create_date', 'first_test_drive_time', 'intention_refund_time', 'deposit_refund_time', 'store_create_date', 'etl_load_time', 'launch_time', 'intent_pay_start_time']}
2025-08-20 16:31:36,429 - core.algorithm_executor - INFO - 开始执行算法: 多维度归因分析
2025-08-20 16:31:36,441 - core.algorithm_executor - WARNING - 多维度归因分析数据清洗警告: ['使用 20/20 个时间列', '发现 673653 个缺失值']
2025-08-20 16:31:36,542 - core.algorithm_executor - INFO - 算法 多维度归因分析 执行完成
2025-08-20 16:31:36,542 - __main__ - INFO - 算法 多维度归因分析 执行成功
2025-08-20 16:31:36,542 - __main__ - INFO - 执行算法: 描述统计, 参数: {}
2025-08-20 16:31:36,542 - core.algorithm_executor - INFO - 开始执行算法: 描述统计
2025-08-20 16:31:36,946 - core.algorithm_executor - INFO - 算法 描述统计 执行完成
2025-08-20 16:31:36,946 - __main__ - INFO - 算法 描述统计 执行成功
2025-08-20 16:31:36,946 - core.report_generator - INFO - 开始生成图表，算法结果类型: <class 'dict'>
2025-08-20 16:31:36,946 - core.report_generator - INFO - 算法结果键: ['相关性分析', '分类分析', '时间趋势分析', '首次点击归因', '最后点击归因', 'Markov渠道模型', 'Markov吸收链模型', '多维度归因分析', '描述统计']
2025-08-20 16:31:38,168 - core.report_generator - INFO - 开始生成分析报告
2025-08-20 16:31:38,168 - core.report_generator - INFO - 生成数据概览
2025-08-20 16:31:38,428 - core.report_generator - INFO - 生成算法结果
2025-08-20 16:31:38,428 - core.report_generator - INFO - 生成关键洞察
2025-08-20 16:31:38,428 - core.report_generator - INFO - 生成局限与建议
2025-08-20 16:31:38,428 - core.report_generator - INFO - 分析报告生成完成
2025-08-20 16:31:38,430 - core.report_generator - INFO - 报告已保存到: ./output/analysis_report_20250820_163138.md
2025-08-20 16:31:38,430 - __main__ - INFO - 智能数据分析完成
